<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='all_seasons' inline='true' name='federated.0vogvmp1ad9bb314qykfu195emnd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='all_seasons' name='textscan.057ab5o0vbizib1como9u0mhi4wk'>
            <connection class='textscan' directory='/Users/dominic/Desktop/Node/data_science/Project I' filename='all_seasons.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.057ab5o0vbizib1como9u0mhi4wk' name='all_seasons.csv' table='[all_seasons#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='it_IT'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='player_name' ordinal='1' />
            <column datatype='string' name='team_abbreviation' ordinal='2' />
            <column datatype='string' name='age' ordinal='3' />
            <column datatype='string' name='player_height' ordinal='4' />
            <column datatype='string' name='player_weight' ordinal='5' />
            <column datatype='string' name='college' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='string' name='draft_year' ordinal='8' />
            <column datatype='string' name='draft_round' ordinal='9' />
            <column datatype='string' name='draft_number' ordinal='10' />
            <column datatype='integer' name='gp' ordinal='11' />
            <column datatype='string' name='pts' ordinal='12' />
            <column datatype='string' name='reb' ordinal='13' />
            <column datatype='string' name='ast' ordinal='14' />
            <column datatype='string' name='net_rating' ordinal='15' />
            <column datatype='string' name='oreb_pct' ordinal='16' />
            <column datatype='string' name='dreb_pct' ordinal='17' />
            <column datatype='string' name='usg_pct' ordinal='18' />
            <column datatype='string' name='ts_pct' ordinal='19' />
            <column datatype='string' name='ast_pct' ordinal='20' />
            <column datatype='string' name='season' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.057ab5o0vbizib1como9u0mhi4wk' name='all_seasons.csv' table='[all_seasons#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='it_IT'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='player_name' ordinal='1' />
            <column datatype='string' name='team_abbreviation' ordinal='2' />
            <column datatype='string' name='age' ordinal='3' />
            <column datatype='string' name='player_height' ordinal='4' />
            <column datatype='string' name='player_weight' ordinal='5' />
            <column datatype='string' name='college' ordinal='6' />
            <column datatype='string' name='country' ordinal='7' />
            <column datatype='string' name='draft_year' ordinal='8' />
            <column datatype='string' name='draft_round' ordinal='9' />
            <column datatype='string' name='draft_number' ordinal='10' />
            <column datatype='integer' name='gp' ordinal='11' />
            <column datatype='string' name='pts' ordinal='12' />
            <column datatype='string' name='reb' ordinal='13' />
            <column datatype='string' name='ast' ordinal='14' />
            <column datatype='string' name='net_rating' ordinal='15' />
            <column datatype='string' name='oreb_pct' ordinal='16' />
            <column datatype='string' name='dreb_pct' ordinal='17' />
            <column datatype='string' name='usg_pct' ordinal='18' />
            <column datatype='string' name='ts_pct' ordinal='19' />
            <column datatype='string' name='ast_pct' ordinal='20' />
            <column datatype='string' name='season' ordinal='21' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_name]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>player_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team_abbreviation]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>team_abbreviation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_height]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>player_height</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_weight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_weight]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>player_weight</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>college</remote-name>
            <remote-type>129</remote-type>
            <local-name>[college]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>college</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_year]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>draft_year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_round</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_round]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>draft_round</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_number]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>draft_number</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gp]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>gp</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pts</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pts]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>pts</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reb</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reb]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>reb</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ast</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ast]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>ast</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[net_rating]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>net_rating</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oreb_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[oreb_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>oreb_pct</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dreb_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dreb_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>dreb_pct</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usg_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usg_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>usg_pct</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ts_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ts_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>ts_pct</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ast_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ast_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>ast_pct</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='AVG(FLOAT([player_height]))' datatype='real' name='[Calculation_4382213590881890308]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(FLOAT([player_height]))' />
      </column>
      <column caption='AVG(FLOAT([Player Weight]))' datatype='real' name='[Calculation_4382213590882009093]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG(FLOAT([player_weight]))' />
      </column>
      <column aggregation='Sum' caption='peso_rounded' datatype='real' name='[Calculation_4382213590882725897]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='ROUND(FLOAT([player_weight]))' />
      </column>
      <column aggregation='Sum' caption='Intervalli di Peso' datatype='integer' name='[Calculation_4382213590889959434]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Calculation_4382213590882725897]&lt;=70 THEN 70 ELSEIF [Calculation_4382213590882725897]&gt;70 and [Calculation_4382213590882725897]&lt;=80 THEN 80&#10;ELSEIF  [Calculation_4382213590882725897]&gt;80 and [Calculation_4382213590882725897]&lt;=90 THEN 90&#10;ELSEIF  [Calculation_4382213590882725897]&gt;90 and [Calculation_4382213590882725897]&lt;=100 THEN 100&#10;ELSEIF  [Calculation_4382213590882725897]&gt;100 and [Calculation_4382213590882725897]&lt;=110 THEN 110&#10;ELSEIF [Calculation_4382213590882725897]&gt;110 and [Calculation_4382213590882725897]&lt;=120 THEN 120&#10;ELSEIF [Calculation_4382213590882725897]&gt;120 and [Calculation_4382213590882725897]&lt;=130 THEN 130&#10;ELSEIF [Calculation_4382213590882725897]&gt;130 and [Calculation_4382213590882725897]&lt;=140 THEN 140&#10;ELSEIF [Calculation_4382213590882725897]&gt;140 THEN 150 END' />
      </column>
      <column caption='conteggio' datatype='integer' name='[Calculation_4382213590891913227]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([player_name])' />
      </column>
      <column aggregation='Sum' caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213590892998668]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
      </column>
      <column caption='Punti per stagione' datatype='real' name='[Calculation_4382213591250685967]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([pts])' />
      </column>
      <column aggregation='Sum' caption='Intervallo di altezza' datatype='integer' name='[Calculation_4382213591251492880]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='if [Calculation_4382213590892998668] &lt;=170 THEN 170 &#10;ELSEIF [Calculation_4382213590892998668] &gt;170 and [Calculation_4382213590892998668] &lt;=180 THEN 180&#10;ELSEIF [Calculation_4382213590892998668] &gt;180 and [Calculation_4382213590892998668] &lt;=190 THEN 190&#10;ELSEIF [Calculation_4382213590892998668] &gt;190 and [Calculation_4382213590892998668] &lt;=200 THEN 200&#10;ELSEIF [Calculation_4382213590892998668] &gt;200 and [Calculation_4382213590892998668] &lt;=210 THEN 210&#10;ELSEIF [Calculation_4382213590892998668] &gt;210 and [Calculation_4382213590892998668] &lt;=220 THEN 220&#10;ELSEIF [Calculation_4382213590892998668] &gt; 220 THEN 230 END' />
      </column>
      <column caption='Assist per stagione' datatype='real' name='[Calculation_4382213591253090321]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([ast])' />
      </column>
      <column caption='Rebounds per Stagione' datatype='real' name='[Calculation_4382213591253893138]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([reb])' />
      </column>
      <column aggregation='Sum' caption='EtÃ ' datatype='integer' name='[Calculation_4382213591257546776]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='INT([age])' />
      </column>
      <column caption='%_altezza' datatype='string' name='[Calculation_4382213592290672672]' role='measure' type='nominal'>
        <calculation class='tableau' formula='STR(ROUND(SUM([Calculation_4382213591251492880]) / TOTAL(SUM([Calculation_4382213591251492880])) * 100, 2)) + &quot;%&quot;'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='BMI' datatype='real' name='[Calculation_4382213603165012003]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_4382213590882725897]/(([Calculation_4382213590892998668]/100)*([Calculation_4382213590892998668]/100))' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_seasons.csv' datatype='table' name='[__tableau_internal_object_id__].[all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566]' role='measure' type='quantitative' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='Ast' datatype='string' name='[ast]' role='dimension' type='nominal' />
      <column caption='Ast Pct' datatype='string' name='[ast_pct]' role='dimension' type='nominal' />
      <column caption='College' datatype='string' name='[college]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Draft Number' datatype='string' name='[draft_number]' role='dimension' type='nominal' />
      <column caption='Draft Round' datatype='string' name='[draft_round]' role='dimension' type='nominal' />
      <column caption='Draft Year' datatype='string' name='[draft_year]' role='dimension' type='nominal' />
      <column caption='Dreb Pct' datatype='string' name='[dreb_pct]' role='dimension' type='nominal' />
      <column caption='Gp' datatype='integer' name='[gp]' role='measure' type='quantitative' />
      <column caption='Net Rating' datatype='string' name='[net_rating]' role='dimension' type='nominal' />
      <column caption='Oreb Pct' datatype='string' name='[oreb_pct]' role='dimension' type='nominal' />
      <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
      <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
      <column caption='Player Weight' datatype='string' name='[player_weight]' role='dimension' type='nominal' />
      <column caption='Pts' datatype='string' name='[pts]' role='dimension' type='nominal' />
      <column caption='Reb' datatype='string' name='[reb]' role='dimension' type='nominal' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Team Abbreviation' datatype='string' name='[team_abbreviation]' role='dimension' type='nominal' />
      <column caption='Ts Pct' datatype='string' name='[ts_pct]' role='dimension' type='nominal' />
      <column caption='Usg Pct' datatype='string' name='[usg_pct]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_4382213590892998668]' derivation='Avg' name='[avg:Calculation_4382213590892998668:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213591250685967]' derivation='Avg' name='[avg:Calculation_4382213591250685967:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213591253090321]' derivation='Avg' name='[avg:Calculation_4382213591253090321:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213591253893138]' derivation='Avg' name='[avg:Calculation_4382213591253893138:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213603165012003]' derivation='Avg' name='[avg:Calculation_4382213603165012003:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213591253090321]' derivation='Max' name='[max:Calculation_4382213591253090321:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213591253893138]' derivation='Max' name='[max:Calculation_4382213591253893138:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213590889959434]' derivation='None' name='[none:Calculation_4382213590889959434:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_4382213590892998668]' derivation='None' name='[none:Calculation_4382213590892998668:ok]' pivot='key' type='ordinal' />
      <column-instance column='[player_name]' derivation='None' name='[none:player_name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4382213590891913227]' derivation='User' name='[usr:Calculation_4382213590891913227:qk]' pivot='key' type='quantitative' />
      <group caption='Azione (Country)' hidden='true' name='[Action (Country)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country]' />
        </groupfilter>
      </group>
      <group caption='Azione (EtÃ )' hidden='true' name='[Action (EtÃ )]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_4382213591257546776]' />
        </groupfilter>
      </group>
      <group caption='Azione (Intervalli di Peso,Altezza (arrotondata))' hidden='true' name='[Action (Intervalli di Peso,Altezza (arrotondata))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_4382213590889959434]' />
          <groupfilter function='level-members' level='[Calculation_4382213590892998668]' />
        </groupfilter>
      </group>
      <group caption='Azione (Intervallo di altezza)' hidden='true' name='[Action (Intervallo di altezza)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_4382213591251492880]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_4382213590889959434:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>70</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>110</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>100</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>150</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>130</bucket>
            </map>
            <map to='#e15759'>
              <bucket>90</bucket>
            </map>
            <map to='#edc948'>
              <bucket>120</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>80</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>140</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[max:Calculation_4382213591253090321:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[max:Calculation_4382213591253893138:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213603165012003:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_4382213590892998668:ok]' palette='purple_10_0' type='palette'>
            <map to='#7c4d79'>
              <bucket>231.0</bucket>
            </map>
            <map to='#80517e'>
              <bucket>229.0</bucket>
            </map>
            <map to='#845683'>
              <bucket>226.0</bucket>
            </map>
            <map to='#885b88'>
              <bucket>224.0</bucket>
            </map>
            <map to='#8c5f8c'>
              <bucket>221.0</bucket>
            </map>
            <map to='#916491'>
              <bucket>218.0</bucket>
            </map>
            <map to='#976894'>
              <bucket>216.0</bucket>
            </map>
            <map to='#9d6c97'>
              <bucket>213.0</bucket>
            </map>
            <map to='#a3719a'>
              <bucket>211.0</bucket>
            </map>
            <map to='#a9759c'>
              <bucket>208.0</bucket>
            </map>
            <map to='#b0799f'>
              <bucket>206.0</bucket>
            </map>
            <map to='#b47ea3'>
              <bucket>203.0</bucket>
            </map>
            <map to='#b983a7'>
              <bucket>201.0</bucket>
            </map>
            <map to='#be88ab'>
              <bucket>198.0</bucket>
            </map>
            <map to='#c28db0'>
              <bucket>196.0</bucket>
            </map>
            <map to='#c792b5'>
              <bucket>193.0</bucket>
            </map>
            <map to='#cb97b9'>
              <bucket>191.0</bucket>
            </map>
            <map to='#cf9dbd'>
              <bucket>188.0</bucket>
            </map>
            <map to='#d3a2c2'>
              <bucket>185.0</bucket>
            </map>
            <map to='#d7a7c7'>
              <bucket>183.0</bucket>
            </map>
            <map to='#dcadcd'>
              <bucket>180.0</bucket>
            </map>
            <map to='#e0b2d2'>
              <bucket>178.0</bucket>
            </map>
            <map to='#e4b7d7'>
              <bucket>175.0</bucket>
            </map>
            <map to='#e8bddc'>
              <bucket>168.0</bucket>
            </map>
            <map to='#ebc3e0'>
              <bucket>165.0</bucket>
            </map>
            <map to='#eec9e5'>
              <bucket>160.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:player_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aaron Henry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Adreian Payne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alekesej Pokusevski&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Allan Ray&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andrae Patterson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Andrew Goudelock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Anthony Carter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Antonio Anderson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Art Long&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ben Handlogten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BJ Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boniface Ndong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brandon Hunter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brian Grant&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bryce Dejean-Jones&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cam Reddish&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Carrick Felix&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Charles Barkley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cherokee Parks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Gatling&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chris Silva&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;CJ Miles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Corey Kispert&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuonzo Martin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Damian Jones&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daniel Gafford&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dario Saric&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Daryl Macon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Davis Bertans&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dell Curry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Deonte Burton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Derrick Rose&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Devin Green&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dillon Brooks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Donatas Motiejunas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Doug McDermott&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Dwight Buycks&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eddie Griffin&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Elliot Perry&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Eric Moreland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Etdrick Bohannon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Frank Mason&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Garret Siler&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Georges Niang&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;God Shammgod&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greg Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Harrison Barnes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Horace Grant&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Isaac Bonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ivan Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jack White&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jake LaRavia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamal Cain&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;James Jones&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JaMychal Green&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jarrell Brantley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jason Sasser&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jaylen Nowell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeff Trepagnier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jermaine O&apos;Neal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jimmer Fredette&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Joe Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;John Coker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Johnny Juzang&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan Bell&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jose Alvarado&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Josh Okogie&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Julius Randle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Juwan Howard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Keith Benson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kendall Gill&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kessler Edwards&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kevin Willis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Klay Thompson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyle Korver&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Landry Shamet&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawrence Moten&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lionel Simmons&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lucious Harris&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M.J. Walker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Malik Newman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marcus Georges-Hunt&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mark Blount&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marko Simonovic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Matisse Thybulle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maurice Carter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Bradley&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Michael Sweetney&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mike Tobey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Miye Oni&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mychel Thompson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Neemias Queta&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nicolas Claxton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;O.J. Mayo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Orien Greene&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pascal Siakam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paul Pierce&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pierre Jackson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Quincy Pondexter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Randy Holcomb&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reggie Bullock&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rick Brunson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Robert Pack&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rodrick Rhodes&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Royce O&apos;Neale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ryan Hollins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Samaki Walker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Scotty Hopson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sergei Monia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Shareef Abdur-Rahim&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sim Bhullar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Stanley Roberts&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Steven Adams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tarence Kinsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Terry Davis&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tiago Splitter&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tobias Harris&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tony Parker&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Travis Williams&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trey Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyler Dorsey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tyrus Thomas&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Victor Oladipo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Voshon Lenard&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wesley Johnson&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Willy Hernangomez&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yuta Watanabe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zoran Planinic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A.C. Green&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Adam Keefe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Al-Farouq Aminu&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alex Scales&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alvin Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andrea Bargnani&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Angel Delgado&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Anthony Peeler&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Arinze Onuaku&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Axel Toupane&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bill Curley&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bobby Jones&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brandin Knight&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brent Price&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bruce Bowen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;C.J. Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carldell Johnson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cedric Henderson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Charlie Villanueva&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chris Clemons&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chris Morris&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Christian Wood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cody Zeller&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Courtney Fortson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dajuan Wagner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dan Dickau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Danny Green&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Darrell Armstrong&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;David Vanterpool&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DeAndre&apos; Bembry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Deng Gai&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Derrick Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Detlef Schrempf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dexter Pittman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominick Barlow&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Donte Greene&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Duane Ferrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Earl Watson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elden Campbell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eric Bledsoe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Erik Daniels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Feron Hunt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Furkan Korkmaz&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gary Trent Jr.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gian Clavell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greg Anderson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hakeem Olajuwon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Henry Sims&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ike Austin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isaiah Roby&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jabari Bird&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jae Crowder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jalen McDaniels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Anderson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;James Wiseman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jared Terrell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jason Hart&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jaxson Hayes&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeff Foster&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jeremy Lin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jerrelle Benimon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joe Alexander&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Joel Przybilla&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;John Starks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonathan Gibson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan Mickey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Josh Harrellson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Juan Toscano-Anderson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Justin Minaya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kay Felder&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kelly McCarty&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kent Bazemore&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kevin Love&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kim English&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kristaps Porzingis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lamar Stevens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Larry Sanders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lester Hudson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lou Amundson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Luke Kornet&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malcolm Lee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marco Belinelli&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mario Bennett&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mark West&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Martin Muursepp&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Matt Ryan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Melvin Frazier Jr.&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michael Kidd-Gilchrist&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mike Harris&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Miroslav Raduljica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moses Brown&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nate Robinson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nick Johnson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Noah Vonleh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Olumide Oyedeji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;P.J. Dozier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Patrick Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pete Chilcutt&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Primoz Brezec&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rajon Rondo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rawle Marshall&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Renaldo Major&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rob Edwards&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rodney Buford&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ronnie Brewer&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Russ Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sam Dekker&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Scott Brooks&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sean Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shane Battier&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shawnelle Scott&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Soumaila Samake&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Steve Francis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;T.J. McConnell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Terrance Ferguson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Theron Smith&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tim Quarterman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tony Battie&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trajan Langdon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trevon Scott&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Troy Williams&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tyrese Haliburton&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vassilis Spanoulis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vitaly Potapenko&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wayne Ellington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;William Cunningham&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yakhouba Diawara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zeke Nnaji&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aaron Brooks&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Admiral Schofield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alando Tucker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexis Ajinca&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Amile Jefferson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andrew Bogut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anthony Avent&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Antoine Carr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arnett Moultrie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Baron Davis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Billy Thomas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bogdan Bogdanovic&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brandon Boston Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brian Bowen II&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bruno Sundov&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caleb Houstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Carlos Delfino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chance Comanche&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chauncey Billups&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chris Duarte&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chris Porter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chucky Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Collin Sexton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Craig Ehlo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dale Davis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dan McClintock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Danuel House&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darrin Hancock&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;David West&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DeJon Jarreau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dennis Schroder&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Derrick Dial&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Devin Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dickey Simpkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Don Reid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dorell Wright&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dusty Hannahs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ed Pinckney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Elie Okobo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eric Maynor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ersan Ilyasova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Francisco Garcia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gabriel Deck&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;George King&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Glen Davis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Greg Dreiling&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hamidou Diallo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hersey Hawkins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ime Udoka&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Isaiah Todd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jabari Smith Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jahmi&apos;us Ramsey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jalen Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;James Cotton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamie Watson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jaren Jackson Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jason Maxiell&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jaylen Adams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeff McInnis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeremy Tyler&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jeryl Sasser&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Joe Crispin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Johan Petro&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;John Wallace&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jonathon Simmons&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan Sibert&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Josh Jackson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Julian Champagnie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Justin Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keifer Sykes&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kemba Walker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Keon Clark&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kevin Pangos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kirk Penney&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyle Alexander&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lance Allred&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lauri Markkanen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Lindsey Hunter&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Loy Vaught&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Luke Zeller&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malik Beasley&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marcus Cousin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mario Kasun&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Markieff Morris&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Marvin Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Matt Williams Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meyers Leonard&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Michael Redd&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mike Penberthy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mitch Richmond&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moussa Diabate&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Naz Mitrou-Long&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nickeil Alexander-Walker&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norman Richardson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Omer Asik&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paolo Banchero&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Paul George&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Petr Cornelie&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Quincy Acy&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Randolph Childress&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ray Spalding&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Richard Jefferson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Robert Covington&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rodney Purvis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Roshown McLeod&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ryan Arcidiacono&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sam Merrill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Scott Williams&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Semaj Christon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shannon Brown&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sheldon Mac&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spud Webb&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Steve Kerr&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taj Gibson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Terrence Jones&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thomas Robinson&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timothe Luwawu-Cabarrot&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tony Dumas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Travis Knight&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trevor Keels&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tyler Bey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tyrone Hill&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Viacheslav Kravtsov&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vladimir Stepania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wendell Carter Jr.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Willie Cauley-Stein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yi Jianlian&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zhou Qi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Aaron Miles&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AJ Green&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alen Smailagic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alondes Williams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andre Dawkins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Andrew Nicholson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Anthony Goldwire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antonio Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ashton Hagans&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ben Simmons&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Blue Edwards&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bostjan Nachbar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brandon Paul&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brian Shaw&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bryon Russell&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameron McGriff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Casey Shaw&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Charles Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chris Andersen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chris Jent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chris Webber&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cliff Alexander&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Corsley Edwards&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;D.J. Kennedy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Damion James&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Daniel Orton&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Darius Johnson-Odom&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;David Harrison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;De&apos;Andre Hunter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DeMar DeRozan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Derek Grimm&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Derrick Zimmerman&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Devon Dotson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dionte Christmas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Donny Marshall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dragan Tarlac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dylan Windler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eddie Robinson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Elton Brand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eric Riley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Evan Mobley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Franz Wagner&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gary Clark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gerald Fitch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gordon Hayward&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greg Stiemsma&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hassan Adams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Howard Eisley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isaiah Canaan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ivica Zubac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jacob Gilyard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jakob Poeltl&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamal Robinson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;James Posey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jared Butler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jarrod Uthoff&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jason Williams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jayson Williams&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jemerrio Jones&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jerome Beasley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jimmy Oliver&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Joe Wieskamp&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;John Henson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jon Barry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan Farmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Boone&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Josh Selby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Justin Anderson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kalin Lucas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keith Langford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kennedy Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kevin Edwards&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Keyon Dooling&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kornel David&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kyle Singler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Laron Profit&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leandro Barbosa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lonnie Walker IV&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luis Scola&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maciej Lampe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mamadou N&apos;diaye&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marcus Morris Sr.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mark Hendrickson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marquese Chriss&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Matt Carroll&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maurice Taylor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Michael Dickerson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mickell Gladness&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Miles Bridges&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monte Morris&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Naji Marshall&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nenad Krstic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigel Williams-Goss&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;OG Anunoby&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Oshae Brissett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Patricio Garino&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paul Zipser&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pooh Jeter&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qyntel Woods&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rashard Lewis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Reggie Hearn&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ricky Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Robert Traylor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roko Ukic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ruben Nembhard&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ryan Robertson&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Santi Aldama&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sean Higgins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shabazz Muhammad&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Shaun Livingston&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Skylar Mays&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stephen Curry&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Stevin Smith&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tariq Owens&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terry Rozier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tim Duncan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Todd MacCulloch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tornike Shengelia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tremaine Fowlkes&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trey Thompkins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tyler Herro&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;TyTy Washington Jr.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vince Williams Jr.&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wally Szczerbiak&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Will Blalock&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Xavier McDaniel&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zach LaVine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aaron Holiday&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Adrian Caldwell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aleksandar Djordjevic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Allen Crabbe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andray Blatche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Andrew Harrison&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anthony Davis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Antonio Blakeney&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Arvydas Macijauskas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ben Hansbrough&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Blake Ahearn&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bonzi Wells&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brandon Ingram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brian Oliver&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bryce Drew&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cam Thomas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Carsen Edwards&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Charles Bassey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chima Moneke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Herren&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chris Singleton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CJ Wilcox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Corey Maggette&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curtis Borchardt&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Damian Lillard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Daniel Gibson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Darius Bazley&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;David Andersen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Davon Reed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dell Demps&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;DeQuan Jones&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Derrick Walton Jr.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Devin Harris&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dino Radja&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Donell Taylor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Doug Overton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dwight Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eddie House&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Elliot Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eric Murdock&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eugene Omoruyi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Frank Ntilikina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Garrett Temple&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgios Kalaitzakis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Goga Bitadze&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Greg Oden&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harry Giles III&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Horace Jenkins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Isaac Humphries&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ivan McFarlin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jackie Butler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jake Layman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jamal Crawford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;James Lang&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jan Vesely&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jarrett Allen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jason Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jaylin Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jeff Withey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jermaine Taylor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jimmy Butler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Joe Kleine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;John Collins&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Johnny Newman&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jordan Bone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jose Calderon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Josh Powell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Julyan Stone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Juwan Morgan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Keith Bogans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kendall Marshall&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kevin Burleson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kevinn Pinkney&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kobe Bryant&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kyle Kuzma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Langston Galloway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lawrence Roberts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Litterial Green&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luguentz Dort&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maalik Wayns&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malik Rose&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcus Haislip&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mark Bradtke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Markus Howard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Matt Barnes&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maurice Evans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Michael Cage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micheal Williams&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mike Wilks&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mo Bamba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myke Henry&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Negele Knight&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicolas Laprovittola&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Obi Toppin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Orlando Johnson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pat Burke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paul Reed&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;PJ Dozier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quinn Cook&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Randy Livingston&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reggie Evans&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rick Fox&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Robert Parish&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rodrigue Beaubois&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Royce White&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ryan Humphrey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samardo Samuels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Scotty Pippen Jr.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sergey Karasev&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sharife Cooper&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Simone Fontecchio&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Stanley Umude&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Steven Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tari Eason&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Terry Dehere&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tibor Pleiss&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Toby Bailey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tony Smith&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trayvon Palmer&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trey Lyles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyler Ennis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tyshawn Taylor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Viktor Khryapa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wade Baldwin IV&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wesley Matthews&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wilson Chandler&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yves Pons&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zydrunas Ilgauskas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Aaron Gordon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adonal Foyle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alec Burks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alfonzo McKinnie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Amir Coffey&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andrew Bynum&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anthony Bennett&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antoine Rigaudeau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Arnoldas Kulboka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ben Bentil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bimbo Coles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bojan Bogdanovic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brandon Clarke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brian Cardinal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bryant Reeves&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Caleb Martin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlos Rogers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chandler Hutchison&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chaundee Brown Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chris Dudley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chris Quinn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chuma Okeke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Corey Beck&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Craig Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dale Ellis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dan Schayes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Danuel House Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Darrun Hilliard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;David Wingate&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dejounte Murray&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dennis Scott&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Derrick Favors&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Devin Cannady&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Didi Louzada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Donald Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dorian Finney-Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Dwayne Bacon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ed Stokes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Elijah Bryant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eric Mika&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ervin Johnson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Frank Brickowski&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gabriel Lundberg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;George Lynch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Glen Rice&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Greg Foster&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hanno Mottola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hilton Armstrong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Immanuel Quickley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Isaiah Whitehead&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jabari Walker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaime Echenique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamaal Franklin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;James Ennis III&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jamil Wilson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jarnell Stokes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jason Miskiri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jaylen Brown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jeff Nordgaard&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jerian Grant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jevon Carter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Joe Dumars&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;John Amaechi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Johnathan Motley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jonny Flynn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan Williams&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Josh Magette&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Julian Washburn&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Justin Wright-Foreman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Keita Bates-Diop&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ken Johnson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Keon Ellis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kevin Porter Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kirk Snyder&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyle Anderson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lance Stephenson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lavor Postell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lindy Waters III&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luc Longley&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Luol Deng&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malik Fitts&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marcus Derrickson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mario West&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marko Guduric&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mason Jones&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Matthew Dellavedova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mfiondu Kabengele&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Michael Ruffin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mike Scott&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mitchell Butler&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Muggsy Bogues&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Naz Reid&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nico Mannion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norris Cole&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Omer Yurtseven&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pape Sow&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paul Grant&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Peyton Siva&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Quincy Douby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Randolph Morris&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rayjon Tucker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Richard Manning&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robert Franks&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rodney Rogers&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Roy Hibbert&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ryan Bowen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sam Mitchell&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Scottie Barnes&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Semi Ojeleye&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shaq Buchanan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shelvin Mack&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stacey Augmon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Steve Nash&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Talen Horton-Tucker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Terrence Ross&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thomas Welsh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tito Maddox&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tony Farmer&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Travis Leslie&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trevor Winter&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyler Cavanaugh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyrone Nesby&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vic Law&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vlatko Cancar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wendell Moore Jr.&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Willie Green&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yinka Dare&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ziaire Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Acie Law&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Al Jefferson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alex Len&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Alvin Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Andre Owens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anfernee Hardaway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anthony Morrow&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Anzejs Pasecniks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Avery Johnson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bernard James&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bobby Hurley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brandan Wright&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brendan Haywood&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brook Lopez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Byron Scott&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Carl Landry&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cedric Bozeman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Charlie Bell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chris Childs&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chris Mihm&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Christian Koloko&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coby White&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Coty Clarke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Daishen Nix&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Damone Brown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Danny Fortson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Darko Milicic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;David Roddy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DeAndre Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Demetrius Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Deron Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Desmond Mason&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dewayne Dedmon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Domantas Sabonis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Donte DiVincenzo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dru Smith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Earl Clark&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Efthimios Rentzias&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Enes Kanter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Erick Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Felipe Lopez&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Freddie Gillespie&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gary Payton II&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gerard King&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grant Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guy Rucker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Henry Ellenson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Igor Rakocevic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Isaiah Mobley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J.R. Reid&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jaden McDaniels&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jalen Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jamel Artis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;James Webb III&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jared Rhoden&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jason Collier&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jawad Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jeff Dowtin Jr.&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jeremy Evans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jerome Robinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jock Landale&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joel Embiid&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;John Salley&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jonas Valanciunas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan McLaughlin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Josh Green&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Juan Carlos Navarro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Justin Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kasib Powell&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kelenna Azubuike&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kenny Thomas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kevin Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Killian Hayes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kris Humphries&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lamar Odom&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Larry Owens&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leon Powe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lorenzo Brown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luke Jackson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Malcolm Delaney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marcelo Huertas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mardy Collins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mark Price&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martell Webster&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Matt Maloney&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Melvin Booker&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Michael Hawkins&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mike Dunleavy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milton Doyle&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morris Almond&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nate Huffman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nick Collison&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nikola Vucevic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oliver Miller&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ousmane Dieng&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Patrick O&apos;Bryant&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Perry Jones III&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Predrag Savovic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RaiQuan Gray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Raul Neto&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Reggie Williams&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RJ Hunter&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rod Strickland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ronald Dupree&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rui Hachimura&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Salim Stoudamire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sasha Vujacic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sean Rooks&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shamorie Ponds&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shawn Respert&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Solomon Jones&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sterling Brown&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;T.J. Ford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Terence Davis&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Theo Pinson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tim Legler&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Toni Kukoc&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tracy Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Treveon Graham&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Troy Hudson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tyreke Evans&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Usman Garuba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vinny Del Negro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wang Zhi-zhi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Will Solomon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Xavier Tillman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zavier Simpson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A.J. Bramlett&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Adam Mokoka&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alan Anderson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alex Stepheson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Amal McCaskill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andreas Glyniadakis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ansu Sesay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Anthony Randolph&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armen Gilliam&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ayo Dosunmu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bill Wennington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bobby Phills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brandon Armstrong&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brent Scott&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bruce Brown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cade Cunningham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Carlik Jones&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cedric Jackson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Charlie Ward&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Copeland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chris Mullin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chuck Hayes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cole Aldrich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Courtney Lee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dakari Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dan Gadzuric&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Danny Manning&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Darrell Arthur&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;David Vaughn&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dedric Willoughby&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deni Avdija&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Derrick Byars&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DeVaughn Akoon-Purcell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Deyonta Davis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dominique Jones&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dontell Jefferson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Duane Washington Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ed Davis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eldridge Recasner&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eric Dawson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Erik McCree&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Festus Ezeli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabe Pruitt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaylon Nickerson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Giannis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greg Anthony&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hakim Warrick&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henry Walker&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ike Diogu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isaiah Stewart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jabari Brown&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jae&apos;Sean Tate&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jalen Rose&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James Augustine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;James Young&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jarell Eddie&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jason Kapono&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jay Huff&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeff Grayer&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jeremy Pargo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jerry Smith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joe Chealey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Joey Dorsey&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;John Stockton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jonathan Isaac&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan Nwora&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Josh Hart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Juancho Hernangomez&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Justin Patton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kebu Stewart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kelly Olynyk&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kentavious Caldwell-Pope&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kevin Martin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kira Lewis Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kurt Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;LaMarcus Aldridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Larry Stewart&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lester Quinones&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lou Roe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Luke Ridnour&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malcolm Miller&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marcus Banks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mario Chalmers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mark Williams&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marty Conlon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Matt Steigenga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Melvin Sanders&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Michael McDonald&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mike James&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mirsad Turkcan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Moses Moody&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nate Wolters&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nick Richards&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noel Felix&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Omar Cook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;P.J. Tucker&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Patty Mills&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pete Myers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Quentin Grimes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rakeem Christmas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ray Allen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rex Chapman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rob Kurz&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rodney Carney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ronnie Price&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Russell Westbrook&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sam Hauser&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Scott Burrell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sebastian Telfair&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shane Edwards&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shayne Whittington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Speedy Claxton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Steve Goodrich&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;T.J. Warren&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Terrance Roberson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thomas Bryant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tim Thomas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tony Bobbitt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Travis Best&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Trevor Ariza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ty Jerome&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tyrese Martin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vernon Carey Jr.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vitor Faverani&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wayne Selden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;William Howard&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Yante Maten&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zeljko Rebraca&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Abdel Nader&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Al Harrington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alex Garcia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Alton Ford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andre Ingram&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Andy Panko&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Anthony Mason&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Antonis Fotsis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Austin Rivers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Beno Udrih&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Boban Marjanovic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brad Wanamaker&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Brandon Williams&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Britton Johnsen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buddy Hield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caris LeVert&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cat Barber&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Charles Shackleford&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chris Boucher&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chris McCray&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Christian Braun&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Clyde Drexler&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cory Jefferson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dahntay Jones&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Damon Jones&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Danilo Gallinari&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Darius Songaila&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;David Nwaba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dean Wade&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DeMarre Carroll&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dereon Seabron&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Desmond Bane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Devyn Marble&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DJ Strawberry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Donta Smith&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drew Gooden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Earl Barron&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Edwin Ubiles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Emmanuel Mudiay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Erick Barkley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fabricio Oberto&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fred VanVleet&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gary Neal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gerald Wallace&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grant Long&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guillermo Diaz&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Haywoode Workman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ibrahim Kutluay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Isaiah Joe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J.R. Giddens&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jaden Hardy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jalen Harris&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jameel Warney&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;James Southerland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jared Jeffries&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jarvis Varnado&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Javonte Green&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeff Ayres&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jeremiah Martin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jerome Kersey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JJ Redick&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Joel Ayayi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;John Long&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jonah Bolden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jordan Hill&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Josh Giddey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jrue Holiday&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Justin Harper&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Karl Malone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kelan Martin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kenny Satterfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kevin Huerter&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khris Middleton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kostas Papanikolaou&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrylo Fesenko&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Larry Krystkowiak&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lee Mayberry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Loren Woods&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Luke Babbitt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaki Branham&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marc Gasol&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marcus Vinicius&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mark Madsen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marshall Plumlee&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Matt Geiger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;McKinley Wright IV&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Michael Frazier II&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mike Brown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Milos Teodosic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mookie Blaylock&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nate Driggers&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nick Anderson&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nikola Mirotic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oleksiy Pecherov&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Otis Thorpe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Patrick Ewing&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pepe Sanchez&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Precious Achiuwa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rafael Araujo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ratko Varda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Reggie Perry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rik Smits&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Robert Woodard II&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ron Harper Jr.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rudy Gay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saddiq Bey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sasha Kaun&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sean May&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shake Milton&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Shawn Long&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Solomon Alabi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Stephen Zimmerman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sundiata Gaines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tayshaun Prince&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thanasis Antetokounmpo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tim James&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tomas Satoransky&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tracy McGrady&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Trenton Hassell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Troy Caupain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tyler Ulis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Udonis Haslem&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vincent Poirier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Walter McCarty&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Will Magnay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Xavier Silas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Zan Tabak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aaron Gray&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Adonis Jordan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alec Peters&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alize Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Amir Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Andrew DeClercq&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anthony Bowie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antoine Walker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aron Baynes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ben Davis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bismack Biyombo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bol Bol&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brandon Davies&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brian Cook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bryant Stith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Caleb Swanigan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carmelo Anthony&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandler Parsons&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cheick Diallo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Duhon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chris Richard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;CJ Elleby&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Corey Benjamin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Craig Sword&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dalen Terry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dana Barros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DaQuan Jeffries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Darryl Watkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;David Wood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DeJuan Blair&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dennis Smith Jr.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Derrick Jones Jr.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Devin Ebanks&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dijon Thompson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Donald Sloan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Doron Lamb&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dwayne Jones&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eddie Basden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Elijah Hughes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eric Mobley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Esteban Batista&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Frank Jackson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gal Mekel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;George McCloud&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Glenn Robinson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greg Graham&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harold Ellis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hiram Fuller&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ira Bowman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ish Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jack Cooley&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;JaJuan Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaal Magloire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;James Harden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamison Brewer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaron Blossomgame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jason Preston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaylen Hoard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeff Sheppard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jericho Sims&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jim Jackson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Joe Harris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;John Butler Jr.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Johnathan Williams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jontay Porter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jorge Garbajosa&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Josh McRoberts&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Julian Wright&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Justise Winslow&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keith Appling&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ken Norman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Keon Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kevin Salvadori&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kiwane Garris&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kyle Collinsworth&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lance Thomas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lavoy Allen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Linton Johnson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luc Mbah a Moute&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Luther Head&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malik Hairston&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marcus Fizer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MarJon Beauchamp&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marko Jaric&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mason Plumlee&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maurice Ager&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Micah Potter&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Michael Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mike Smith&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mitchell Creek&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mustafa Shakur&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nazr Mohammed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nicolas Batum&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norvel Pelle&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Omri Casspi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pape Sy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paul McPherson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peyton Watson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Quincy Lewis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Randy Brown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Raymond Felton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richaun Holmes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Robert Hite&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rodney Stuckey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Roy Rogers&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ryan Broekhoff&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sam Perkins&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Scottie Lewis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Semih Erden&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Shaquille Harrison&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sherman Douglas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stacey King&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Steve Novak&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tamar Slay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Terrence Williams&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thon Maker&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TJ Leaf&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tony Massenburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Travis Outlaw&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Trey Burke&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyler Cook&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyrone Wallace&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Victor Alexander&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Von Wafer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wenyen Gabriel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Willie Reed&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Yogi Ferrell&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zion Williamson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Aaron Nesmith&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AJ Griffin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alex Abrines&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alonzo Gee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andre Drummond&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Andrew White III&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Anthony Grundy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Antonio Harvey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austin Croshere&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ben Uzoh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bo Outlaw&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bracey Wright&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brandon Roy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brian Skinner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bubba Wells&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cameron Oliver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Casper Ware&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Charles O&apos;Bannon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chris Anstey&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chris Johnson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chris Whitney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Clifford Robinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cory Alexander&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;D.J. Wilson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Damion Lee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daniel Oturu&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Darius Miles&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;David Johnson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;De&apos;Anthony Melton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeMarco Johnson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Derek Harper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;DeSagana Diop&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Devon Hall&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dirk Nowitzki&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Donovan Mitchell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Draymond Green&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dyson Daniels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eddy Curry&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Emanual Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Eric Snow&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Evan Turner&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fred Hoiberg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gary Forbes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gerald Green&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gorgui Dieng&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greg Whittington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hassan Whiteside&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hubert Davis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isaiah Hartenstein&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;J.J. Barea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jacob Pullen&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jalen Brunson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jamal Sampson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;James Robinson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jared Cunningham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jarron Collins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JaVale McGee&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JD Davison&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jerald Honeycutt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jerome Dyson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jiri Welsch&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Joe Wolf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;John Holland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jon Brockman&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Jordan Goodwin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Childress&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Josh Smith&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Justin Champagnie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kaniel Dickens&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Keith McLeod&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kenneth Faried&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kevin Gamble&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khalid El-Amin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kosta Koufos&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyle Weaver&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Larry Drew II&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leandro Bolmaro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lonny Baxter&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luka Doncic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mahmoud Abdul-Rauf&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mangok Mathiang&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marcus Paige&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mark Jackson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marquis Daniels&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Matt Costello&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Max Christie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Michael Doleac&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mikal Bridges&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Miles McBride&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montrezl Harrell&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nando De Colo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nene&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nik Stauskas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ognjen Kuzmic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Othella Harrington&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Patrick Baldwin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pavel Podkolzin&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pooh Richardson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R.J. Hampton&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rasheed Wallace&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Reggie Jackson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ricky Ledo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Robert Werdann&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romeo Langford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ruben Patterson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryan Rollins&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sarunas Jasikevicius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sean Kilpatrick&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shabazz Napier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shavlik Randolph&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slava Medvedenko&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stephen Graham&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Stojko Vrankovic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taurean Green&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Terry Taylor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tim Frazier&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tom Chambers&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Torraye Braggs&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tremont Waters&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tristan Thompson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler Honeycutt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyus Edney&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vincent Askew&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Walt Lemon Jr.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Will Bynum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Xavier Moon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Zach Lofton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Aaron Wiggins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AJ Hammons&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alex Acker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Alonzo Mourning&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andre Emmett&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Andrew Wiggins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Anthony Johnson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antonio Lang&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austin Daye&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ben Wallace&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bob McCann&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brad Lohaus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brandon Rush&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Briante Weber&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Buck Williams&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameron Payne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cassius Stanley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charles Oakley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chris Babb&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chris Kaman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chris Wilcox&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Clifford Rozier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cory Carr&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;D&apos;Angelo Russell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Damir Markota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Daniel Santiago&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Darius Miller&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;David Lee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dean Garrett&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeMarcus Cousins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Derek Hood&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DeShawn Stevenson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Devontae Cacok&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJ Mbenga&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donovan Williams&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Drew Barry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dzanan Musa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond Sumner&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Emanuel Terry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Eric Washington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Evric Gray&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fred Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gary Grant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gerald Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grant Hill&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greivis Vasquez&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hassani Gravett&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ian Clark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isaiah Hicks&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;J.P. Macura&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jacob Wiley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jalen Duren&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaree Bouyea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;James Scott&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jared Dudley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jarron Cumberland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Javaris Crittenton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jeenathan Williams&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jerami Grant&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jerome James&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JJ Hickson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joe Young&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;John Jenkins&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jon Leuer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jordan Hall&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Josh Christopher&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Joshua Primo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Justin Dentmon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kareem Rush&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Keith Tower&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenneth Lofton Jr.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kevin Garnett&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Khalid Reeves&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosta Perovic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyle Wiltjer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Larry Hughes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LeBron James&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lonzo Ball&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Luka Garza&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malachi Flynn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manny Harris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marcus Smart&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mark Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marquis Teague&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Matt Fish&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Max Strus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michael Finley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mike Batiste&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Miles Plumlee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monty Williams&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nassir Little&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nerlens Noel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nikola Jokic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Okaro White&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Othello Hunter&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Patrick Beverley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Payton Pritchard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Popeye Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raef LaFrentz&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rasho Nesterovic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Reggie Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ricky Pierce&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Robert Whaley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ron Baker&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ruben Wolkowyski&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ryan Stack&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sarunas Marciulionis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sean Lampley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shaedon Sharpe&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shawn Bradley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Slavko Vranes&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stephen Howard&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Stromile Swift&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taurean Prince&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Thabo Sefolosha&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tim Hardaway&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tom Gugliotta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Torrey Craig&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Trendon Watford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Troy Bell&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyler Johnson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tyus Jones&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vincent Edwards&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Walt Williams&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Will Cherry&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Xavier Munford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Zach Norvell Jr.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Acie Earl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Al Horford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alex Kirk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Alton Lister&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andre Miller&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Andy Rautins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Anthony Miller&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Antonius Cleveland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Avery Bradley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Benoit Benjamin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bobby Brown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bradley Beal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Braxton Key&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Brodric Thomas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Byron Mullens&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Carl Herrera&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cedi Osman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Charles Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chris Carr&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chris McCullough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Christian Eyenga&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Coby Karl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cory Joseph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dairis Bertans&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Damon Stoudamire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Danny Ferry&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Darius Washington&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;David Robinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deandre Ayton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Demetris Nichols&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DerMarr Johnson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Desmond Ferguson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dewan Hernandez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DJ White&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dontae&apos; Jones&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drew Gordon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Earl Boykins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Edy Tavares&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Enes Freedom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Erick Dampier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Facundo Campazzo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Fred Vinson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gary Payton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gerald Wilkins&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grant Riller&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gustavo Ayon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hedo Turkoglu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ignas Brazdeikis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isaiah Livers&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J.R. Henderson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jaden Ivey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jalen Johnson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jameer Nelson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;James Thomas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jared Reiner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jason Caffey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Javonte Smart&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeff Dowtin&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jeremiah Robinson-Earl&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jerome Moiso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joakim Noah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Joel Bolomboy&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;John Lucas III&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jonas Jerebko&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan Loyd&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Josh Gray&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JT Thor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Justin Holiday&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Karl-Anthony Towns&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Keldon Johnson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kenny Smith&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kevin Johnson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khyri Thomas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kris Dunn&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KZ Okpala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Larry Nance Jr.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lee Nailon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lorenzen Wright&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luke Harangody&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malcolm Brogdon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marc Jackson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marcus Williams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mark Pope&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MarShon Brooks&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Matt Harpring&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mehmet Okur&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Michael Gbinije&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mike Conley&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Milt Palacio&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Moritz Wagner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nate Hinton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nick Calathes&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nikola Pekovic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oliver Lafayette&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Otto Porter Jr.&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Patrick McCaw&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pero Antic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Predrag Drobnjak&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rafer Alston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Raul Lopez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reggie Slater&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RJ Barrett&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Robin Lopez&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ron Mercer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rudy Gobert&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Salah Mejri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sasha Pavlovic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sean McDermott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shammond Williams&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shawn Marion&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Solomon Hill&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Stephon Marbury&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Svi Mykhailiuk&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Terance Mann&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Theo Maledon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tim Kempton&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toney Douglas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tracy Moore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Trevelin Queen&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Troy Daniels&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tyler Zeller&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uros Slokar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vincent Yarbrough&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Walter Sharpe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Will Perdue&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Xavier Sneed&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zarko Cabarkapa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Adam Harrington&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Al Thornton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alex Poythress&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Alvin Sims&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andre Roberson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anfernee Simons&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anthony Parker&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Archie Goodwin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Awvee Storey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bernard Robinson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bobby Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Branden Dawson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brent Barry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Brooks Thompson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;C.J. Watson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Carl Thomas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cedric Ceballos&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Charlie Brown Jr.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chris Chiozza&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chris Mills&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Christian Laettner&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cody Martin&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Courtney Alexander&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DaJuan Summers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Damyean Dotson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Danny Granger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Darnell Jackson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;David Stockton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DeAndre Liggins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deng Adel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Derrick Alston&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Desmond Penigar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dexter Boney&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominic McGuire&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Donte Grantham&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Duane Causwell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Earl Cureton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ekpe Udoh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ennis Whatley&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Erick Strickland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Felton Spencer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Furkan Aldemir&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gary Trent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gheorghe Muresan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Grayson Allen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ha Ha&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Henry James&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ike Anigbogu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isaiah Rider&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ja Morant&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jaden Springer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jalen Lecque&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jamel Thomas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;James White&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jared Sullinger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jason Collins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jawun Evans&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jeff Foote&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jeremy Lamb&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jerome Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jodie Meeks&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Joel Freeland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;John Salmons&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jonathan Bender&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jordan McRae&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Josh Hall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Juan Dixon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Justin James&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kawhi Leonard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Keljin Blevins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenrich Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kevin Knox II&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Killian Tillie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kris Joseph&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lamar Patterson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Larry Robinson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Leon Smith&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lorenzo Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Luke Kennard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malcolm Hill&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marcin Gortat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marial Shayok&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mark Strickland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Martin Lewis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Matt Mooney&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Melvin Ely&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Michael Jordan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mike Hall&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mindaugas Kuzminskas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Morris Peterson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nate McMillan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nick Fazekas&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nikoloz Tskitishvili&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Olivier Sarr&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;P.J. Brown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Patrick Patterson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pervis Ellison&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Priest Lauderdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Raja Bell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rawle Alkins&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Renaldo Balkman&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RJ Nembhard Jr.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rodions Kurucs&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rondae Hollis-Jefferson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rumeal Robinson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sam Cassell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Scot Pollard&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sean Singletary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shandon Anderson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shawne Williams&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sonny Weems&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Steve Blake&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;T.J. Leaf&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Terence Morris&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Theo Ratliff&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tim Ohlbrecht&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tony Allen&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trae Young&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Trevon Duval&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Troy Murphy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tyrell Terry&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vander Blue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vit Krejci&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wayman Tisdale&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;William Avery&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Xavier Tillman Sr.&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zaza Pachulia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aaron Jackson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Adrian Griffin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aleksandar Radojevic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Allen Iverson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andre Barrett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andrew Lang&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Anthony Edwards&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Antonio Burks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arvydas Sabonis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ben McLemore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Blake Griffin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bonzie Colson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brandon Jennings&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brian Roberts&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bryce McGowens&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cameron Bairstow&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cartier Martin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Charles Cooke&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chimezie Metu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chris Hunter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chris Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Clar. Weatherspoon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Corie Blount&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cuttino Mobley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Damien Inglis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Daniel Hamilton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Darius Days&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;David Benoit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Day&apos;Ron Sharpe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Delon Wright&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Derek Anderson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Derrick White&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Devin Robinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dion Glover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Donnell Harvey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Doug West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dwight Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eddie Johnson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Elmer Bennett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eric Paschall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Evan Eschmeyer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Frank Williams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Garrison Mathews&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgios Papagiannis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goran Dragic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Greg Ostertag&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harvey Grant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Horacio Llamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Isaac Okoro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ivan Rabb&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jackson Vroman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jake Tsakalidis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamal Mashburn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;James Michael McAdoo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jannero Pargo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jarrett Culver&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jason Terry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jaysean Paige&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jeffery Taylor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jermareo Davidson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jimmy Carruth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joe Smith&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;John Crotty&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Johnny O&apos;Bryant III&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan Clarkson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joseph Forte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Josh Reaves&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jumaine Jones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kadeem Allen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Keith Booth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kendrick Nunn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kevin Duckworth&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kevon Harris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kobi Simmons&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyle Lowry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;LaPhonso Ellis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lazar Hayward&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lloyd Daniels&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Luis Flores&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mac McClung&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malik Sealy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marcus Landry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mark Bryant&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marlon Garnett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Matt Bonner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Maurice Harkless&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michael Carter-Williams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mickael Gelabale&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mikki Moore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mo Williams&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myles Powell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nemanja Bjelica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Nicolo Melli&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Obinna Ekezie&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orlando Robinson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pat Connaughton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paul Shirley&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;PJ Hairston&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Quinndary Weatherspoon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rashad McCants&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Reggie Geary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rick Hughes&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Robert Sacre&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Roger Mason Jr.&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ruben Boumtje-Boumtje&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ryan Kelly&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samuel Dalembert&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sean Colson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sergio Rodriguez&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sharone Wright&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sindarius Thornwell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stanton Kidd&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Steven Hunter&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tarik Black&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Terry Mills&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tierre Brown&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Todd Day&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tony Snell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tre Jones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trey McKinney-Jones&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyler Hall&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tyson Chandler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vin Baker&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Walker Kessler&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wesley Person&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Xavier Cooks&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zabian Dowdell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zylan Cheatham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aaron Harrison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Adonis Thomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aleem Ford&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Allan Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anderson Varejao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Andrew Gaze&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anthony Brown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antoine Wright&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arron Afflalo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ben Gordon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bison Dele&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bones Hyland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brandon Goodwin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brian Evans&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bryce Cotton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Calvin Booth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Caron Butler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Channing Frye&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cheikh Samb&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris Garner&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chris Robinson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;CJ McCollum&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Corey Brewer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cristiano Felicio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dalibor Bagaric&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Daniel Ewing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darington Hobson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Darvin Ham&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Davion Mitchell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DeJuan Wheat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Denzel Valentine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Derrick McKey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Devin Gray&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dikembe Mutombo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Donald Whiteside&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Doug Christie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dwayne Schintzius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eddie Gill&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Elijah Millsap&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eric Montross&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Etan Thomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Frank Kaminsky&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gani Lawal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;George Zidek&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Glenn Robinson III&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greg Minor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Harold Jamison&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hollis Thompson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ira Newble&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ish Wainright&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jack Haley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JaKarr Sampson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamaal Tinsley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;James Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jamorko Pickett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jarred Vanderbilt&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jason Richardson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jaylen Morris&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeff Teague&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jermaine Jackson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jim McIlvaine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Joe Ingles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;John Celestand&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Johnny Davis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan Adams&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jorge Gutierrez&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Josh Minott&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Julius Hodge&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jusuf Nurkic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Keith Askins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kendall Brown&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kerry Kittles&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kevin Seraphin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;KJ McDaniels&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kyle Guy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Landry Fields&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence Funderburke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lionel Chalmers&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lucas Nogueira&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lynn Greer&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malik Monk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marcus Garrett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mark Baker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marko Milic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mateen Cleaves&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maurice Baker&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Beasley&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Michael Stewart&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mike Taylor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mitchell Robinson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mychal Mulder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ndudi Ebi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicolas Brussino&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;O.G. Anunoby&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Onyeka Okongwu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paris Bass&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paul Millsap&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Phil Pressey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Quincy Miller&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Randy Foye&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Reece Gaines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richie Frahm&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Robert Horry&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rodney White&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Royal Ivey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ryan Gomes&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sam Young&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Scottie Pippen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serge Ibaka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Shaquille O&apos;Neal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sherron Collins&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Stanley Johnson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Steve Scheffler&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tang Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Terry Cummings&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thurl Bailey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;TJ Warren&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tony Mitchell&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Travis Wear&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trey Gilder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyler Davis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tyronn Lue&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Victor Claver&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Vonteego Cummings&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wes Iwundu&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Willie Warren&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yuta Tabuse&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zoran Dragic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A.J. Guyton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Adam Morrison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alan Henderson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alexander Johnson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Amar&apos;e Stoudemire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andrei Kirilenko&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Antawn Jamison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anthony Roberson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Armon Johnson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B.J. Armstrong&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Billy Garrett&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bobby Portis&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brandon Bass&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Brett Szabo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bruno Caboclo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cal Bowdler&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Carlos Arroyo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cedric Simmons&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chase Budinger&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Crawford&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chris Owens&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuck Person&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cole Anthony&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Courtney Sims&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dakota Mathias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dan Langhi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dante Cunningham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Darren Collison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;David Wear&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dee Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dennis Horner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Derrick Caracter&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Devean George&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Diamond Stone&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominique Wilkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dontonio Wingfield&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Duje Dukan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ed Gray&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Elfrid Payton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eric Gordon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Erik Murphy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Flip Murray&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabe Vincent&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Geno Carlisle&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gigi Datome&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greg Brown III&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamady Ndiaye&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Herb Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ike Fontaine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isaiah Taylor&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jabari Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jahidi White&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jalen Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;James Bouknight&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JamesOn Curry&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jarell Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jason Kidd&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jay Scrubb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeff Green&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jeremy Richardson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jerry Stackhouse&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joe Courtney&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Joey Graham&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;John Thomas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jonathan Kerner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jordan Poole&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Josh Howard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Juaquin Hawkins&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Justin Reed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kedrick Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kelly Oubre Jr.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenyon Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kevin Murphy&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kirk Haston&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kwame Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LaMelo Ball&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;LaSalle Thompson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Linas Kleiza&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lou Williams&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luke Schenscher&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malcolm Thomas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marcus Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mario Elie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Markel Brown&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Martynas Andriuskevicius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Matt Thomas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mengke Bateer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michael Olowokandi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mike Miller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mirza Teletovic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Moses Wright&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nathan Jawai&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nick Van Exel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nolan Smith&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Omari Johnson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;P.J. Washington&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pau Gasol&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Peter Aluma&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Quentin Richardson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ramon Sessions&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ray McCallum&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rex Walters&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Robbie Hummel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rodney Hood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ronny Turiaf&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Rusty LaRue&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sam Jacobson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Scott Machado&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sedale Threatt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shane Heal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shea Seals&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spencer Dinwiddie&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Steve Hamer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tacko Fall&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Terrel Harris&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thomas Gardner&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tim Young&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tony Bradley&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Travis Diener&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trevor Booker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ty Lawson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tyrese Maxey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vernon Macklin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vlade Divac&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wayne Simien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Willie Anderson&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yao Ming&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zendon Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aaron Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AJ Price&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alex Caruso&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Alperen Sengun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andre Iguodala&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andris Biedrins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Anthony Lamb&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antonio McDyess&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Austin Reaves&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bennedict Mathurin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bob Sura&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brad Miller&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brandon Sampson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Brice Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Buddy Boeheim&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cameron Reynolds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cassius Winston&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charles R. Jones&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chris Bosh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chris King&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chris Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Clint Capela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cory Higgins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daequan Cook&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Damjan Rudez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Daniel Theis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Darius Morris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;David Noel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dean Oliver&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DeMarcus Nelson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Derek Strong&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Desmon Farmer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Devonte&apos; Graham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJ Stephens&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Donta Hall&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drew Eubanks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;E&apos;Twaun Moore&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eduardo Najera&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Emeka Okafor&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eric Williams&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fab Melo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fred Roberts&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gary Harris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gerald Madkins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Grant Jerrett&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guerschon Yabusele&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haywood Highsmith&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ian Mahinmi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Isaiah Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;J.R. Bremer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jacque Vaughn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jalen Green&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamario Moon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;James Singleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jared Harper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jarvis Hayes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Javin DeLaurier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jeff Adrien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jerel McNeal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jerome Jordan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JJ O&apos;Brien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Joel Anthony&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;John Konchar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jon Teske&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jordan Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Josh Davis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JR Smith&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Justin Hamilton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Karim Mane&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Keith Van Horn&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kenny Anderson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kevin Hervey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Khem Birch&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kostas Antetokounmpo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kyrie Irving&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Larry Johnson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ledell Eackles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Loren Meyer&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Luka Samanic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malachi Richardson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manu Ginobili&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marcus Thornton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mark Macon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marreese Speights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Matt Freije&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maxi Kleber&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Michael Foster Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mike Bibby&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miles Simon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moochie Norris&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nate Darling&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nic Claxton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nikola Jovic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Olden Polynice&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Othyus Jeffers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Patrick Christopher&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Peja Stojakovic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pops Mensah-Bonsu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rafael Addison&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rasual Butler&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Reggie Miller&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ricky Rubio&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Robert Williams III&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ron Harper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rudy Fernandez&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saben Lee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sasha Danilovic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sean Marks&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shai Gilgeous-Alexander&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Shawn Kemp&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Smush Parker&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Stephen Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sun Sun&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taylor Griffin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Thaddeus Young&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tim Hardaway Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tom Hammonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toure&apos; Murry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trent Forrest&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Troy Brown Jr.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tyler Lydon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Udoka Azubuike&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vincent Hunter&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Walter Herrmann&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Will Conroy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Xavier Rathan-Mayes&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Zach Randolph&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aaron McKie&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ahmad Caver&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aleksej Pokusevski&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Allonzo Trier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andre Brown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Andrew Nembhard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Anthony Gill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Antonio Daniels&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ashraf Amaya&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ben Moore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Blake Wesley&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boris Diaw&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brandon Knight&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brian Scalabrine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bryn Forbes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameron Johnson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Casey Jacobsen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Charles Jenkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chinanu Onuaku&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chris Jefferies&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chris Taft&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cleanthony Early&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Corliss Williamson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;D.J. Augustin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Damien Wilkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Daniel Ochefu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Darius Garland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;David Duke Jr.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;De&apos;Aaron Fox&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delonte West&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Derek Fisher&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Derrick Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Devin Vassell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dion Waiters&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Donnie Boyce&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dragan Bender&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dwyane Wade&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eddie Jones&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Elmore Spencer&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eric Piatkowski&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Evan Fournier&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Frankie King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Garth Joseph&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gerald Brown&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gordan Giricek&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greg Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hasheem Thabeet&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hot Rod Williams&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Isaiah Briscoe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ivano Newbill&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jacob Evans&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jake Voskuhl&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jamal Murray&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;James Nunnally&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JaQuori McLaughlin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jarrett Jack&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jason Thompson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jayson Tatum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jelani McCoy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jerome Allen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jimmy King&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joe Stephens&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;John Edwards&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Johnny Taylor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jordan Crawford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Akognon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Josh Richardson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Junior Harrington&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kai Jones&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keith Closs&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kendrick Perkins&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kevin Durant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kevon Looney&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korleone Young&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kyle O&apos;Quinn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lari Ketner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lazaro Borrell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;London Perrantes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Luis Montero&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maceo Baston&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mamadi Diakite&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marcus Morris&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mark Davis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marques Bolden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Matt Bullard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maurice Ndour&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michael Curry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mickael Pietrus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mile Ilic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monta Ellis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myles Turner&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nemanja Nedovic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigel Hayes&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ochai Agbaji&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oscar Torres&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Pat Garrity&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Paul Watson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;PJ Tucker&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Quinton Ross&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rashad Vaughn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Reggie Hanson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rick Mahorn&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Robert Swift&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Roger Powell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ruben Garces&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ryan Reid&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sandro Mamukelashvili&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sean Elliott&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Seth Curry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sharrod Ford&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Skal Labissiere&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Stephane Lasme&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steven Smith&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tariq Abdul-Wahad&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terry Porter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tim Breaux&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Todd Fuller&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tony Wroten&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tre Mann&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Trey Murphy III&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyler Hansbrough&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tyson Wheeler&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vince Carter&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Walker Russell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Will Barton&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Xavier Henry&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zach Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A.J. Lawson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ade Murkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alan Williams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Alexey Shved&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Amida Brimah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andres Nocioni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ante Zizic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anthony Tolliver&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Armoni Brooks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bam Adebayo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Billy Owens&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bobby Simmons&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brandon Boston&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brevin Knight&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bruno Fernando&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Calbert Cheaney&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Carlos Boozer&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cezary Trybanski&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chasson Randle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Douglas-Roberts&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chris Paul&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chucky Atkins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cole Swider&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Craig Brackins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dalano Banton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dan Majerle&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dante Exum&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Darrick Martin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;David Wesley&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Deividas Sirvydis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dennis Rodman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Derrick Coleman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Devin Booker&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Diante Garrett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Don MacLean&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Donyell Marshall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Duncan Robinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ed O&apos;Bannon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Elias Harris&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eric Leckner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ernest Brown&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Francisco Elson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabe York&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;George Hill&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gilbert Arenas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greg Buckner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Hamed Haddadi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Herbert Jones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iman Shumpert&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Isaiah Thomas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jabari Smith&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jahlil Okafor&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jalen Suggs&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;James Collins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamie Feick&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jaren Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jason Lawson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jay Williams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeff Hornacek&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jeremy Sochan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jerryd Bayless&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joe Crawford&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Joffrey Lauvergne&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;John Wall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jonathan Kuminga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan Schakel&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Josh Huestis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jud Buechler&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Justin Robinson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Keegan Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kelvin Cato&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenyon Martin Jr.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kevin Ollie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kirk Hinrich&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ky Bowman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lamond Murray&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latrell Sprewell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Lindell Wigginton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Louis King&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luke Walton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malik Allen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marcus Camby&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mario Hezonja&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Markelle Fultz&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marvin Bagley III&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Matt Walsh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Metta World Peace&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Michael Porter Jr.&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mike Muscala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mitch McGary&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mouhamed Sene&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nathan Knight&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nick Young&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norman Powell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Omari Spellman&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pablo Prigioni&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paul Davis&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peter John Ramos&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Quenton Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Randell Jackson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ray Owes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Richard Hamilton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Robert Archibald&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rodney McGruder&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rony Seikaly&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ryan Anderson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sam Mack&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Scott Padgett&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sekou Doumbouya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shane Larkin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shelden Williams&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Spencer Hawes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Steve Henson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tahjere McCall&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Terrell Brandon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thomas Hamilton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Timofey Mozgov&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tony Delk&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Travis Hansen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Trevor Hudgins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ty-Shon Alexander&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tyrone Corbin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vernon Maxwell&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vladimir Radmanovic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wayne Turner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Willie Burton&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yaroslav Korolev&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zhaire Smith&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;IT&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_seasons.csv' id='all_seasons.csv_411B679FA8504E67AEDC81AB2B2D8566'>
            <properties context=''>
              <relation connection='textscan.057ab5o0vbizib1como9u0mhi4wk' name='all_seasons.csv' table='[all_seasons#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='it_IT'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='player_name' ordinal='1' />
                  <column datatype='string' name='team_abbreviation' ordinal='2' />
                  <column datatype='string' name='age' ordinal='3' />
                  <column datatype='string' name='player_height' ordinal='4' />
                  <column datatype='string' name='player_weight' ordinal='5' />
                  <column datatype='string' name='college' ordinal='6' />
                  <column datatype='string' name='country' ordinal='7' />
                  <column datatype='string' name='draft_year' ordinal='8' />
                  <column datatype='string' name='draft_round' ordinal='9' />
                  <column datatype='string' name='draft_number' ordinal='10' />
                  <column datatype='integer' name='gp' ordinal='11' />
                  <column datatype='string' name='pts' ordinal='12' />
                  <column datatype='string' name='reb' ordinal='13' />
                  <column datatype='string' name='ast' ordinal='14' />
                  <column datatype='string' name='net_rating' ordinal='15' />
                  <column datatype='string' name='oreb_pct' ordinal='16' />
                  <column datatype='string' name='dreb_pct' ordinal='17' />
                  <column datatype='string' name='usg_pct' ordinal='18' />
                  <column datatype='string' name='ts_pct' ordinal='19' />
                  <column datatype='string' name='ast_pct' ordinal='20' />
                  <column datatype='string' name='season' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='2022-2023 NBA Player Stats - Regular.csv (Connessioni multiple)' inline='true' name='federated.0v26cuc042ok2m1frlqef0x7x8hy' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2022-2023 NBA Player Stats - Regular' name='textscan.0z2dlxv1cyjw2a1ch7l0e0bb9yda'>
            <connection class='textscan' directory='/Users/dominic/Downloads' filename='2022-2023 NBA Player Stats - Regular.csv' password='' server='' />
          </named-connection>
          <named-connection caption='all_seasons' name='textscan.1o5wjj20ffy1ja17il7em1l9h41k'>
            <connection class='textscan' directory='/Users/dominic/Desktop/Node/data_science/Project I' filename='all_seasons.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0z2dlxv1cyjw2a1ch7l0e0bb9yda' name='2022-2023 NBA Player Stats - Regular.csv' table='[2022-2023 NBA Player Stats - Regular#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='it_IT' separator=';'>
            <column datatype='integer' name='Rk' ordinal='0' />
            <column datatype='string' name='Player' ordinal='1' />
            <column datatype='string' name='Pos' ordinal='2' />
            <column datatype='integer' name='Age' ordinal='3' />
            <column datatype='string' name='Tm' ordinal='4' />
            <column datatype='integer' name='G' ordinal='5' />
            <column datatype='integer' name='GS' ordinal='6' />
            <column datatype='string' name='MP' ordinal='7' />
            <column datatype='string' name='FG' ordinal='8' />
            <column datatype='string' name='FGA' ordinal='9' />
            <column datatype='string' name='FG%' ordinal='10' />
            <column datatype='string' name='3P' ordinal='11' />
            <column datatype='string' name='3PA' ordinal='12' />
            <column datatype='string' name='3P%' ordinal='13' />
            <column datatype='string' name='2P' ordinal='14' />
            <column datatype='string' name='2PA' ordinal='15' />
            <column datatype='string' name='2P%' ordinal='16' />
            <column datatype='string' name='eFG%' ordinal='17' />
            <column datatype='string' name='FT' ordinal='18' />
            <column datatype='string' name='FTA' ordinal='19' />
            <column datatype='string' name='FT%' ordinal='20' />
            <column datatype='string' name='ORB' ordinal='21' />
            <column datatype='string' name='DRB' ordinal='22' />
            <column datatype='string' name='TRB' ordinal='23' />
            <column datatype='string' name='AST' ordinal='24' />
            <column datatype='string' name='STL' ordinal='25' />
            <column datatype='string' name='BLK' ordinal='26' />
            <column datatype='string' name='TOV' ordinal='27' />
            <column datatype='string' name='PF' ordinal='28' />
            <column datatype='string' name='PTS' ordinal='29' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1o5wjj20ffy1ja17il7em1l9h41k' name='all_seasons.csv' table='[all_seasons#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='it_IT'>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='string' name='player_name' ordinal='1' />
              <column datatype='string' name='team_abbreviation' ordinal='2' />
              <column datatype='string' name='age' ordinal='3' />
              <column datatype='string' name='player_height' ordinal='4' />
              <column datatype='string' name='player_weight' ordinal='5' />
              <column datatype='string' name='college' ordinal='6' />
              <column datatype='string' name='country' ordinal='7' />
              <column datatype='string' name='draft_year' ordinal='8' />
              <column datatype='string' name='draft_round' ordinal='9' />
              <column datatype='string' name='draft_number' ordinal='10' />
              <column datatype='integer' name='gp' ordinal='11' />
              <column datatype='string' name='pts' ordinal='12' />
              <column datatype='string' name='reb' ordinal='13' />
              <column datatype='string' name='ast' ordinal='14' />
              <column datatype='string' name='net_rating' ordinal='15' />
              <column datatype='string' name='oreb_pct' ordinal='16' />
              <column datatype='string' name='dreb_pct' ordinal='17' />
              <column datatype='string' name='usg_pct' ordinal='18' />
              <column datatype='string' name='ts_pct' ordinal='19' />
              <column datatype='string' name='ast_pct' ordinal='20' />
              <column datatype='string' name='season' ordinal='21' />
            </columns>
          </relation>
          <relation connection='textscan.0z2dlxv1cyjw2a1ch7l0e0bb9yda' name='2022-2023 NBA Player Stats - Regular.csv' table='[2022-2023 NBA Player Stats - Regular#csv]' type='table'>
            <columns character-set='windows-1252' header='yes' locale='it_IT' separator=';'>
              <column datatype='integer' name='Rk' ordinal='0' />
              <column datatype='string' name='Player' ordinal='1' />
              <column datatype='string' name='Pos' ordinal='2' />
              <column datatype='integer' name='Age' ordinal='3' />
              <column datatype='string' name='Tm' ordinal='4' />
              <column datatype='integer' name='G' ordinal='5' />
              <column datatype='integer' name='GS' ordinal='6' />
              <column datatype='string' name='MP' ordinal='7' />
              <column datatype='string' name='FG' ordinal='8' />
              <column datatype='string' name='FGA' ordinal='9' />
              <column datatype='string' name='FG%' ordinal='10' />
              <column datatype='string' name='3P' ordinal='11' />
              <column datatype='string' name='3PA' ordinal='12' />
              <column datatype='string' name='3P%' ordinal='13' />
              <column datatype='string' name='2P' ordinal='14' />
              <column datatype='string' name='2PA' ordinal='15' />
              <column datatype='string' name='2P%' ordinal='16' />
              <column datatype='string' name='eFG%' ordinal='17' />
              <column datatype='string' name='FT' ordinal='18' />
              <column datatype='string' name='FTA' ordinal='19' />
              <column datatype='string' name='FT%' ordinal='20' />
              <column datatype='string' name='ORB' ordinal='21' />
              <column datatype='string' name='DRB' ordinal='22' />
              <column datatype='string' name='TRB' ordinal='23' />
              <column datatype='string' name='AST' ordinal='24' />
              <column datatype='string' name='STL' ordinal='25' />
              <column datatype='string' name='BLK' ordinal='26' />
              <column datatype='string' name='TOV' ordinal='27' />
              <column datatype='string' name='PF' ordinal='28' />
              <column datatype='string' name='PTS' ordinal='29' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;it&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¬&quot;</attribute>
              <attribute datatype='string' name='decimal-char'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;it_IT&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='thousands-char'>&quot;.&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_name]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>player_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team_abbreviation</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team_abbreviation]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>team_abbreviation</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>age</remote-name>
            <remote-type>129</remote-type>
            <local-name>[age]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>age</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_height</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_height]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>player_height</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_weight</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_weight]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>player_weight</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>college</remote-name>
            <remote-type>129</remote-type>
            <local-name>[college]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>college</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_year</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_year]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>draft_year</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_round</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_round]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>draft_round</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>draft_number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[draft_number]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>draft_number</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gp</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gp]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>gp</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pts</remote-name>
            <remote-type>129</remote-type>
            <local-name>[pts]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>pts</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>reb</remote-name>
            <remote-type>129</remote-type>
            <local-name>[reb]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>reb</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ast</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ast]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>ast</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>net_rating</remote-name>
            <remote-type>129</remote-type>
            <local-name>[net_rating]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>net_rating</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oreb_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[oreb_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>oreb_pct</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dreb_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dreb_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>dreb_pct</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usg_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usg_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>usg_pct</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ts_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ts_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>ts_pct</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ast_pct</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ast_pct]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>ast_pct</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>129</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[all_seasons.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rk]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>Rk</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Player</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Player]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>Player</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pos</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pos]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>Pos</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Age]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>Age</remote-alias>
            <ordinal>25</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tm</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Tm]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>Tm</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>G</remote-name>
            <remote-type>20</remote-type>
            <local-name>[G]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>G</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GS</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GS]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>GS</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>MP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[MP]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>MP</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FG]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>FG</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FGA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FGA]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>FGA</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FG%</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FG%]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>FG%</remote-alias>
            <ordinal>32</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P</remote-name>
            <remote-type>129</remote-type>
            <local-name>[3P]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>3P</remote-alias>
            <ordinal>33</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3PA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[3PA]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>3PA</remote-alias>
            <ordinal>34</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3P%</remote-name>
            <remote-type>129</remote-type>
            <local-name>[3P%]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>3P%</remote-alias>
            <ordinal>35</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2P]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>2P</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2PA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2PA]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>2PA</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2P%</remote-name>
            <remote-type>129</remote-type>
            <local-name>[2P%]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>2P%</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>eFG%</remote-name>
            <remote-type>129</remote-type>
            <local-name>[eFG%]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>eFG%</remote-alias>
            <ordinal>39</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FT]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>FT</remote-alias>
            <ordinal>40</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FTA</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FTA]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>FTA</remote-alias>
            <ordinal>41</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>FT%</remote-name>
            <remote-type>129</remote-type>
            <local-name>[FT%]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>FT%</remote-alias>
            <ordinal>42</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ORB</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ORB]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>ORB</remote-alias>
            <ordinal>43</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DRB</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DRB]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>DRB</remote-alias>
            <ordinal>44</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TRB</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TRB]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>TRB</remote-alias>
            <ordinal>45</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AST</remote-name>
            <remote-type>129</remote-type>
            <local-name>[AST]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>AST</remote-alias>
            <ordinal>46</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STL]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>STL</remote-alias>
            <ordinal>47</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>BLK</remote-name>
            <remote-type>129</remote-type>
            <local-name>[BLK]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>BLK</remote-alias>
            <ordinal>48</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>TOV</remote-name>
            <remote-type>129</remote-type>
            <local-name>[TOV]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>TOV</remote-alias>
            <ordinal>49</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PF</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PF]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>PF</remote-alias>
            <ordinal>50</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PTS</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PTS]</local-name>
            <parent-name>[2022-2023 NBA Player Stats - Regular.csv]</parent-name>
            <remote-alias>PTS</remote-alias>
            <ordinal>51</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LIT_RIT' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='3P%1' datatype='string' name='[3P%]' role='dimension' type='nominal' />
      <column caption='Age1' datatype='integer' name='[Age]' role='measure' type='quantitative' />
      <column caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213606723252261]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
      </column>
      <column caption='Intervalli di altezza' datatype='integer' name='[Calculation_4382213606726955051]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Calculation_4382213606723252261] &lt;=170 THEN 170 &#10;ELSEIF [Calculation_4382213606723252261] &gt;170 and [Calculation_4382213606723252261] &lt;=180 THEN 180&#10;ELSEIF [Calculation_4382213606723252261] &gt;180 and [Calculation_4382213606723252261] &lt;=190 THEN 190&#10;ELSEIF [Calculation_4382213606723252261] &gt;190 and [Calculation_4382213606723252261] &lt;=200 THEN 200&#10;ELSEIF [Calculation_4382213606723252261] &gt;200 and [Calculation_4382213606723252261] &lt;=210 THEN 210&#10;ELSEIF [Calculation_4382213606723252261] &gt;210 and [Calculation_4382213606723252261] &lt;=220 THEN 220&#10;ELSEIF [Calculation_4382213606723252261] &gt; 220 THEN 230 END' />
      </column>
      <column caption='conteggio' datatype='integer' name='[Calculation_4382213606727991340]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([Player])' />
      </column>
      <column caption='3P%' datatype='real' name='[Calculation_4382213606734286895]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([3P%])' />
      </column>
      <column caption='2PTS%' datatype='real' name='[Calculation_4382213606738538545]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='FLOAT([2P%])' />
      </column>
      <column caption='PTS1' datatype='string' name='[PTS]' role='dimension' type='nominal' />
      <column caption='Player1' datatype='string' name='[Player]' role='dimension' type='nominal' />
      <column caption='Pos1' datatype='string' name='[Pos]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='2022-2023 NBA Player Stats - Regular.csv' datatype='table' name='[__tableau_internal_object_id__].[2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='all_seasons.csv' datatype='table' name='[__tableau_internal_object_id__].[all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F]' role='measure' type='quantitative' />
      <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
      <column caption='Ast' datatype='string' name='[ast]' role='dimension' type='nominal' />
      <column caption='Ast Pct' datatype='string' name='[ast_pct]' role='dimension' type='nominal' />
      <column caption='College' datatype='string' name='[college]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Draft Number' datatype='string' name='[draft_number]' role='dimension' type='nominal' />
      <column caption='Draft Round' datatype='string' name='[draft_round]' role='dimension' type='nominal' />
      <column caption='Draft Year' datatype='string' name='[draft_year]' role='dimension' type='nominal' />
      <column caption='Dreb Pct' datatype='string' name='[dreb_pct]' role='dimension' type='nominal' />
      <column caption='Gp' datatype='integer' name='[gp]' role='measure' type='quantitative' />
      <column caption='Net Rating' datatype='string' name='[net_rating]' role='dimension' type='nominal' />
      <column caption='Oreb Pct' datatype='string' name='[oreb_pct]' role='dimension' type='nominal' />
      <column caption='Player Height' datatype='string' name='[player_height]' role='dimension' type='nominal' />
      <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
      <column caption='Player Weight' datatype='string' name='[player_weight]' role='dimension' type='nominal' />
      <column caption='Pts' datatype='string' name='[pts]' role='dimension' type='nominal' />
      <column caption='Reb' datatype='string' name='[reb]' role='dimension' type='nominal' />
      <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
      <column caption='Team Abbreviation' datatype='string' name='[team_abbreviation]' role='dimension' type='nominal' />
      <column caption='Ts Pct' datatype='string' name='[ts_pct]' role='dimension' type='nominal' />
      <column caption='Usg Pct' datatype='string' name='[usg_pct]' role='dimension' type='nominal' />
      <column-instance column='[Calculation_4382213606734286895]' derivation='Avg' name='[avg:Calculation_4382213606734286895:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3P%]' derivation='None' name='[none:3P%:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_4382213606726955051]' derivation='None' name='[none:Calculation_4382213606726955051:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_4382213606734286895]' derivation='Sum' name='[sum:Calculation_4382213606734286895:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_4382213606727991340]' derivation='User' name='[usr:Calculation_4382213606727991340:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Calculation_4382213606726955051:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>200</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>190</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>220</bucket>
            </map>
            <map to='#e15759'>
              <bucket>180</bucket>
            </map>
            <map to='#edc948'>
              <bucket>210</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>170</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>230</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606726049834:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[usr:Calculation_4382213606729584686:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606729089069:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[sum:Calculation_4382213606729089069:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[sum:Calculation_4382213606734286895:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[usr:Calculation_4382213606727991340:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]&#10;[none:3P%:nk]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606729089069:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk]&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;[federated.0v26cuc042ok2m1frlqef0x7x8hy].[sum:Calculation_4382213606734286895:qk]&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;IT&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='2022-2023 NBA Player Stats - Regular.csv' id='2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB'>
            <properties context=''>
              <relation connection='textscan.0z2dlxv1cyjw2a1ch7l0e0bb9yda' name='2022-2023 NBA Player Stats - Regular.csv' table='[2022-2023 NBA Player Stats - Regular#csv]' type='table'>
                <columns character-set='windows-1252' header='yes' locale='it_IT' separator=';'>
                  <column datatype='integer' name='Rk' ordinal='0' />
                  <column datatype='string' name='Player' ordinal='1' />
                  <column datatype='string' name='Pos' ordinal='2' />
                  <column datatype='integer' name='Age' ordinal='3' />
                  <column datatype='string' name='Tm' ordinal='4' />
                  <column datatype='integer' name='G' ordinal='5' />
                  <column datatype='integer' name='GS' ordinal='6' />
                  <column datatype='string' name='MP' ordinal='7' />
                  <column datatype='string' name='FG' ordinal='8' />
                  <column datatype='string' name='FGA' ordinal='9' />
                  <column datatype='string' name='FG%' ordinal='10' />
                  <column datatype='string' name='3P' ordinal='11' />
                  <column datatype='string' name='3PA' ordinal='12' />
                  <column datatype='string' name='3P%' ordinal='13' />
                  <column datatype='string' name='2P' ordinal='14' />
                  <column datatype='string' name='2PA' ordinal='15' />
                  <column datatype='string' name='2P%' ordinal='16' />
                  <column datatype='string' name='eFG%' ordinal='17' />
                  <column datatype='string' name='FT' ordinal='18' />
                  <column datatype='string' name='FTA' ordinal='19' />
                  <column datatype='string' name='FT%' ordinal='20' />
                  <column datatype='string' name='ORB' ordinal='21' />
                  <column datatype='string' name='DRB' ordinal='22' />
                  <column datatype='string' name='TRB' ordinal='23' />
                  <column datatype='string' name='AST' ordinal='24' />
                  <column datatype='string' name='STL' ordinal='25' />
                  <column datatype='string' name='BLK' ordinal='26' />
                  <column datatype='string' name='TOV' ordinal='27' />
                  <column datatype='string' name='PF' ordinal='28' />
                  <column datatype='string' name='PTS' ordinal='29' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='all_seasons.csv' id='all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F'>
            <properties context=''>
              <relation connection='textscan.1o5wjj20ffy1ja17il7em1l9h41k' name='all_seasons.csv' table='[all_seasons#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='it_IT'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='player_name' ordinal='1' />
                  <column datatype='string' name='team_abbreviation' ordinal='2' />
                  <column datatype='string' name='age' ordinal='3' />
                  <column datatype='string' name='player_height' ordinal='4' />
                  <column datatype='string' name='player_weight' ordinal='5' />
                  <column datatype='string' name='college' ordinal='6' />
                  <column datatype='string' name='country' ordinal='7' />
                  <column datatype='string' name='draft_year' ordinal='8' />
                  <column datatype='string' name='draft_round' ordinal='9' />
                  <column datatype='string' name='draft_number' ordinal='10' />
                  <column datatype='integer' name='gp' ordinal='11' />
                  <column datatype='string' name='pts' ordinal='12' />
                  <column datatype='string' name='reb' ordinal='13' />
                  <column datatype='string' name='ast' ordinal='14' />
                  <column datatype='string' name='net_rating' ordinal='15' />
                  <column datatype='string' name='oreb_pct' ordinal='16' />
                  <column datatype='string' name='dreb_pct' ordinal='17' />
                  <column datatype='string' name='usg_pct' ordinal='18' />
                  <column datatype='string' name='ts_pct' ordinal='19' />
                  <column datatype='string' name='ast_pct' ordinal='20' />
                  <column datatype='string' name='season' ordinal='21' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[player_name]' />
              <expression op='[Player]' />
            </expression>
            <first-end-point object-id='all_seasons.csv_87BB29AFA42243BD89DBBE1A570C3B5F' />
            <second-end-point object-id='2022-2023 NBA Player Stats - Regular.csv_ED7A75D60F694AE28A4F3338CF5F37BB' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-relationship source='federated.0vogvmp1ad9bb314qykfu195emnd' target='federated.0v26cuc042ok2m1frlqef0x7x8hy'>
      <column-mapping />
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Visualizza top 5' name='[Action1_6087CE60C4664EFE83AC7816FFC8F1F8]'>
      <source dashboard='Dashboard' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='TOP 5' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='%_altezze'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>Percentuale di NBA players per intervalli di Altezza</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column caption='conteggio' datatype='integer' name='[Calculation_4382213590891913227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([player_name])' />
            </column>
            <column aggregation='Sum' caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213590892998668]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
            </column>
            <column aggregation='Sum' caption='Intervallo di altezza' datatype='integer' name='[Calculation_4382213591251492880]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Calculation_4382213590892998668] &lt;=170 THEN 170 &#10;ELSEIF [Calculation_4382213590892998668] &gt;170 and [Calculation_4382213590892998668] &lt;=180 THEN 180&#10;ELSEIF [Calculation_4382213590892998668] &gt;180 and [Calculation_4382213590892998668] &lt;=190 THEN 190&#10;ELSEIF [Calculation_4382213590892998668] &gt;190 and [Calculation_4382213590892998668] &lt;=200 THEN 200&#10;ELSEIF [Calculation_4382213590892998668] &gt;200 and [Calculation_4382213590892998668] &lt;=210 THEN 210&#10;ELSEIF [Calculation_4382213590892998668] &gt;210 and [Calculation_4382213590892998668] &lt;=220 THEN 220&#10;ELSEIF [Calculation_4382213590892998668] &gt; 220 THEN 230 END' />
            </column>
            <column caption='%_altezza' datatype='string' name='[Calculation_4382213592290672672]' role='measure' type='nominal'>
              <calculation class='tableau' formula='STR(ROUND(SUM([Calculation_4382213591251492880]) / TOTAL(SUM([Calculation_4382213591251492880])) * 100, 2)) + &quot;%&quot;'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[Calculation_4382213591251492880]' derivation='Attribute' name='[attr:Calculation_4382213591251492880:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213591251492880]' derivation='None' name='[none:Calculation_4382213591251492880:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213590891913227]' derivation='User' name='[usr:Calculation_4382213590891913227:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213592290672672]' derivation='User' name='[usr:Calculation_4382213592290672672:nk]' pivot='key' type='nominal'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' center='200' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:qk]' max='230' min='170' num-steps='7' palette='gold_purple_diverging_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:qk]' value='Intervallo di altezza' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:qk]' />
              <tooltip column='[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:Calculation_4382213591251492880:qk]' />
              <wedge-size column='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' />
              <text column='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213592290672672:nk]' />
              <lod column='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213592290672672:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{939E0CDF-F8D1-4A5B-931E-D936BF0B5BB3}' />
    </worksheet>
    <worksheet name='Altezza e tiri'>
      <table>
        <view>
          <datasources>
            <datasource caption='2022-2023 NBA Player Stats - Regular.csv (Connessioni multiple)' name='federated.0v26cuc042ok2m1frlqef0x7x8hy' />
          </datasources>
          <datasource-dependencies datasource='federated.0v26cuc042ok2m1frlqef0x7x8hy'>
            <column datatype='string' name='[2P%]' role='dimension' type='nominal' />
            <column caption='3P%1' datatype='string' name='[3P%]' role='dimension' type='nominal' />
            <column caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213606723252261]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
            </column>
            <column caption='Intervalli di altezza' datatype='integer' name='[Calculation_4382213606726955051]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Calculation_4382213606723252261] &lt;=170 THEN 170 &#10;ELSEIF [Calculation_4382213606723252261] &gt;170 and [Calculation_4382213606723252261] &lt;=180 THEN 180&#10;ELSEIF [Calculation_4382213606723252261] &gt;180 and [Calculation_4382213606723252261] &lt;=190 THEN 190&#10;ELSEIF [Calculation_4382213606723252261] &gt;190 and [Calculation_4382213606723252261] &lt;=200 THEN 200&#10;ELSEIF [Calculation_4382213606723252261] &gt;200 and [Calculation_4382213606723252261] &lt;=210 THEN 210&#10;ELSEIF [Calculation_4382213606723252261] &gt;210 and [Calculation_4382213606723252261] &lt;=220 THEN 220&#10;ELSEIF [Calculation_4382213606723252261] &gt; 220 THEN 230 END' />
            </column>
            <column caption='3P%' datatype='real' name='[Calculation_4382213606734286895]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([3P%])' />
            </column>
            <column caption='2PTS%' datatype='real' name='[Calculation_4382213606738538545]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([2P%])' />
            </column>
            <column-instance column='[Calculation_4382213606734286895]' derivation='Avg' name='[avg:Calculation_4382213606734286895:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213606738538545]' derivation='Avg' name='[avg:Calculation_4382213606738538545:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213606726955051]' derivation='None' name='[none:Calculation_4382213606726955051:ok]' pivot='key' type='ordinal' />
            <column caption='Player Height' datatype='string' name='[player_height]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Calculation_4382213606726955051:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4382213606726955051:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_4382213606726955051:ok]' member='%null%' />
                <groupfilter function='member' level='[none:Calculation_4382213606726955051:ok]' member='170' />
                <groupfilter function='member' level='[none:Calculation_4382213606726955051:ok]' member='230' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Calculation_4382213606726955051:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk]' scope='rows' value='% Tiri da 3 Punti' />
            <format attr='title' class='0' field='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606738538545:qk]' scope='rows' value='% Tiri da 2 Punti' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Calculation_4382213606726955051:ok]' value='134' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk]' palette='orange_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606738538545:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606738538545:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606738538545:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk] + [federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606738538545:qk])</rows>
        <cols>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Calculation_4382213606726955051:ok]</cols>
      </table>
      <simple-id uuid='{D74095D9-01BA-4D08-99A0-A9EC230EFA56}' />
    </worksheet>
    <worksheet name='Altezza per paese'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Altezza media dei player NBA per paese di origine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column caption='conteggio' datatype='integer' name='[Calculation_4382213590891913227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([player_name])' />
            </column>
            <column aggregation='Sum' caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213590892998668]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
            </column>
            <column-instance column='[Calculation_4382213590892998668]' derivation='Avg' name='[avg:Calculation_4382213590892998668:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213590891913227]' derivation='User' name='[usr:Calculation_4382213590891913227:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[Longitude (generated)]' field-type='quantitative' max='15067127.772413669' min='-16476295.285011927' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[Latitude (generated)]' field-type='quantitative' max='18060389.335612375' min='-16770437.660307562' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' num-steps='5' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' value='Altezza media dei giocatori NBA per paese di origine'>
              <formatted-text>
                <run>Altezza media dei giocatori NBA per paese di origine</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:country:nk]' />
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' />
              <lod column='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' />
              <text column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' />
              <geometry column='[federated.0vogvmp1ad9bb314qykfu195emnd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vogvmp1ad9bb314qykfu195emnd].[Latitude (generated)]</rows>
        <cols>[federated.0vogvmp1ad9bb314qykfu195emnd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{822ECD6F-8C84-4DAD-8A9F-F71889949057}' />
    </worksheet>
    <worksheet name='Altezza per paese (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Altezza media dei player NBA per paese di origine</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column caption='conteggio' datatype='integer' name='[Calculation_4382213590891913227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([player_name])' />
            </column>
            <column aggregation='Sum' caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213590892998668]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
            </column>
            <column caption='SQRT(VAR([Altezza (arrotondata)]))' datatype='real' name='[Calculation_4382213603163271202]' role='measure' type='quantitative' user:unnamed='Altezza per paese (2)'>
              <calculation class='tableau' formula='SQRT(VAR([Calculation_4382213590892998668]))' />
            </column>
            <column-instance column='[Calculation_4382213590892998668]' derivation='Avg' name='[avg:Calculation_4382213590892998668:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213590891913227]' derivation='User' name='[usr:Calculation_4382213590891913227:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213603163271202]' derivation='User' name='[usr:Calculation_4382213603163271202:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[Longitude (generated)]' field-type='quantitative' max='15067127.772413669' min='-16476295.285011927' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[Latitude (generated)]' field-type='quantitative' max='18060389.335612375' min='-16770437.660307562' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213603163271202:qk]' num-steps='5' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' num-steps='5' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' value='Altezza media dei giocatori NBA per paese di origine'>
              <formatted-text>
                <run>Altezza media dei giocatori NBA per paese di origine</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:country:nk]' />
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' />
              <lod column='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' />
              <text column='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213603163271202:qk]' />
              <geometry column='[federated.0vogvmp1ad9bb314qykfu195emnd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vogvmp1ad9bb314qykfu195emnd].[Latitude (generated)]</rows>
        <cols>[federated.0vogvmp1ad9bb314qykfu195emnd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{948E69EF-326D-4C9C-ABA8-2B7261C5B6FB}' />
    </worksheet>
    <worksheet name='Peso Altezza'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Distribuzione peso-altezza degli NBA players</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column aggregation='Sum' caption='peso_rounded' datatype='real' name='[Calculation_4382213590882725897]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_weight]))' />
            </column>
            <column aggregation='Sum' caption='Intervalli di Peso' datatype='integer' name='[Calculation_4382213590889959434]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Calculation_4382213590882725897]&lt;=70 THEN 70 ELSEIF [Calculation_4382213590882725897]&gt;70 and [Calculation_4382213590882725897]&lt;=80 THEN 80&#10;ELSEIF  [Calculation_4382213590882725897]&gt;80 and [Calculation_4382213590882725897]&lt;=90 THEN 90&#10;ELSEIF  [Calculation_4382213590882725897]&gt;90 and [Calculation_4382213590882725897]&lt;=100 THEN 100&#10;ELSEIF  [Calculation_4382213590882725897]&gt;100 and [Calculation_4382213590882725897]&lt;=110 THEN 110&#10;ELSEIF [Calculation_4382213590882725897]&gt;110 and [Calculation_4382213590882725897]&lt;=120 THEN 120&#10;ELSEIF [Calculation_4382213590882725897]&gt;120 and [Calculation_4382213590882725897]&lt;=130 THEN 130&#10;ELSEIF [Calculation_4382213590882725897]&gt;130 and [Calculation_4382213590882725897]&lt;=140 THEN 140&#10;ELSEIF [Calculation_4382213590882725897]&gt;140 THEN 150 END' />
            </column>
            <column caption='conteggio' datatype='integer' name='[Calculation_4382213590891913227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([player_name])' />
            </column>
            <column aggregation='Sum' caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213590892998668]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
            </column>
            <column-instance column='[player_name]' derivation='Attribute' name='[attr:player_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4382213590889959434]' derivation='None' name='[none:Calculation_4382213590889959434:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4382213590892998668]' derivation='None' name='[none:Calculation_4382213590892998668:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column caption='Player Weight' datatype='string' name='[player_weight]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213590891913227]' derivation='User' name='[usr:Calculation_4382213590891913227:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4382213590889959434:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_4382213590889959434:ok]' member='70' />
                <groupfilter function='member' level='[none:Calculation_4382213590889959434:ok]' member='140' />
                <groupfilter function='member' level='[none:Calculation_4382213590889959434:ok]' member='150' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4382213590892998668:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='160.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='165.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='168.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='224.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='226.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='229.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='231.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</column>
            <column>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' scope='cols' value='NÂ°' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]' value='88' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_name:nk]' />
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='142' />
                <format attr='maxwidth' value='142' />
                <format attr='minheight' value='520' />
                <format attr='maxheight' value='520' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='142' />
                <format attr='maxwidth' value='142' />
                <format attr='minheight' value='520' />
                <format attr='maxheight' value='520' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='142' />
                <format attr='maxwidth' value='142' />
                <format attr='minheight' value='520' />
                <format attr='maxheight' value='520' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='142' />
                <format attr='maxwidth' value='142' />
                <format attr='minheight' value='520' />
                <format attr='maxheight' value='520' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</rows>
        <cols>([federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok] * [federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk])</cols>
      </table>
      <simple-id uuid='{966CFFBE-1061-4797-9224-246CA27E8C15}' />
    </worksheet>
    <worksheet name='Peso Altezza (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Distribuzione peso-altezza degli NBA players</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column aggregation='Sum' caption='peso_rounded' datatype='real' name='[Calculation_4382213590882725897]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_weight]))' />
            </column>
            <column aggregation='Sum' caption='Intervalli di Peso' datatype='integer' name='[Calculation_4382213590889959434]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Calculation_4382213590882725897]&lt;=70 THEN 70 ELSEIF [Calculation_4382213590882725897]&gt;70 and [Calculation_4382213590882725897]&lt;=80 THEN 80&#10;ELSEIF  [Calculation_4382213590882725897]&gt;80 and [Calculation_4382213590882725897]&lt;=90 THEN 90&#10;ELSEIF  [Calculation_4382213590882725897]&gt;90 and [Calculation_4382213590882725897]&lt;=100 THEN 100&#10;ELSEIF  [Calculation_4382213590882725897]&gt;100 and [Calculation_4382213590882725897]&lt;=110 THEN 110&#10;ELSEIF [Calculation_4382213590882725897]&gt;110 and [Calculation_4382213590882725897]&lt;=120 THEN 120&#10;ELSEIF [Calculation_4382213590882725897]&gt;120 and [Calculation_4382213590882725897]&lt;=130 THEN 130&#10;ELSEIF [Calculation_4382213590882725897]&gt;130 and [Calculation_4382213590882725897]&lt;=140 THEN 140&#10;ELSEIF [Calculation_4382213590882725897]&gt;140 THEN 150 END' />
            </column>
            <column aggregation='Sum' caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213590892998668]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
            </column>
            <column caption='BMI' datatype='real' name='[Calculation_4382213603165012003]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_4382213590882725897]/(([Calculation_4382213590892998668]/100)*([Calculation_4382213590892998668]/100))' />
            </column>
            <column-instance column='[player_name]' derivation='Attribute' name='[attr:player_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4382213590892998668]' derivation='Avg' name='[avg:Calculation_4382213590892998668:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213603165012003]' derivation='Avg' name='[avg:Calculation_4382213603165012003:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213590889959434]' derivation='None' name='[none:Calculation_4382213590889959434:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_4382213590892998668]' derivation='None' name='[none:Calculation_4382213590892998668:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column caption='Player Weight' datatype='string' name='[player_weight]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vogvmp1ad9bb314qykfu195emnd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213603165012003:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4382213590889959434:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_4382213590889959434:ok]' member='70' />
                <groupfilter function='member' level='[none:Calculation_4382213590889959434:ok]' member='140' />
                <groupfilter function='member' level='[none:Calculation_4382213590889959434:ok]' member='150' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Calculation_4382213590892998668:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='160.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='165.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='168.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='224.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='226.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='229.0' />
                <groupfilter function='member' level='[none:Calculation_4382213590892998668:ok]' member='231.0' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</column>
            <column>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]</column>
            <column>[federated.0vogvmp1ad9bb314qykfu195emnd].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0vogvmp1ad9bb314qykfu195emnd].[Multiple Values]' />
              <lod column='[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]</rows>
        <cols>[federated.0vogvmp1ad9bb314qykfu195emnd].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{69D597CF-0637-444B-A3E4-F5864B2407D0}' />
    </worksheet>
    <worksheet name='Relazione tra punteggio e altezza'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Relazione tra Punteggio e Altezza</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column caption='conteggio' datatype='integer' name='[Calculation_4382213590891913227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([player_name])' />
            </column>
            <column aggregation='Sum' caption='Altezza (arrotondata)' datatype='real' name='[Calculation_4382213590892998668]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='ROUND(FLOAT([player_height]))' />
            </column>
            <column caption='Punti per stagione' datatype='real' name='[Calculation_4382213591250685967]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([pts])' />
            </column>
            <column aggregation='Sum' caption='Intervallo di altezza' datatype='integer' name='[Calculation_4382213591251492880]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='if [Calculation_4382213590892998668] &lt;=170 THEN 170 &#10;ELSEIF [Calculation_4382213590892998668] &gt;170 and [Calculation_4382213590892998668] &lt;=180 THEN 180&#10;ELSEIF [Calculation_4382213590892998668] &gt;180 and [Calculation_4382213590892998668] &lt;=190 THEN 190&#10;ELSEIF [Calculation_4382213590892998668] &gt;190 and [Calculation_4382213590892998668] &lt;=200 THEN 200&#10;ELSEIF [Calculation_4382213590892998668] &gt;200 and [Calculation_4382213590892998668] &lt;=210 THEN 210&#10;ELSEIF [Calculation_4382213590892998668] &gt;210 and [Calculation_4382213590892998668] &lt;=220 THEN 220&#10;ELSEIF [Calculation_4382213590892998668] &gt; 220 THEN 230 END' />
            </column>
            <column caption='Assist per stagione' datatype='real' name='[Calculation_4382213591253090321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([ast])' />
            </column>
            <column caption='Rebounds per Stagione' datatype='real' name='[Calculation_4382213591253893138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([reb])' />
            </column>
            <column caption='Ast' datatype='string' name='[ast]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213591250685967]' derivation='Avg' name='[avg:Calculation_4382213591250685967:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213591253090321]' derivation='Avg' name='[avg:Calculation_4382213591253090321:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213591253893138]' derivation='Avg' name='[avg:Calculation_4382213591253893138:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213591251492880]' derivation='None' name='[none:Calculation_4382213591251492880:ok]' pivot='key' type='ordinal' />
            <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='string' name='[pts]' role='dimension' type='nominal' />
            <column caption='Reb' datatype='string' name='[reb]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213590891913227]' derivation='User' name='[usr:Calculation_4382213590891913227:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' scope='rows' value='Assist per stagione' />
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' scope='rows' value='Rebounds per Stagione' />
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' scope='rows' value='Punti per stagione' />
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' scope='rows' value='Numero di players' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e7d2d4</color>
                <color>#deb4b9</color>
                <color>#d499a0</color>
                <color>#cb7f88</color>
                <color>#c16871</color>
                <color>#b8515d</color>
                <color>#ae3d4a</color>
                <color>#a52a38</color>
                <color>#9b1a28</color>
                <color>#920b1a</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e7e6d3</color>
                <color>#dedbb7</color>
                <color>#d4d19d</color>
                <color>#cbc784</color>
                <color>#c1bc6d</color>
                <color>#b8b257</color>
                <color>#aea844</color>
                <color>#a59e32</color>
                <color>#9b9421</color>
                <color>#928b13</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' value='Avg. Punti per stagione'>
              <formatted-text>
                <run>Avg. Punti per stagione</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' value='Avg. Rebounds per Stagione'>
              <formatted-text>
                <run>Avg. Rebounds per Stagione</run>
              </formatted-text>
            </format>
            <format attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' value='Avg. Assist per stagione'>
              <formatted-text>
                <run>Avg. Assist per stagione</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' />
            </encodings>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk] + ([federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk] + ([federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk] + [federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk])))</rows>
        <cols>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:ok]</cols>
      </table>
      <simple-id uuid='{AC51424A-A1FD-456F-97DC-AEFBA774DD13}' />
    </worksheet>
    <worksheet name='Relazione tra punteggio ed EtÃ '>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Relazione tra punteggio ed etÃ </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column caption='conteggio' datatype='integer' name='[Calculation_4382213590891913227]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([player_name])' />
            </column>
            <column caption='Punti per stagione' datatype='real' name='[Calculation_4382213591250685967]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([pts])' />
            </column>
            <column caption='Assist per stagione' datatype='real' name='[Calculation_4382213591253090321]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([ast])' />
            </column>
            <column caption='Rebounds per Stagione' datatype='real' name='[Calculation_4382213591253893138]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([reb])' />
            </column>
            <column aggregation='Sum' caption='EtÃ ' datatype='integer' name='[Calculation_4382213591257546776]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT([age])' />
            </column>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column caption='Ast' datatype='string' name='[ast]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213591250685967]' derivation='Avg' name='[avg:Calculation_4382213591250685967:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213591253090321]' derivation='Avg' name='[avg:Calculation_4382213591253090321:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213591253893138]' derivation='Avg' name='[avg:Calculation_4382213591253893138:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4382213591257546776]' derivation='None' name='[none:Calculation_4382213591257546776:ok]' pivot='key' type='ordinal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='string' name='[pts]' role='dimension' type='nominal' />
            <column caption='Reb' datatype='string' name='[reb]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213590891913227]' derivation='User' name='[usr:Calculation_4382213590891913227:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' scope='rows' value='Assist per stagione' />
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' scope='rows' value='Rebounds per Stagione' />
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' scope='rows' value='Punti per stagione' />
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' scope='rows' value='Numero di players' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='10' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e9d2d1</color>
                <color>#e1b5b4</color>
                <color>#d99a97</color>
                <color>#d1817d</color>
                <color>#c96864</color>
                <color>#c1524d</color>
                <color>#b93d37</color>
                <color>#b12923</color>
                <color>#a91710</color>
                <color>#a10700</color>
              </color-palette>
            </encoding>
            <encoding attr='color' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e7e7d8</color>
                <color>#dddec1</color>
                <color>#d3d4ab</color>
                <color>#c9cb96</color>
                <color>#bfc182</color>
                <color>#b5b870</color>
                <color>#abae5f</color>
                <color>#a2a54f</color>
                <color>#989b40</color>
                <color>#8f9233</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
          </pane>
        </panes>
        <rows>([federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk] + ([federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk] + ([federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk] + [federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213590891913227:qk])))</rows>
        <cols>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591257546776:ok]</cols>
      </table>
      <simple-id uuid='{BFD51707-59FA-40A9-BCF0-F8B8AF717D47}' />
    </worksheet>
    <worksheet name='TOP 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Migliori 5  NBA players per punteggio</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='all_seasons' name='federated.0vogvmp1ad9bb314qykfu195emnd' />
          </datasources>
          <datasource-dependencies datasource='federated.0vogvmp1ad9bb314qykfu195emnd'>
            <column caption='Punti per stagione' datatype='real' name='[Calculation_4382213591250685967]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='FLOAT([pts])' />
            </column>
            <column aggregation='Sum' caption='EtÃ ' datatype='integer' name='[Calculation_4382213591257546776]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='INT([age])' />
            </column>
            <column caption='Age' datatype='string' name='[age]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_4382213591257546776]' derivation='Attribute' name='[attr:Calculation_4382213591257546776:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_height]' derivation='Attribute' name='[attr:player_height:nk]' pivot='key' type='nominal' />
            <column-instance column='[player_weight]' derivation='Attribute' name='[attr:player_weight:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4382213591250685967]' derivation='Max' name='[max:Calculation_4382213591250685967:qk]' pivot='key' type='quantitative' />
            <column-instance column='[player_name]' derivation='None' name='[none:player_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[season]' derivation='None' name='[none:season:nk]' pivot='key' type='nominal' />
            <column aggregation='CountD' datatype='string' name='[player_height]' role='dimension' type='nominal' />
            <column caption='Player Name' datatype='string' name='[player_name]' role='dimension' type='nominal' />
            <column caption='Player Weight' datatype='string' name='[player_weight]' role='dimension' type='nominal' />
            <column caption='Pts' datatype='string' name='[pts]' role='dimension' type='nominal' />
            <column caption='Season' datatype='string' name='[season]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_4382213591250685967])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:player_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[max:Calculation_4382213591250685967:qk]' scope='rows' value='Punti per stagione' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0vogvmp1ad9bb314qykfu195emnd].[max:Calculation_4382213591250685967:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <text column='[federated.0vogvmp1ad9bb314qykfu195emnd].[max:Calculation_4382213591250685967:qk]' />
              <tooltip column='[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_height:nk]' />
              <tooltip column='[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:Calculation_4382213591257546776:qk]' />
              <tooltip column='[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_weight:nk]' />
              <color column='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk] * [federated.0vogvmp1ad9bb314qykfu195emnd].[max:Calculation_4382213591250685967:qk])</rows>
        <cols>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:season:nk]</cols>
      </table>
      <simple-id uuid='{B11EFA46-C6B8-4A5C-9677-7F8EC1274CE4}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='5' type-v2='layout-basic' w='98400' x='800' y='1000'>
              <zone h='45750' id='3' name='Peso Altezza' w='63500' x='35700' y='8625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39375' id='9' name='Altezza per paese' w='34908' x='800' y='59625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39375' id='11' name='Relazione tra punteggio e altezza' w='30892' x='35708' y='59625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39375' id='17' name='Relazione tra punteggio ed EtÃ ' w='32600' x='66600' y='59625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='57' h='5250' id='10' is-fixed='true' name='Altezza per paese' pane-specification-id='1' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' type-v2='color' w='34919' x='800' y='54375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5250' id='12' name='Relazione tra punteggio e altezza' pane-specification-id='6' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' type-v2='color' w='20881' x='35719' y='54375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5250' id='13' name='Relazione tra punteggio e altezza' pane-specification-id='7' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' type-v2='color' w='20700' x='56600' y='54375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5250' id='14' name='Relazione tra punteggio e altezza' pane-specification-id='5' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' type-v2='color' w='21900' x='77300' y='54375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='311' h='7625' id='16' is-fixed='true' name='%_altezze' pane-specification-id='0' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:qk]' type-v2='color' w='29207' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45750' id='15' name='%_altezze' w='34900' x='800' y='8625'>
                <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='63' h='7625' id='8' is-fixed='true' leg-item-layout='horz' name='Peso Altezza' pane-specification-id='5' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]' type-v2='color' w='69193' x='30007' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='45750' id='15' is-fixed='true' name='%_altezze' w='34900' x='800' y='8625'>
                  <layout-cache cell-count-w='1' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='311' h='7625' id='16' name='%_altezze' pane-specification-id='0' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:qk]' type-v2='color' w='29207' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45750' id='3' is-fixed='true' name='Peso Altezza' w='63500' x='35700' y='8625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='63' h='7625' id='8' leg-item-layout='horz' name='Peso Altezza' pane-specification-id='5' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]' type-v2='color' w='69193' x='30007' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39375' id='9' is-fixed='true' name='Altezza per paese' w='34908' x='800' y='59625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='57' h='5250' id='10' name='Altezza per paese' pane-specification-id='1' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' type-v2='color' w='34919' x='800' y='54375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39375' id='11' is-fixed='true' name='Relazione tra punteggio e altezza' w='30892' x='35708' y='59625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5250' id='12' name='Relazione tra punteggio e altezza' pane-specification-id='6' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' type-v2='color' w='20881' x='35719' y='54375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5250' id='13' name='Relazione tra punteggio e altezza' pane-specification-id='7' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' type-v2='color' w='20700' x='56600' y='54375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5250' id='14' name='Relazione tra punteggio e altezza' pane-specification-id='5' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' type-v2='color' w='21900' x='77300' y='54375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39375' id='17' is-fixed='true' name='Relazione tra punteggio ed EtÃ ' w='32600' x='66600' y='59625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{364AF64E-84F7-4162-A64A-D82C66422D24}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' name='Peso Altezza'>
      <cards>
        <edge name='left'>
          <strip size='144'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='5' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_height:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_weight:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590881611776:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590881734658:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590882402310:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590882725897:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:age:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_height:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3EC7D426-6E6B-4D07-80F4-281FB2AAD77B}' />
    </window>
    <window class='worksheet' name='Peso Altezza (2)'>
      <cards>
        <edge name='left'>
          <strip size='144'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[:Measure Names]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_height:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_weight:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213603165012003:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:AdhocCluster:1:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590881611776:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590881734658:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590882402310:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590882725897:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:age:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_height:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{286E4FAE-1829-43E4-8045-F2DC34217FA8}' />
    </window>
    <window class='worksheet' name='Altezza per paese'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591242469390:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7D25BDFB-1D59-497D-BF90-61689EF7E6AA}' />
    </window>
    <window class='worksheet' name='Altezza per paese (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213590892998668:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591242469390:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{4B751AD9-C894-41C9-B992-445DB4487DF4}' />
    </window>
    <window class='worksheet' name='Relazione tra punteggio e altezza'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='6' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' type='color' />
            <card pane-specification-id='5' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' type='color' />
            <card pane-specification-id='7' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591250685967:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591257546776:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:age:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:ast:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_height:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:pts:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{13137666-2D2A-4FAE-8F42-07EF9CA08504}' />
    </window>
    <window class='worksheet' name='Relazione tra punteggio ed EtÃ '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591250685967:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253893138:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0vogvmp1ad9bb314qykfu195emnd].[avg:Calculation_4382213591253090321:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591257235476:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591257546776:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:age:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[sum:Calculation_4382213591257497623:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1A6E0FA6-5DAC-49A5-B5DF-CD8ADA8A79CD}' />
    </window>
    <window class='worksheet' name='%_altezze'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='262'>
            <card pane-specification-id='0' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590889959434:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591251492880:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591257546776:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591264792601:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591265247258:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591265280027:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591265304604:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591265562653:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591265599518:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:season:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[usr:Calculation_4382213592290672672:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B38FF827-2A2D-4851-B6E4-0DC3B7ECE2DE}' />
    </window>
    <window class='dashboard' name='Dashboard'>
      <viewpoints>
        <viewpoint name='%_altezze'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Altezza per paese'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Peso Altezza'>
          <zoom type='entire-view' />
          <highlight field='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Relazione tra punteggio e altezza'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Relazione tra punteggio ed EtÃ '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{527A4EA3-F937-4067-9563-D60CEC9B7B13}' />
    </window>
    <window class='worksheet' maximized='true' name='TOP 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[Action (Intervallo di altezza)]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_height:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[attr:player_weight:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[max:Calculation_4382213591250685967:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213591257546776:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_height:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_name:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_weight:nk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:season:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{074F20BD-8B6F-4F26-A335-32CCC4BC8A71}' />
    </window>
    <window class='worksheet' name='Altezza e tiri'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='170'>
            <card pane-specification-id='1' param='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606734286895:qk]' type='color' />
            <card pane-specification-id='3' param='[federated.0v26cuc042ok2m1frlqef0x7x8hy].[avg:Calculation_4382213606738538545:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[:Measure Names]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[cnt:Player:ok]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:3P:nk]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Calculation_4382213606726049834:qk]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Calculation_4382213606726955051:ok]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Calculation_4382213606738423856:qk]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:FG%:nk]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:Pos:nk]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[none:player_height:nk]</field>
            <field>[federated.0v26cuc042ok2m1frlqef0x7x8hy].[usr:Calculation_4382213606729584686:qk]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:Calculation_4382213590892998668:ok]</field>
            <field>[federated.0vogvmp1ad9bb314qykfu195emnd].[none:player_height:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1536BB39-E936-4293-B539-0E48F7830924}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='%_altezze' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXRc5X038O9zZ+7sm3ZZsrwDNo4JUEIJAUIKDoEkxX3bnFJCl6S0ObQ9
      TiglbXiTHBKbhhJyICxNzgmJiUNNHBJ44xhSE+B9HYjrhc1LjBfZsrxoX2akmdHM3O39Q7bw
      Jnkka+beO8/38w8HWdI8muV+77P9HmFZlgUiIpKOYncDiIjIHgwAIiJJMQCIiCTFACAikhQD
      gIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCI
      iCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhI
      UgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTF
      ACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwA
      IiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAi
      khQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJ
      MQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQD
      gIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCIiCTFACAikhQDgIhIUgwAIiJJMQCI
      iCTFACAikhQDgIhIUgwAIiJJee6///777W4E0VQkk0n88Ic/RDKZxPz588e+vmvXLmzYsAE7
      duzArl27MHfuXLS3t+OnP/0purq6cMEFF2D//v14/vnnsXDhQvh8PmzatAkzZ86EEOKcj3vk
      yBHs3bsXzc3NY1/TdR2vvvoqfvnLXyKTyWDu3Lno7OzED3/4QwwNDWHevHkYGhrCj3/8Y9TV
      1SGRSGDXrl3w+/0IBAIleX6IzoU9AHIly7LwwAMP4Prrr8c777yDTZs2jf1bU1MTrrzySnzo
      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
    </thumbnail>
    <thumbnail height='384' name='Altezza e tiri' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Altezza per paese' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Altezza per paese (2)' width='384'>
      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
      M+M4Zq+MNiwWi6uUjZApH95fRE8U8CELAnjqbUudli5t0afxyrIM8/n84vuxqio2/kRrnk0B
      STDYtSFHcrSlguVr4PQObdNaY7lcQillP17aQTHGcLc40Za9awD7NljleY6Hh4erb5eXB5S5
      /bSLJAXIRq0gCDCbzQB82BFeVRWMMZjNZs+CQ13XzPYh2vLiVlwW0R4eHq4yRbRdxZPoFFI+
      23Ec2/CLqqqglILv+3a0wB3jRM85eZ4bpZRdAziV67r2AVNKwXXdFwcEqeK5fog6ERHdxtnz
      OG3boixL27OSAOA4zkYwkM9JsFh/fZIknPIhIrqTq03kH8upzvMcSilMp1P4vs/5fiKiO7vp
      RrC6rpEkiT2li4iI7ucuO4G5A5OI6P46VwuIiIhugwGAiGikGACIiEaKAYCIaKQYAIiIRooB
      gIhopBgAiIhGigGAiGikGACIiEaKAYCIaKQYAIiIRooBgIhopBgAiIhGigGAiGikGACIiEaK
      AYCIaKQYAIiIRooBgIhopBgAiIhGigGAiGikVFEUAADHce58KUREdEv/B1XXK2/NmNsRAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Dashboard' width='384'>
      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
      /Bytv9bntaqqio0bN1JcXMx9993naG30ByT23nLlGcL8/e9/5/nnn+9SWr1ez0cffURMTAy3
      3357n11XMHA4dOgQUqmUadOmuVtKr7NhwwaampqorKxk1qxZToart+hu+e7du5cDBw7w29/+
      1slZZCAiDEAvoNVq2+1Dbg+r1UpDQ0OH3QK9dV3BwKG1K9PT09PNSvoGrVaLQqFwfOn3Nt0t
      37q6Onx9fbs8ZtmfEQZAIBAIhigiFIRAIBAMUYQBuApOnz7t5Kvcn8M9CAQCweUIA3AV/Pe/
      /2XdunWO361T1vPz8/n222/dJUsgEAi6xMAfxXATFy5cIDExkeLiYkwmk9MA0rp166ipqeHs
      2bM89dRTpKWlOYWn2Lx5M2VlZY5JOTk5OU6/CwsLOXPmDEajkaVLlzpcJgWDD41G06UJigJB
      byBaAD1k9+7dzJ07lylTpvD999877bvvvvu46aabWLlyJU1NTW3CUyxatIglS5Zgs9lITExs
      83vOnDmsWrWK++67jy1btrgph4K+4PIQBgJBXyJaAD0kMzMTjUaD0WjEZDJ16K/cXngKm83G
      G2+8wapVq5DJZG1+f/DBB5jNZry8vJxmMwsEAoErES2AHlBQUMD06dN59tln+cMjSYIAACAA
      SURBVM1vfoNMJsNoNDr2e3l5OeKGXBqeYvHixURERPDhhx9yyy234O3tjdVqbfP74sWLPPnk
      k45YLgKBoP9hNBrbDWvd1NTU41D5e/fupbm5me3bt6PX69usN2KxWNi1axenTp1yhLmuqqpi
      9+7dHDt2rMvhVloRBqAHGAwGR9wfaInl09DQ4IgAGRMTg7+/P2+++SZeXl7cd999vP32246p
      4p6envz44498/PHHjun0l/6+6aabeO2119BoNEyePNld2RQIBJ3Q2NjI119/jUajoaSkhKNH
      j6LX6/njH//IiRMnMBqN5Ofnc/r0aQAuXrxIZWUl586dw2Kx0NjYSGNjI/n5+Zw4cQKbzcbx
      48cxGAwcOnSozSzjmpoafvjhB8fCPa3hV7Kzs8nJyeHkyZN8+umnNDU18f3332MwGDCbzRw/
      fpyysjLsdjs//PCDI74YiC6gHpGSkuL0OzU1FWiJwtnKfffd5/h/9OjRjhglAA899JDT8YmJ
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='384' name='Peso Altezza' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Peso Altezza (2)' width='384'>
      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
      bsDhcMjhcES2bdtWjx49VFFRoebmZsXGxqq4uFhtbW0644wzZFlW5FFRVlaWWltbNW/ePK1c
      uVLBYDBay+gWXO0dUFtbq4qKCs2dO1cbN27Uv/71L8XHx8vj8cjj8Sg2NlZOJ++SAfwwjY2N
      cjqdmjx5surr67V69WoNGzZMoVBIb775pvbu3auCggINGTJETqdTd955pyzL0vr16yN3C/hh
      2g1AcnKygsGgFixYoH379mny5MlKT09XXl6eLMvSuHHjjqs5APz/uN1urVy5UsXFxVq4cKEu
      v/xyORwOzZ8/X42NjZoyZYrOPvts5ebmqrW1VT179tSwYcM0e/ZszZgxQ8uXL1dbW5ts29Z1
      110X7eV0aQ67Aw/wPR6PioqK1KdPHw0YMECSVFhYKKfTqZycHO4AAPzPAoHAdz5RaGpq0scf
      f6xJkyYpHA6rtbVVCQkJfPn8H3UoAAAQTV+9Z+TL5o+LAACAocgpABiKAACAoQgAABiKAACA
      oQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACA
      oQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABjK9c0dtm1HYw4AQCc7YQACgUA0ZgEA
      dCIeAQGAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgA
      ABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgAABiKAACAoQgA
      ABiKAACAoToUgHA4rNraWgWDwci+5uZmeTyekzYYAODkcrV3QFtbm5577jmFw2F5PB49++yz
      Kiws1KJFi+RwODRt2jSdf/75nTErgG7i8OHDWrFihR566CG5XC5t2LBBJSUlSk5O1tSpU+Vy
      ubR69WpVVlbqnHPO0dVXXy2HwyFJ+uCDD1ReXq60tDTdfPPNiomJifJquq527wCqqqpkWZby
      8vI0atQoffbZZ1q2bJmefvppPfzww3rnnXdk23ZnzAqgG/D7/crPz1dcXJxs25bb7daRI0c0
      Y8YMpaena/fu3aqpqZHb7da9996r4uLiyNOGuro6ud1uzZgxQz179lRBQUGUV9O1tRuAlJQU
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Relazione tra punteggio e altezza' width='384'>
      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
      f70mT56swsJCbd68WcuWLdPrr7/eawAKCwv16KOP6sUXX1R1dbV+/OMfq6ysTJZlqaioSHV1
      dXrhhRdUUlKihx9+WKNGjdLq1av13HPPaf369brnnns0ZswYPf7445LOxuy9997TX/7yF82c
      OVOXXXaZHMdJfV6Stm7dqlWrVmnWrFkaM2aMJGnGjBkqLy/XpEmT5PP59Oc//1mvv/663nzz
      Tf3sZz87r589cgsBQIrX69U999yjCRMmSFLqtEE0GlVeXp4mTJiQuiplzJgxuvbaa1Pbnjhx
      Qvv379d1112niooKeTweVVRUaOLEiTp27Jjq6+tTR8OnT5/WiBEj9OCDD2rixInyer265JJL
      NHToUO3bt0/t7e0aPny4duzYoXg8rptvvlnS2dMV9913n2zbVjwel23bmjNnjrZs2eLqhdG2
      tjbt2rVLkydP1vz581VSUqLLL79cd911lx555BFt375dc+bM6fYsIBwO6+OPP1Z5ebkWLVqk
      QYMGSTq7M3dz6kmS7rzzTjmOo3g8rmQyqRtuuEGvvvqq6uvre/16n8+na6+9Vhs2bNDhw4dV
      Xl6u6dOnpz6/c+dOdXV16ZZbbtHo0aPl8Xg0d+5crV27Vlu3btWCBQtUUFCgadOmyXEcVVVV
      aceOHbr66qu1YMGC1Dq//PyhQ4e0detWlZeXa+HChanP/+QnP0lF3LZt3Xjjjdq4ceM550bu
      IwBIsSxLfr8/9bHX6z3vc7vHjx+Xbdvq7OzUs88+m7r91KlT6urqUktLi0aOHClJGj16tH79
      6193O20wYsQITZ8+Xe+//75OnjypoqIibdmyRaNHj9aUKVMknT1y37x5s9577z0dPnxYHR0d
      qWcubq5mamxsVCgU0vXXX68hQ4ak1l5WVqbi4mI1Nzerq6tLxcXFqW3q6uoUjUY1c+bM1M5/
      oPbt26e//e1vqq6uVmtrqxKJhKLRaI/TTuervr5ejuNo7969qZ99JBJJXU105syZ1Fqam5u1
      fPlyhUIhLV68uMepm87OTi1fvlzHjx/X448/rquuuir1ua1bt+qdd97RwYMHUz/7aDTKe4Mu
      YgQAafFlKJqbm7V///7U7YWFhSotLe32wurw4cM1bty4HvcxZ84cvf3229qzZ48KCgpUX1+v
      KVOmqLS0VNLZS1B/97vfafjw4br99tt15ZVXqrm5WStXrnQ9r2VZPa5SchxHjuPIsqweR/Vf
      XtL574EciLq6Oi1dulQtLS365je/qWnTpsnr9erpp58e8HsrvlxLfX29QqFQ6vZRo0appKQk
      tc5YLKaXX35ZBw4c0KJFizRt2rRu9xOPx/XGG29oz549+tGPfqTKysrU52pqavTYY49p0KBB
      +t73vqfy8nJ1dHToueeeG9DMyA0EAK58eZVKQ0NDt9tHjx4ty7I0atQorVixotvVLF8eIX65
      TW87WEmaMmWKxo4dq82bNys/P1/t7e2aNWtW6oj7/fffVzKZ1M9//nNdd911chxHn3/+uesj
      55EjRyo/P1+HDh1Se3u7SkpKUi/ytrW1acaMGSooKOi2zYgRIyRJn3/+uWzbTgXP7aWQu3fv
      Vn19ve69917Nnz9flmWpvb09dSVPX7xeb+rNYF+GSjq7o8/Ly9O3vvUt3Xvvvd1+9qFQSPn5
      +YrH41qzZo3effdd/eAHP9D3v//9bs/ubNvWxo0b9dprr+nWW2/VXXfd1e3zmzZtUiQS0S9+
      8QvNnTtXlmXpyJEjXzmIyC6u3YIrJSUlkqQPP/xQO3fu1LFjx9Ta2qqSkhJNnTpV+/bt05/+
      9Cc1NDTo1KlT2rJli5544gn961//6ve+i4qKNH36dNXW1uq9995TXl6eZs6cmfp8IBBQJBJR
      VVWV2tvbtW/fPq1atUotLS2u1jBkyBBVVlbq4MGDWr16tVpaWlRTU6NXXnlF8Xhc119/fY/L
      MYcOHaqysjJ99tlneu2113Ty5Elt3bpVH374oav3O3i9Xtm2rYMHD6q5uVmHDx/WypUrdfz4
      8X63LS0tVWdnp9avX68DBw6opqZGyWRSlZWVGjRokNatW6cPPvhAra2tqqur09q1a7Vs2TIl
      k8nU+rxer2644QadPHlSNTU1OnLkiMLhsBoaGrRy5UqFw2HNnTtXzc3NqqmpUU1NjUKhkAKB
      gKLRqPbu3au2tjZVV1dr5cqVampqcvWzR27hGQAk/e9ReX8vaJaVlWnevHnasmWLFi5cKI/H
      o4cffli33XabHnjgAT311FNasWKFnn76aUlnT5nMnDlTXq+33+8RDAZVWVmpDz74QFVVVZo3
      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
    </thumbnail>
    <thumbnail height='384' name='Relazione tra punteggio ed EtÃ ' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='TOP 5' width='384'>
      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
      /l9eXs7bb78NVIZUt2zZsoqst7f3ZZPtt8uVoq7+GfpZWloqJlSUyWSXTTz7+/tXCV+9F/zy
      yy/odDrmzJkDVPrbly5dyv79+9FqtfTr14/Dhw8zZMgQunXrxptvvom3tzfOzs5iqPf7779P
      eno6S5Ysualju3jUIbztBE7trLxGem06x7aNpm7kYPzrdqu21dzlxcn89eccLOZyItq/jU/t
      q0dA3ZACOHv2LFqtFicnJ8rKysSMoN7e3nh6eoqhYU5OTmIYWL169XBzc8PZ2ZmioiIxeVd4
      eDh5eXk4OzsTEhKCXq8nNTWVdu3asXv3bnx8fC57mO8ETzzxBF999RXx8fHk5uZecTJG4sHD
      YrGwevVqRo4cye7du0X3wxdffEFERARBQUEYjUY2b97MgAEDyM/P58CBA5w+fZrg4GCaN2/O
      kiVLiImJua/DeO+3ylKAaGXdz1wKufwn7733nvi/Tqdj586dBAQEMHDgQB577DFMJpOofGfP
      nk1xcbG4IPZm8andFjfvMHQlKSjVrpTknqYk5yRqR29qN3qckIiBuLjXue7I/X+x262Y9IUU
      Zh4iI34dZQVxAJzfP4u6TYfiF9wRJ7fal1kb11UAVqsVvV7P008/jUwm4+eff8ZoNF4m5+Dg
      QEFBwRVHLt7e3pw+fZrw8HCSk5Pp0KEDKSkpVWTc3NwQBIGsrCwxnOtOolar6dKlC0FBQTRs
      2PCyRSwSDyZyuZxp06ZhMpmASldFs2bNcHFxoaCggIkTJ3LgwAGMRiMKhYJPP/2Uw4cP07Fj
      R1q1aoVMJmP48OFkZGRcsbOQ+Hfj5OTEpEmTRMvP0dGxSoI+mUx2w6uKr4RS7UL7/mvRl2lw
      dg+hJO8smYk/U5C+n7Rz36M5vwbv2tEEh/fHv05nlOqru6msFj3lRYkUZB6iMONPtEUJCPaq
      ngy9NoP4Q3OJl83H1bM+vsEd8AuJwd0vErWDx/UXgpnNZjIyMsREaVlZWTg6OqLVagkNDSU7
      OxsPDw/UajV//vkn7u7u1K1bF5lMhre3N0lJSTRs2JCkpCRSU1MJCQkhMjKSlJQUQkNDsVgs
      5ObmUrduXeLi4igpKaFjxzufP3zfvn3s2bOHbt268eeff9K2bVt69OhRbfuXsoHev2RlZeHv
      73/ZanQJiXuFQZdL7sWdZF7YhK44CagswVmr4aPUatALfVk6Tu7BqB08KM45QUHGn5TknsJY
      kQ8IIJPj5tUA35CO+Aa1R1uUgNVcjm9we4qyj1OY8SdlhfEI9spMDGpHLzz8o+6flcBpaWkc
      PHiQwYMH35UXc+vWrdSqVYtWrVqRm5vLpk2bqi1aAiQFICEhcfPYbWZK8s6SkbCBvNTfsdtM
      yORKBLu1Mu+VTIHdVmndKpSO+AS1xze4A74hHXByCbzqhLJgt2EyFFGYeZjCzEMUZh7CYiq7
      fxTA3ebIkSN89dVX+Pr6YjQaKS8vJyAggHnz5lXL/iUFICEhcTuYDMVkxG/g4tll2CyVC+ec
      3UPwr9sFvzqd8QpoecsTx3a7FW3BXzVXAdjtdux2+2XfV0fOFJAUgISExO0jCAIXjn9G2rk1
      ODh50+bRL3H1rL7a5TVWAdxpJAUgISFRHQiCHWNFHioHd5Sq6imDeokalwtIEASys7Px8vKq
      kiPF1dUVd3f3q25XVlZGVlaWGNucn5/P8ePHiYiIEHPBS0hISFQ3MpkcJ9fbWzl9NWqcArDZ
      bPzxxx80b96crVu3it/HxMTQuXPnK25z8eJFzpw5g8lkIjIyEovFwo4dO+jfvz9bt27F09NT
      CiOVkJB44KixLqCsrCwcHBzw9fXFYDCQkZFBWFjYFWXtdjtyuZwNGzYwcOBA8vLyiI+Pp2vX
      rqSkpFBaWkrr1q2rzCkUFxdf06KQkJCQgMpSub/88gvh4eG0atWKc+fOsXnzZqxWK3369Lks
      pXhOTg4rVqzgzTffRCaTsWzZMnJychg2bNhV8yNlZmayevVqpkyZgt1u56effuLChQs1zwKA
      yrUNR48exdfXl5YtW6LRaPj999+vqgD+d8Wf1WpFra4sJOLg4CDmZv9nPnS5XC7VB5CQkLgu
      69evp7CwEEdHR6Kjo/H29ub1119HpVLxxhtvVMm3ZLfb+c9//kNBQQGAmD3hmWee4d133+Xz
      zz+/bP9lZWWsXbuW5ORkFAoFcrmcNm3a8NRTT9VMBXD06FG2bNmCo6Mju3btQq1W88wzz9zw
      9q6urpSUlACQm5srrgz85/oFmUwmKQAJCYnrMnLkSE6cOEFaWhoKhYK6dety5swZDh06RKtW
      rar0Izt37qR58+bExcUhl8uJi4tjzJgx+Pj44OzsjFwuvyx/lZeXF9OmTWPKlCnivoKCgjh0
      6FDNVACdOnUiNDQUhUIhdt7XyusRHx9PSkoKGRkZbN++Xay+9Ouvv6LT6Rg8ePDdarqEhMS/
      jP/tsAVBIDMzE61Wi7Ozs5iRVqvV8t///pfZs2dz5MgRCgsLsdlsYuj61RIXXul7g8FAenp6
      zVQAUBnFs2zZMjF5XY8ePejVq9cVZSMiIoiIiKjyXZ8+fTAajTg6Ot6zjJESEhL/PsrLy+nb
      ty99+/bllVdewWq1Yjab0el0xMTEsG3bNpKSkjhy5AihoaGcPn2amJgYKioqbqgvslgsuLi4
      MGLEiJqrAFJTU3nuuedo167dLW0vk8lE5SEhISFxK9hsNr755huSkpIwGAwYjUZkMhmxsbFi
      rZX8/Hw+++wz5s6dy+jRo4HK+uNPPPEEFouF999/n19++YWnnnrqisfIyMgQCyO9//77PPzw
      w2zbtq2yGE5NjQI6ffo0P/74Iy1atACgSZMmNGvWrNr2Ly0Ek5CQuFUu1SdRKpVs3779mhXQ
      LmU1uJksBoIgYLVaa64CKCgoIDk5WfwcHBwsFtKuDiQFICEhcb9TY11AZWVlxMXFiZ/VanW1
      KgAJCQmJ+517U5jzPsDX15d27drRrl07vLy8yM7OvtdNkpCQkLir1FgF4OrqKvrVmjZtSmJi
      4k1tb7PZyMrKEheBSUhISDxo1FgXUGxsLD/++CNQOaP+9NNP3/C2drud9evXExwczK5duxgy
      ZEiVsnESEhISDwI1UgEYDAays7Pp0qULPXr0ENM63CilpaV4enoSExODu7s7ycnJNG3a9A61
      VkJCQuLOUCNdQKtXr6aoqIicnBzWr19/09vr9Xox0Zu3tzdarba6myghISFxx6mRCiAnJ4dB
      gwYxYsQIzp8/f9PbOzo6otfrAdBqtbi4VG+RBgkJCYm7QY10Ael0Oj7++GOUSiUJCQnMmjWL
      zp07061btxva3svLi7y8PBISEjhx4gQDBgy4wy2WkJCQqH5q5EKw4uJiTCZTle9cXV1xc3O7
      4X3o9XqSkpIICQm5YjEYaSGYhITE/U6NVAB3A0kBSEhI3O9cpgDsdrs0qVkNFBYW3lRuDgkJ
      CYm7zRV7qJpiFFyKBAoJCUGpVFbrZK6Xl5dYa0BCQkLifqTGuoBiY2PZsGEDer2esWPHcuTI
      EZ599tlq27/kApKQkLjfqZFhoFCZDnr48OGEhoaiVqvFEo8SEhISNYUa66Tu2bMnixcvJj09
      nbi4OF5++eV73SQJCQmJu0qNdQEJgoDBYKCsrAwXFxccHR1vOiXEtZBcQBISEvc7NdYCOHz4
      MKtXr8bDwwOA7t2707Nnz3vcKgkJCYm7R41VAAUFBQwfPvyWawJLSEhIPOjUWAUQHBzMihUr
      OHnyJABt2rShbdu297hVEhISEnePGjsHoNVqycnJwWazoVAo8PHxwdfXt9r2L80BPFhYrVZM
      JhPOzs7IZDIEQUCv16NQKC6r9WC1WjEYDDg7O6NQKLDb7ej1epydnZHLa2xgncQDSI21AFQq
      Fdu3bycjIwNvb2/GjBlzr5skcY84fPgw69atQ6lUEhgYyBtvvMFXX31Fbm4uMpmMKVOmiEqg
      uLiY2bNn4+npSXh4OAMHDmTevHlidtj3338fmUx2L09HQuKGqbEKYNu2bYSHhzNu3Dji4uL4
      8ccfGTdu3BVlBUFAq9VitVrx9vZGJpNht9spKirC09MTlUp1l1svUZ0EBwfz8ccfo1arGTdu
      HBqNBq1Wy8yZMy/rzFevXs2LL75IZGQkAGlpaQB88MEHLFq0iAsXLhAeHn7VY+Xm5vLNN99Q
      WlpKmzZtGDJkCIsXL6a8vByA8ePHi4EJGo2Gr776CrvdztixYwkNDWXr1q3s27ePRo0a8eKL
      L0oWh8RtUWMVgEqlory8HLlcjk6nu2bentjYWHJyclCpVOh0Op544gk2bdqEh4cHWVlZDB48
      uFpDSP/NCILAyZMn+f333wkLC6N///6cP3+egwcPAtCxY8cq1dVMJhPnz5+ndevWACQnJ/Pj
      jz/SrVs3OnToUC1tCgkJwWw28+GHH9K+fXsSExM5deoU77zzDkqlkvfee0+8v2fPniU3N5eK
      igoefvhhPDw8xPa2aNGC5OTkayqAnJwcXnjhBfz9/XnjjTcYMGAA+fn5zJgxAwAHBwdR9vPP
      P2f69OkYDAYWLFjAhx9+yObNm1myZAmLFi0iPj6eJk2aiNf1jz/+4OjRo8TExNClSxcOHjwo
      1rt4/PHHCQ4OFve9c+dOTpw4wciRIwkMDKSgoIBly5bRtGlTHnvssWq5rhL3PzV2+PDoo49i
      MBh44403OH369DXTQDRv3pzevXvTsWNHKioqKC0txcnJie7du9OsWTOSk5OvuJ0gCNLf//wV
      FRVx4MABnn/+eeLi4jhx4gRbtmyhXbt29OnThzp16oiyBoOB1157jVOnTiEIAlarlQ8++IDR
      o0fz448/kpGRUS1tKisrY+zYsXTv3p1hw4ahUql49tln+eijj2jWrBl79+4VZb29vZk1axaf
      fPIJW7ZswcnJCZ1OhyAI6HQ6nJycrnmsFi1aEBQUxOHDh3F2dkav15OYmMiKFSvEzvqSrMVi
      wWKx4O7ujtVq5cKFC7Rq1QqlUkn37t2JjY0VZWNjY8nOzmbkyJH8/PPPZGVlsWHDBvr06UOf
      Pn3w9vYWZU+dOsWRI0cYMWIE06dPx2azMXPmTIYMGUJcXBwHDx6858+J9Hd3/mqcBWC327l4
      8SK+vr60bdtWjPzR6/VXTQZns9nYsWMH8fHxPPnkk+j1etFM9/PzQ6PRAGA2mxGEyjn1S5OK
      ElVxdXXl5ZdfxmQykZ+fj7u7O2lpaRQXF+Pi4oJarRavm0wm49NPP+Xo0aOYTCbS0tJo3rw5
      bm5u9OvXjz///JN+/frddpu++eYbevbsSUBAABqNhvDwcGbPnk2rVq3QaDSEhoZy8uRJwsPD
      iYqKYu3atXTt2hWFQkFoaCjLli2jQ4cObN68mTlz5lzzvtvtdj7//HMEQWDGjBkolUo++eQT
      9Ho9X3zxBWq1mrCwMADGjRvHwoULcXZ2JiMjA6vVis1mw2QyYbFYqjxj4eHhhIeHU1paitFo
      RKlUUlBQgEajoW7dusjlclH24MGDDBw4EC8vL0JCQkhMTMTHx4eAgACGDBnCqlWraNOmzW1f
      V4n7nxqnAARB4OzZs0RGRrJnzx7x+zZt2uDn53fFbRQKBb169fo/9s4zuopqbcDP6SW9d1Ih
      hARCJ4AoRQj2ftVrQeCzgO1aUbEA9oKg0kRUUAGpYqFLCb0TQoAkkEZ6ctJzepnvR8xIhCAl
      CJjzrHVWksmemT1zZva791tJSkpi5cqVJCcnYzQagcbqYlqtFqCZGkgul5/mPeKkkfz8fD74
      4AMeeOABOnTowMiRIykpKWHu3Ln07NnztAprCoUCtVot2mDUajWenp4Uq6ww2gAAIABJREFU
      FRW1yj3u0qULWVlZrF27FrVazciRIxk1ahTz58+nffv2dO7cmaeffprp06dz3333sWjRIhYu
      XMhzzz2Hr68vI0eOZOHChYwYMaLFZ6iJtWvXotVqefLJJ5FIJFRVVaHRaAgPD6dLly4YDAas
      VisajYbIyEjef/99CgoKmD17NnFxcXz99dcolUp2797NkCFDml1/WloaX3zxBc8//zwBAQGM
      GjWKiooKFi9ezIgRI+jVqxfQKITc3d1Rq9W4u7tjNptxdXVFrVbj5uaGIAjOZ7eN0OYEgEwm
      46677kKv13PrrbeK21UqFYIgnNGDY9++ffj6+iKXy7HZbHh5eVFUVERhYSF79+5tdhwnZ8dk
      MjFhwgTeeecdQkJCEASB7t27o1AoGD58OOPHj2+xxGZoaCgLFiwAICMjg/Dw8Fbp07Bhwxg2
      bFizbT179hRnwTqdjueff17Uzz/44IPN2vbp0+ecAwqrq6vJycnh9ddfB+C5555j2rRpGI1G
      fH196dmzJ88++ywTJkwgMzOTFStWIJfLefbZZ9FoNAwZMoTnn3+eqKgoUf8PjcblKVOmMG3a
      NFxcXLDb7Vx33XXIZDLat2/Pzp07RQEQFBREbm4uYWFhFBQUEBkZSVlZGQ6Hg9zcXAIDAy/s
      Rjq56mizcQCbN29m7dq1eHt7k5+fj0ajITg4mOeee+60tvX19Rw7dgyHw0FCQgKurq7U1dVx
      +PBhoqOjz/jCOOMAzkxxcTE///wz3bt3ByAyMpKlS5eSkJBAdnY23bp14+TJk3h4eNCzZ0+O
      Hz9OcXExISEhxMfH8+233xIdHc3hw4cZM2bMv874bjAYSElJ4YYbbjiv/Q4cOEBmZiZRUVEA
      hIeHs2zZMhITE0lNTeW2227j119/JTk5GT8/P+bOnUtcXBxlZWU8+OCDLF26FBcXF06cOMED
      DzxwxjKnTv59tFkBsGrVKgBuuOEG0aNn69atvPnmm61y/CtNABQUFLBw4UKqq6u5/fbb6dOn
      D9nZ2SxZsoRXXnmlWdusrCwWLlwIwMMPP0xERAQrVqxg3759DBo0iOuvv/6S9VMQBFasWMGt
      t96KTCa7ZOc5H+x2O+XFRdhsVgJD212Vbr8Oh4MVK1a0uLpqLQSh0ctr9erVmM1mxowZQ1BQ
      ELt27eL48eOMGDGiWfuKigq++uorjEYjI0eOJCwsjNmzZ1NcXMyIESNEe8ipWCwWFi9eTEZG
      BmFhYfzf//0fRqORBQsWMGDAAOLi4sS2e/fuZePGjUDjRO6ZZ56hoaGBb7/9Fm9vb5566qmr
      8vtsLdqcCqiJa6+9lilTprBx40ZcXV15/vnnRWPuv5Fjx45x77334ubmxltvvUV4eDiLFi0i
      Nzf3tLYzZ87klVdeQSqV8s477/C///2P/fv38/rrr/Pyyy/Ts2dPPD09L0k/JRIJd9xxxyU5
      dkvYrFbsdjs2q7XxY2v8aTabsFmt1NVUU1FaAkB1pY64Lt1QXAErj/raWgDc/nBIOBtSqfSS
      D/7QKADy8/MZO3YsDQ0NzJgxg1tvvZW0tDQyMzNPEwAff/wxY8eOJSAgAEEQWLNmDV5eXtx3
      33288cYbzJgx47RzVFRUEBAQwB133MHMmTPJyMhg8+bN6HQ6iouLmwmALl260KFDBxwOB//7
      3//w9PTk/fffZ9y4cezZs4clS5bw3//+95LflyuVNisAXF1dee6556isrEShUCCRSHjkkUcu
      d7cuGU067rVr1xIQEEBAQACvvvrqabN/gB49eoi69qSkJI4cOcKQIUPQaDT07duXEydOXNVe
      InU1NZzMPk5dbTUWsxnB4UAQBBwOAUFwnHXfsqJCKsvLcPf0wjcgEN+AQFxc3f6hnv9JQW4O
      memHAIjq0JGg0Hao/0hjcTmRSqXcddddOBwO5s2bR69evejduzd9+vRh3Lhxp7UvLCxk1apV
      aDQa7r//fg4fPszjjz+Oj4+P6FL712sKCQkhJCQEnU7H0aNHGT16NGPHjmXdunWnHV+lUqFS
      qUhJSWHgwIHYbDZcXFwIDAzk5ptvZty4cU4B0BZJS0tj9uzZ1NXV4e3tzeDBg//VxlybzcYH
      H3yAm5sbr776aosDhSA0+uoHBQWJv6vVanGZLJfLsdvtl6yfDoeDnIxjlJcWExQaRmSHjq12
      bKvVQk7GMQpysxEEAZlMjlQmRaFUIVcoUCpVKFUq5Ao5coUSlUqNXKHAbrdxMvsENrsND09v
      aqurqNJVUFVRTlZ6GhqtCz4BAfj6B+Lp7YP8j3tlt9vPGmB4PgiCgM1qpbKinPLiQnRlpQiO
      RmGVnXGU7IyjSCQS1FotGo0WtdYFrYsLGq0Laq0WtUZDeXExNVU6wqJi8PJpvbxXf6WqqorX
      X3+dm2++mRtvvPGs12Q2m7nllls4duwYX3zxRbN7drZndOvWrXz33Xe8//77f6tqtdvtLF26
      lA8++ABBEMTo6aacT22ZNisAMjMzGTt2LFu2bOH2229n5cqVl7tLl5R58+YRGxvLPffc02Ib
      vV6PWq0mKytLdFN88sknGThwIL///jv9+/cnLS2Na6+9tlX7JjgcmExGaqurqSwvpfhkoyru
      xLEjePr44untc1EzW8HhoLykmONH0zEa9KjUaqI7dsIvMBjlKZG3ZyO4XQSCw4FMLsfhsFNf
      W0tleRmV5WXU19ZSmJtDYW4Ocrkcjz/6W1dTTXC7cGLiEi64/2aTiZpKHWXFRVRWlGGzWgFQ
      /uG1BuDl64fgcGA0GrBZrVQbdAi6ihaPWVNVRXy3Hrh7erW6KksQBD744APGjBlD586dW2zT
      FHfj7++Pv78/rq6ubNu2jQ4dOnDw4EH69++PXq8/430rLS1lwYIFTJs2rUV3VavVisPhQKVS
      sWfPHhISEkTvqNraWoxGI5mZmURERLTm5V91tFkj8KFDh6ivrycrK4vs7Gzi4+NbdSl4pRmB
      3377bTHlha+vLzfeeCOLFi0iMzOT2NhY7rvvPt59913mzZvH6tWr2bhxI4IgMHz4cAYNGsSn
      n35KRUUFUVFRPPHEExfVF0EQMOr11FZXUa2roKa6CqNej8Nx+spCKpUSGBpGVGwnNH/EW5wP
      +oZ6jh85TEVpCRKJhKCwcKI7dkKt0VzUNTQhCAJmk5Gaqip0ZSVU63SYjIY/G0gkuLi4onFx
      QePigoure+PvGi0qjUac7QqCg7qaGlxc3bA77FSWl1FWXESNTofN9ueg7xsQiH9wCJ7ePphN
      JgBcXN3E/FRNNgyTwYDRoMf4x099fT31tTXN+q5UqfDw8sY3IBAvXz+0Lq4XrUKyWCw8+eST
      +Pv7A9C9e3c8PDzYsWMHmZmZdO7cmTvuuINvvvmGDz/8kJ07d7J48WIkEgmPP/44wcHBTJo0
      CavVyq233srgwYNPO8e+ffuYPn06wcHBAIwcOZKVK1eSk5ODIAhce+21VFZW0qlTJwYMGMCM
      GTO4//77xfdx+/btLFmyBGhM3ufu7n5R13w102YFQF1dHTKZDJVKRWVlJTKZrE2ngz5+/Dg5
      OTkkJycDiGqeJk8cQWhMxXC+HhMmo5GMtIOYTSb8AoMwNDRQU12J2WjE4fhT3+7q7oGXry9e
      Pr447A6qKsrRurpSmJeLyWhAJpcTEBxKVIeOaFqI2D4Vu93OyZwT5GYew2634+rmTmznRLx8
      /S6pntxut1NVUc6hPTtF/fWZXjGJRIpMJkOpVqF1ccViNlNfW4NcocDhcGC32YDGQdo/KAS/
      wKBm6qXzxWazceJoOjVVlfgFBqGvr2+2opBKpWhcXPH1D8AnIBAvH1+kUikGfQNqTeumuV6z
      Zg0xMTHExMSIfZNIJOKz5nA4cDgcF6w+EwSB2bNnM3r06BaPYbPZkEqlZ72u/Px8cnNzGThw
      IIIg8Msvv5Cens4NN9wgujE7HA7Wr1/P3r17iY6O5r777kMQBBYvXkxhYSFjxoxpMcPAlcA5
      CYDq6moMBgPu7u64ujbOEqqrq3Fzc2t2g6uqqgCueB9ih8PB6tWr8fPzo0ePHhQXF7N8+XKe
      ffbZVjvH1SYAWgtBELDbbDTU11FbVUVZSRG1VZXN2shkclzc3PDy9cPrDxVPS6oIh8NOYV4e
      uVnHsJjNSCQS/INCiOgQi5u7x2mDuSAIVOkqyDx8CH19HXK5gogOsYRHxSD9h9xKBUGgWldB
      la6CoNAwNFoXjAY9Br0efUM9Rr0eg74BQ0MDVqsFh93eTEgoVWr8g4IJCA65pAJLEARqqirR
      lZVSWV6Gvr5OFMpyuRyVRou+vg4XVze697sGlVpz2Y3M/xS///47KSkpYiK+jRs3kp6ezsiR
      I3nllVeYOHEivr6+WCwWUlJS6NOnD0uWLMHX1xe73U5DQwO9e/fm66+/5uOPP77cl9Mi5yRi
      f//9d4KDg6msrESj0XD99ddTUVGBVqttJgDKysqQSCRXvADYsmULixcvRqVSsWzZMiwWC/fe
      e+/l7tZVg9ViQSqTicVQLCYT9XW11FZVUlNVSX1drTizPBU3D09i4uJx9/Q6Z927VCqjXVQ0
      QaFhFBfkczL7BGXFhZQVF+IbEEhE+1g8vLyxWi0IDoETR9MpLWpMEucXGESH+C5oXV1b+xac
      FYlEgrefP95+/uI2Fzd3XNzc8SOoWVurxYLJaCAr/TBVunLkCgU9+g3A9R9QS0gkErx8Gldd
      7TslYNTrqdJVoCsroaaqCn19HdCoRtudshEXVzfcPDxx9/TCzcMDtUZ7wSuSi6GliP3WZPDg
      wVx//fWi51JAQABbt24lIyMDrVaL5g8VolKppH///hQWFpKdnU2/fv1YvHgxzz77LJ6enths
      tn+kvxfKOQkApVJJr169UCqVrFq1isrKSurr6xEEgYMHDwKNEZ4RERHIZDKqq6s5evQo/fr1
      uyIvfMCAAfj4+ODq6kpoaCgymcyZV/0cKczLITvjKAqlCncPT+pqazAZ9M08g9QaLd6+fnh6
      ++Dm6UVtVSUmo5GwqGhc3S5sYFMolYRHtyekXQSlRYWczD6OrqwUXVlpowrF0pjozGa1otG6
      0D6+M/6BQUiu8O9VoVSiUCpJ7NOX2qpKXNzcUGvO39bRGmhcXAhxcSEkPAKrxcK+7VtoqKtF
      KpMhlcqortRRXakT2ytVarSurrj/IRRUGg2lRQWNq66YDucs5M+HnMxjlBYV4BcYTHTHTpfs
      vf3rcbVaLVVVVezdu/c01VF+fj7ff/895eXleHl5YbPZxLQhV0owY0uct5ItKCiImpoadDod
      drudkpISMVna8ePH0ev1rF27lptvvvmKHPyh8UtpypaYnZ3NTz/9xIgRI5w1gf8Gu81GTmYG
      FrMZi9kszhBd3dzx9PHBw8sHT28fVBpNswff2/fsCdLOB7lCQWhEJEFh7agoKSb3eCYNdbXi
      /0MjIomJS7hg7xa73c6JEyfw9vZultitqKiIwMDAZtclCAKZmZmoVCoiIiKQSCTk5+cjlUoJ
      Cws7v+uSy/HxD7igPl8KFEolva65jsryMjy8vVEoVVjMZupqqqirrqautoa6mmpqKnXUnCIU
      mpAA7ePP7AV0oegb6snOONr4e32maBf5J/j1118ZM2YMHTt2ZObMmWRnZ4t1IOLi4njvvffI
      zs7mu+++w93dndLSUiIjIzEajVfsOAjnKQAEQaCkpIR27dqJ25RKJUlJSaIq6MCBAwQEBIgZ
      Mq9U0tPT6dy5M7/88gtvvvkmy5Yta1EAGI1G9u3bR01NDYmJibRr146CggJSU1OJioqiU6dO
      V/SXfLEIgoOK0lIy0w9hNhnF7TGdEggNj7wsUbEymYzA0DA8fXzZsXEddpsNuUJBh/guyC7Q
      eGiz2XjiiSfo2bMn+/bt45lnnqFLly7s3LmTxx57jI0bN4pCoSmdc2hoKA6Hg3vvvZft27ez
      c+dOHA4HAwcOFA3qTe1NJhNSqVRMPGgymRAEAY2muW69yT/ebreLNYotFgs2m+0ffa/kCgUB
      IX8WkdFotWi0WgKC/9xm0DdQX9MoDMqKizAa9AAU5GajVKsJi4y+6Fm6IAjoykvJSEtttv3Q
      np107NIVv8DgVl8J/Prrrxw8eJCDBw/y6aefkpyczOTJk4mMjKS0tJQRI0bw1FNP8frrrzNp
      0iTCwsLIy8vjySefxNPTk0mTJqHVaq/44jrn9KaYzWZ2795NfX09arUaH5+Wpe6AAQMwmUxi
      5N2VOjB26tSJOXPmEBUVRWVl5Vk9gHJycmjXrh1du3ZlxYoV/Oc//2HLli3ceeedrFmzBn9/
      /79NA3y1YtA3kJV+mIrS4kY3ytB2eHh5o9Zq8PFvTIJ36NAhTpw4Qd++fQkICCA1NVWcITWV
      TmyiKR13UFAQAQEB6HQ6Nm/eTPfu3cVEZueDSq1unKlWlOMXEHjBgz80LvunTZuGSqXC09OT
      kpISoqOjWbZs2WnxEwUFBbi5uXH33Xfj4uKCSqVi3bp1TJ06Vcx42iQAHA4Hn332GRUVFVRW
      VvLYY4+Rm5vLwYMHsdvtdOrUiYcfflg89oYNG1i3bh0qlYpRo0ahUCj44IMPUCgU3HTTTZc0
      F9P5onVxReviSkBIKP7BoZw4lg6CQG11NVnpaZQVFdIhoQseXt4XNBaYjAayjhymrKgQiURC
      YEjYH2o9gdKiQtL27r4ktp5bbrmFW265pdm2L7/8koaGBtzc3MjJyaFPnz4EBgYybdo06urq
      cHV1FSfCM2bMwGq1XtEeQHCOAqAp/71WqxV9Zq+55hoxNUCTQSQqKgqJRIJCoaC2tvZsh7zs
      xMfH88Ybb+Di4oLFYiE6OvqsbaExbF2lUlFTU0NoaCgajYbExETy8/Px8/Nrpge/2gvC2O12
      SgtPknc8E7vNhsbFlajYOLz9/MUX2Wq1snHjRjIyMoiLi+OVV17ho48+Yvfu3SQmJjJ16lRe
      fPHFZmmb8/LyeO211xg5ciS33HKLGIr/3nvv8fbbb1+QA4FSrSEorPEcF3vPHQ4Hs2bNori4
      mJdffplZs2bxn//8h99//x2LxSIePy8vj23btmE2m8nNzWX8+PFIpVKsVisymQyLxYLJZBL9
      82+88UbCw8M5efIkS5cu5amnnuLmm2/GZDIxfvx40QnBbDaLhWWaBpPPPvuMxx9/nOjoaJ5/
      /nkGDBjQYv8FQWDLli1s3LgRo9HImDFjqKioYOXKldjtdgYPHtzMt/7gwYMsXrwYPz8/nnrq
      KQRB4IsvvqCyspL777+fLl26nPO9U2u1JPRoXEXX19WSk3GU2qpK9m/fQnC7CMKiYs55tehw
      OKgoKSYn8yhWiwW1VktUbBw+/oGia61vQBDZGUeoKC2hulJHREwsgWHtLqk9T6VSYbFYCAwM
      5O677xafB41Gg91ubzYGyOXyK34MOCcB4OHhIVbAaqJJsp0q4U6tZ3qpkoW1Jk3X9Hf+xoIg
      sHPnTsrKyrj99tupqKgQ/eGVSiXWPzxeTnXlk8lkV22q4mpdBZnpaaIBMCYunrDI6DPOrocO
      Hcrw4cMxGAwsWrSIgIAAxowZg8FgYMmSJbi6uor3QRAEZs2axdixY7HZbFRUVBAbG8vgwYMR
      BIE9e/Zc9nQcEyZMID4+nsceewy9Xs+6deuoq6tj+/btGI1GJk2aBDS6Ot900008+uij7Nu3
      TyyjqFQqsVgsjW6Up7wPHTp0IDc3l/fff5+33noLlUrFe++9R1paGuPHjxfvUX19PWlpaWLg
      3vjx46mrqyM6OhqNRoOrq6uYu+pMOBwOJBIJb7zxBkajkY8//pjnn3+eHj16IJPJePrppxk+
      fLjY/ptvvmHKlCmsXLmSTZs2YTabSUhIYPDgwbz00kvMnDnzgu6jj68f3v0GUFZcRNaRNArz
      cigvKaZDQmcCgkPPuhpoqKsjI+0gNVWVSCRSItrHEhHT4TSPo4DgEHwDAjmZfZzc45mcOJZO
      WXEhcYndcPe8tC7YV+u7/VfabCqIHTt2YDAYzmk5feTIEQwGA7fffjsSiQQ3Nzd0Oh2CIFBQ
      UCBGPZ4qSCQSyRWr/moJs8nEiWPpYioG34BAYjsnonVpeWktk8k4cuQIU6ZM4aWXXkIikbB2
      7VqmT59OXFwc/v5/rhgWLlzI8OHD0Wq16HQ6qqurCQgIQCKR4OvrS0lJyRnvWV1dHWlpaYSE
      hBAZGSnmKJJIJKepI4uKisjKyiIhIQFfX18cDgcHDhzAxcWFuLi4s34n1dXV7Nmzh969e7Nm
      zRq6dOnC2rVrAfjwww8ZNWoUJSUlHD16lEGDBvH5558TGxvLhg0bxEybX375JRaLhT59+jQ7
      15YtW5g/fz6fffaZuIp++eWX2bt3LwsXLqRHjx5iMNSgQYN48803KSoqYvbs2SgUCqxWK1qt
      FofDcdYZrkwmY+jQoZhMJqZPn87111+Pr68vmzdvZseOHc088+x2O15eXri4uHDdddfx3Xff
      YbFYGDt2LG5ubrj+oVK50OdYIpMRFNYO34BAThw7QtHJPNL376X4ZD6xCYm4uLk1O7bdZiPv
      eCZ5J7JwOBx4eHkTl9gNN4+WJ5NyuZyo2DgCQkLJSEulqqKcvVs3ExYVQ1SHjudtn2oMXEzF
      bDISExd/RRnmLwVtVgC0b9+eTz/9lLCwMDHAzc3tzFkdCwoKqKur4+eff0apVHLDDTfg6urK
      ihUrEAThqvYeMjTUN6Y6lkjIO56FxWxCo3UhplP8387UAHJzc/nss8/49NNPxRVVcnIyycnJ
      /Pjjj6xfv14sbrJnzx68vb05efIker2eN954g7y8PKDRle5MhXUcDgdz584lJCSE7777jnHj
      xrF//36WLFnCPffcw3/+8x+xbX5+Pu+++y533nkn48aNY/LkySxduhSr1UppaSmDBw9m4MCB
      LV6LWq0WK3UBzaKeH3jgATw9PZk+fTqDBg1CJpPxySefsGnTJu655x4SEhJITExky5YtyOVy
      +vbtK+5rtVqZNWsWb7/9NnV1dQiCQGpqKh06dCAmJga9Xo/FYiEzM5NOnTpRUVFBTk4OBQUF
      BAYG4u3tzapVq+jWrds5uRWWlJQwYcIEHnzwQQYMGIDD4UCpVOLr60txcXGLEcpNhcJbG4VS
      SVxiN4JCw8hMP0RVRTl7tmyiXXQMYZHRCIIDfUM9WYfTaKivQ6FUEtOh43kZkF1c3eje9xqK
      8vPIzjjKyezjVJQUE9s5ETcPT+RyebMVhM1qxWq1YDYa0esbGoPzGhqor63BoG8AIPPwIZIG
      DvnHAggvB1dMKgibzdZqmRPPhfT0dH755Zc/skLK6Nev33klORMEAavV2uJy/GqIBLbbbGxd
      vxqrxQI0GkFDI6OI6hB3zjOnjz/+mMLCQsLDw5FIJAwaNIgVK1YQERHBjh07GDduHJs2beLW
      W28VV0rbtm1Dp9Nx++238+KLLxIZGUlqaipTp049zWh26n2ePHky119/PSEhIeTm5pKfn9/M
      OHv06FF+/fVXnn76ad5++23+97//8d577zF16lQMBgPvvPMO77///kXds6Yi6+eDyWRi7ty5
      YpRt165dkUgkbN++HZlMxk033URRURHHjh1j7NixFBYW8uOPP+Lq6srIkSORSqXMnz+fiooK
      Ro8efVY7icPh4IUXXuDJJ58UUy2UlpaKK7ExY8bwxRdfoNfr8fT05IknnuDzzz9nzZo1OBwO
      zGYzHh4eDBw4kOeee+6CVUAtYbfbKczLISfzGDarFblCgfBH6gdBEAgIDqF9p87nlO6jJUxG
      I9nHjlBckA9IkMllKBRK/IODMRmMGA16LGYTVoulWTqSM+Hh7U37uAQ8fXxbfUVvNpvZsmUL
      Q4cOBRptjBs2bMDb25sbbrih2Xi4a9cu0tLSuOuuu/Dx8aG6upply5YRGxt7VpvQ33FOAmD9
      +vUEBQWRkJBAaWkpDQ0N4sP1dzQZpQYMGEBRURGhoWeeVa5cuVJ0mRIEgZSUFK677rpLqkbJ
      zc0lLy+PuLg4FArFWb2bzperQQDU1dSwO2WD+Hfnnr3PadZ/Knq9HqPxT9dQb29vKisrxZTS
      crmcd955h3feeUecvZ6aqdFisZCbm0tISIiocvgrJpOJ999/n+DgYB577DEkEgl79+4lLy+v
      mQCwWCyMGjVKvO9TpkzhlVde4ZNPPgHghRdeYPLkyed+g/5B9uzZQ5cuXS66GLvFYmHcuHGi
      u2j37t0RBIFdu3YhlUrp3bs3vXr14osvvuCTTz5h+/btLF68GC8vL1599VUcDgfvv/8+NTU1
      PPjgg5dsdWs06Dm8bw+11Y3pYyQSCQndexEQcn7PX0sIgkBVRTkHd20/46pGoVSidXVD6+LS
      6Mnk6tqYOlujobjgJCajAX1dHdWVOiRSKYEhYcTExbdaEsGysjImTpxIaWkpy5cvx2az8c47
      73DHHXewa9cufH19ueuuu4DGic3333/PAw88wPTp05kxYwYvvPACDz30kFg9r0ePHhfUj3Oa
      cuv1elJTU2nfvj1Go5G6usacITk5Oej1euLi4jAYDGLe+KKiIsLCwqitrUWr1dKpUydMJhNr
      167lmmuuwcfHB7PZTENDAxKJhIiICNGQWlVVhVqtJj4+/pIO/jt37mTLli3o9XpiYmJYs2bN
      v7ogzF8RBIGyogIAJFIpPn7++AUGn/c9d3FxOW3W7ufnJ7rF2mw23nzzzWaqi1NVK0qlktjY
      2LP2c+7cuQwfPryZWuVMrFixgtGjRzNo0CB++OEH9uzZg9VqRRAE9Hp9M6PslUZrDbRKpZIp
      U6actv3uu+8Wf//999/F2tf9+/enf//+zdo2GbovJRqtCzFx8RzYue0Pj57AVhv8oVGg+PgH
      EBjajpKCfCQSCVGxcfgGBKJ1cT1rCovI9n8+j6VFBZw4mk5JQT7lJUVE/aGauhh3Y2h8R6ZP
      ny4WZJLL5UyYMAGHw8HevXubxXukpKTwyCOPEBsbS1BQEHl5ebjPQFwjAAAgAElEQVS7u9Ot
      WzcCAgL44YcfLq0AkEql9OzZk7179xISEgI0+n7X1dXh7+/P6tWrSUhIoLKykpCQEBYvXszY
      sWPZvHkzN954I9u2bWP48OFIpVLkcjlSqVQcEH7//XdGjx4NQE1NDb///jt33HEH27Ztu6Sl
      AXNycrjtttvYuHEjZrMZg8Hw9zv9i9CVlZCffRylSkW3pP64eXheEoErl8svSrVns9nIyclB
      q9Vy/PhxrrvuOo4dO8aBAwcoLy/Hz88PX19fdDod8fHxzJgxg4aGBrZs2cLAgQPp2rUrn332
      GeXl5WctTtKWuFLiCLz9/Ok1YCCGhgZ8A4MuyfPXsUtXfAMCUanVF1RXIjAkDB+/APKzj1OQ
      c4LjR9MpLjhJ+07x+AYEIpFcmMvpmWwbBoOBd999l+jo6GZBhGazWRQIbm5uVFdXi39rNBos
      f6hwL4RzfjOjoqI4dOiQqCYpKipi6NChKJVKMjIyCA0NJTU1FZPJxIABA8jPz8dut4vuUhqN
      Bi8vL6Kjo0UD1P79+7njjjtQq9VUVFQwf/58Ro4c+Y8Uab7hhhuYPn062dnZ5ObmMmbMmEt+
      zisFg17PsUMHEQRBLAxypSKTyXj88cfFFaKXlxexsbFiIQ+tVsu8efN45JFHCAsLY/z48eTl
      5fHuu+/i5+fHww8/TFpaGi4uLrRv3/4yXomTM+Hh5Y2H16VLHimXywk8JZr5QlAolcTExRMc
      Fk7WkcagyEN7duEbEEhC916tkhBPEATGjx/PfffdR58+fZr9z8/Pj4KCAsLCwiguLiY8PFz0
      QiwsLLyoNPbnLAAkEgkDBw5k+fLl9OnTB5VKRXV1NT4+PlgsFpRKJYIgUFdXx+DBg1m+fDmR
      kZHNjiGTyTCbzajValJTUwkMDBSLOvj4+BATE8O2bdtEo8ilxNvbm8cee4yMjAzat28v9uPf
      jsPh4OjB/ZhNJiJiOuAbEPT3O11GpFLpaUF6pxbwEASBJ554QlQ5BQcHN/suZTIZ3bp1+2c6
      6+RfjdbVlcTeSVSWl5GVnkZFaQm7Nm/APzgEweEgLCr6rC7Tp5KZmcmiRYvYtm0bkyZNYvjw
      4ezcuROtVssvv/xCcnIyRUVFxMXFMXz4cF544QXWrl2Lv78/Pj4+hIeH8/rrr1NYWMhHH310
      wdd0Tkbg1NRUOnfujEwmY9OmTURFReHv78/69euxWq0kJSUREhJCVlYWer2ebt26sX79enr1
      6oWnpycHDhyge/fulJeXs3HjRhITE8nOzhbrcw4YMIDs7Gy6detGWloa/v7+FBcXi0UXLgUH
      Dhzgm2++oVevXqSmpnL//fe3qsHrSjUCHz9ymLwTWXj5+NK93wCkUikOh4MNGzYwY8YMfvrp
      J+rq6pgyZQoWi4X6+nri4+N5/PHHgUaD7PPPP4+XlxdyuZyJEyeSkpIiVlh65513roogQCeX
      HpvNxtKlS9m4cSOzZ8+msLBQ9CoqLS3lnnvuEYPSduzYwZIlS0SBP2bMGH788Ud2796NVqvl
      zTffPKOBvLS0lM8++4zExETuu+8+fv75Z/bs2QM0xu8sX75cVLd88sknlJeXYzAYePTRR4mL
      i+PVV1/FZrNx7bXXcuedd56zisjhcFCQm83xI4dFI7OHlzede/ZGpda0Sv6j1157jXfffRep
      VIrNZhPrlzdRVVWFu7v7xXlPCm2UZcuWCQcPHhQEQRCKioqEmTNnturxq6qqWvV4rUFFabGw
      bsVSIWXNb4K+oUHcXlNTIyxZskR49tlnT9tn8uTJQlpamvh3eXm58P7774t/22w24ZlnnhFM
      JpNw+PBhYerUqZf2IpxcNZw8eVJYtWqV8MILLzTb7nA4hJdeekmoqKgQtxkMBsHhcAh2u114
      8sknhdraWuHpp58WBEEQli5dKqxevfqM51izZo2wbt064csvv2y2vaSkRHjllVeabTMYDIIg
      CEJmZqbw8ccfCytWrBB+++03wWazCc8++6z4//Mh8/AhYd2KpeJn/c/LhF0pG4TsjKNCXU21
      YLfbz/uYgtB4jy6kP+dLmw0ECwwMZObMmbRr146GhgZKS0upqqritddeu9xduyQYDXqOHNyP
      RCIhLrEb2lM8dzw8PLj77rvZu3dvs30aGhrIzc0V094C6HQ60tPTmTBhAgMGDCApKQkPDw9U
      KhXx8fHMnTv3n7okJ1c4YWFhhIWFsXnz5mbbMzIy8PHxaeZ2rdFomDdvHtu3b2fIkCFUVVWJ
      Nptu3bqxevXqM54jOTmZEydOkJub22z7vHnzmiXYA6itrWXy5MlkZ2czceJE5s+fz6OPPopM
      JiMgIACDwSDmNTvna4yKwaBvwGwy4eHlTU1VZWO67OpqcjKPoXV1wy8gEN/AIDw8vc45qEwi
      kZx3Xy6ENisAunfv3maMgna7nSMH92Mxm89L7z9nzhxGjRrVbFkcGxvLV199hcVi4eWXXyYu
      Lk5cAgtXcOUjJ1cGgiDwww8/MHbs2NOeleTkZEJDQ/n111/p1asXtj/qIttstvMqrKLT6dDp
      dKe5F3t7e3Pvvfeybt06UlJSxLxN0PiOXMizq9FqSezdV1RnOxwOjPoGdGWllJUUU1tVib6+
      jrwTWag1jRl01RoN1boKAkPDCAmP/PuTXELarABQq9UXHXRzNSAIAjmZR6nWVeDp7UNMp4TT
      HnS73Y7RaMRisdDQ0IBKpcJkMnHixAn+97//AY0uujabDZ1Oh1KpxN/fH7lcjlarRa/XU1hY
      yJ49e+jVq9fluEwnVyBWqxWz2Sw+VxqNhvz8fJRKpehOXlpaiqurK/n5+QQHB9OnTx9WrlyJ
      m5sbR44coa6ujt9++63FKH2DwYDBYMBkMokz+KagKalU2vj8/5HO/ejRo3To0IHk5GTmzp3L
      zTffzNKlS3nggQcoKSlpMRXM33Fq3i+pVCqW/wyP6YDZZKKitJjykmJqqiopyv9zpVKlq8Db
      zx+N9vKljJZNmDBhwmU7+2VAEATq6+uRSqUYDAYsFos4CzibMcVkMlFWViZ6oDQ0NHD48GGU
      SuUZi3SYTKZ/ZAn3d+jKSsk8fAilSk23vv3PmOKhtLSUefPmIZFISE9Px8fHh/r6erp27UpA
      QGMyrE8++QR/f38CAgJYtGgRmzZtYujQocTHxxMXF8ecOXOwWq2MGDHCWV7TCQDHjh1j8eLF
      4nMVExPDyZMnGTRokPgejRs3jqSkJCorK/nhhx/YtWsXgwcPpnPnzoSHh/PVV18RHh7OsGHD
      zjhDX758Ofv378dgMFBcXExCQgIlJSViLZLi4mI++eQThg8fzpo1a1i9ejVZWVk8+uijdOzY
      kaNHj4pBoEFBZ14Z2+12UlNT8fX1FVciNptNdIg5td3+/fvZvXs3vr6+uLi4UFNTw7YdO4ls
      34GErt3RurigKysV96mvq8XDy/uSlM88F66YXED/FDabja+++orevXuzfPlycfugQYNaDJAp
      KChgx44d2Gw2HnjgAex2O4sWLaJ3797s2rWL22+//bQ0BleCF5DJaGDX5g3YrFa69ErCP+jC
      XF0FQWDdunUtvoROnFwIDoeD9evXNwt6am1SU1MJCAhocXD/O8xmMxMmTGD//v0sWrRIfKfn
      z5/P559/zu7du8W2P/30E1VVVYSHh7NixQqmTp3K2LFjefjhh/n+++9577338PbyoiAvB11Z
      KRaLmfqaGhQKJdEdOxESEfmPT57anAAQ/sh4WFdXh1wux9XVFYvFQm1tbYtVvSwWCzKZjBUr
      VnDXXXeh0+k4dOgQQ4YMISMjA7PZTGJiYrN9KisrT6uh8E/icDhI27OT6kodYZHRRMdd2tQa
      Tpz8G3E4HBiNRqZNm8Zjjz2Gl5cXxcXFzJ49G4PB0MwH3263I5PJqK2t5fXXX+fFF19kyZIl
      vPjii2zYsAGj0cjNN9/857HtdvJOZHEy5wSCw4GPfwAdO3dF+Q+qptvcWr1pENy6dSvp6elY
      rVZKSkpYsGBBi/solcpmRiiTydQsNFuvb6yD2lQxymw2i4Lmcn1yMo5SXanD08eXqI6NZRkv
      d5+cH+fnavtIJJJmKl673c4XX3whGrFPbSuVStm7dy8vvfQSL774opgqRxAEfH19qampaX5s
      qZTIDh3pdc11uHt5UVlexq6UDRSdzBOzo17qT5s0AqekpLB48WJUKhXLli3Dbrfz3//+95z3
      12q11NXVAY0z/abAp1OrBBkMhn8kpcVfsdvtVJQUU5iXg0KppHOPXv+a6kVOnFwumvKYVVZW
      Ul1dzZw5c9i9ezebNm1i2LBhQGOK+e+//55p06ah1WqpqKjgl19+QaFQUFhYSEhIyBnHBA8v
      b3r2v47crAzyTxwn6/AhqsrL6dg58aLSYp8LbVIADBw4kKCgIFxdXUVvhLOpR3Jycjh58iQn
      T55k69at9O7dm4aGBlJSUsjPzxfruV5ujHo9qbt30FBfj0QC8d16otacbqB24sTJuVFTU8OC
      BQvYtWsXCoWCYcOGMWfOHKDREaTp71tvvZXvvvsOb29vZs2ahZubG4888gj19fVMnz5drHfR
      ErI/Sq/6BgSSkZaKrqyE3dWVxCYkEhgadsnUt23OBtDEiRMnmDFjhljEOTk5ucVskWazWUxG
      Boil+XQ6HV5eXmdMM3w5jMDZGUfJyTwGgEKh5Jqhw1slUZUTJ20Vu91OdXW1+LeLi4vo3dek
      +m2qd2E0GjGZTEDjisHLywur1fq39S7+iq2pNObxLATBgX9wCF4+vri4urV6ico2KwB+/PFH
      IiIiSEpKuiTHvxwCQFdeysGd2wHw8Q+gW1J/p+HXiZNLiM1mw2q1XhKX77qaatL370XfUC9u
      69qnH36BrZfAsU2qgADi4uLYsOHPalghISGEhYVdxh5dPD5+AXTvNwCjvgH/oBDn4O/EySXm
      YutdnA13Ty96XnMdOzauE8u21tVUOwVAa+Dh4UFwcLBYlNzFxeWqFwASiQQfP3/w87/cXXHi
      xEkroFAqiWgfS15WJiqNhuB2Ea16/DYrAFQqVbNCCmeK5nXixImTy4lEIiE8uj2h4ZFIZbJW
      DxRrc3EATdjtdkwmEyaTiaNHj3LkyJHL3aVmNJU1zMrK4lQzjSAIlJWVkZKSQmlpY0i5wWAg
      JSWFoqKiy9VdJ06cXCIkEglyheKSRAm3uVxATbi6uhIVFUVMTAxBQUHs3Lnzb4uOn4rD4aC+
      vl6scfxXLiYXkM1m4/nnnycsLIz169djMpmIiYkBGlPpfvnll3h5efHZZ58xbNgwJk6ciJeX
      F1999RV9+/Y9rUi7EydOrm4qKyuZMWMGW7duZfPmzdhsNrHiYn5+PjNmzGDdunUYDAY6dOjA
      li1bmD17tlgruyV7YJtVAaWmprJw4UKgccC95ZZbznlfQRBYs2YNUqmUmpoa7r777lY1BDkc
      DhQKBddeey1yuZyqqirxfzExMbz77rsIgkBKSgo6nQ61Ws3dd99NREQEq1evZsSIEa3WFydO
      nFx+PD09efTRRwHEOIMmVCoVo0aNwtPTk2effZakpCSWLFnCBx98wOTJk8nMzKRjx45nPG6b
      FAAOhwO5XM7DDz9Mp06NaRLOZ3lVW1uLIAgkJyezf/9+srOzT8s9fjEoFAratWvHyy+/jE6n
      4/PPP2/2v+rqaiZMmMCQIUNQKpVizqHQ0FA2bdrUav1w4sTJlYFMJsPDw4P6+nqKioro0aOH
      +L/AwECOHTvG2rVrCQoKQqfT0blzZ1xcXLjhhhtITU11CoBT+fHHH8nNzcVqtZKfn98sQdO5
      oNfr8fLyQiKREBQURH5+fqv2r6ysDL1ez5dffklZWRmzZs3irbfeEs/9zDPPMGHCBKKjo6mp
      qaGmpgZozFoaGBjYqn1x4sTJlcOPP/7Ivffee9qEtaSkhIqKCgRBwGw2ixoJhULRLIj1r7RJ
      I3B2djbPPPMMr7/+Ort27Trv/RUKhVhDwGAwtHphGQ8PD0pKSli+fDlz5swhPj6e3bt3s2/f
      PjZt2oRGo2H79u189913QKNBe/78+cyaNavFaGYnTpxc3ZjNZvbt2yfaKi0WC1arldraWq67
      7jpefPFFFAoFDoeD48eP43A42L17d4uzf2ijkcAvvvgiERERyOVyNmzYwJAhQ+jRo8c5V7Oy
      Wq0sXryYoUOHismg/hr1e7GRwPX19Rw5cgRfX1+io6N57bXXePHFF5HL5ZSUlIjtIiMjcTgc
      pKamEhERccF5z504cXJls3XrVgRBEKujffDBB9x8882UlJSwdu1aNBoNbm5uvPDCC3z//fcc
      OXIEDw8PXn311RZLarZJAXDixAnq6+ubbQsMDDyvwbOiooLDhw8TGRlJRETEaVb21kwFIQgC
      Op2uxXoFTpw4aVs4HA5mzZrFmDFjkEgk2O120bbZlKbaZrOJf7dEmxQA/wRXQkUwJ06cODkb
      pxmBm4wITi6Ouro653104sTJFc0ZBcCp6U//zVitVqqrq3F3d0cmk7VqAZdT3TOdOHHi5Eqk
      zaqA8vLymDlzJmazmSeeeIKjR49y5513ttrxnSogJ06cXOm0STdQgM2bNzN27Fg6dOiAp6cn
      xcXFl7tLTpxcFBaLhYaGBhwOB9C4mtfr9dhstjO2P9U/vKnt2XzGnfz7aJOBYAD9+vXj66+/
      pry8nMLCQqf/vJOrmszMTL766ivc3NwwmUxMnDiRefPmkZeXh8lkYtKkSWKOKKPRyHfffceO
      HTuYN28eAIsXL+bgwYMYDAYmTZok1rn+JxEEgcOHD5OZmUn79u1JTEzEZDKxa9cujEYjgwYN
      apZfq6SkhG3bttG3b19CQ0NxOBxs3LgRmUzGtdde26Lro5M/abPJ4Hx8fOjatSuxsbFcd911
      Z02YdCFcTDI4J07OFw8PD5KTkxk4cCCbNm2iffv2rFy5ko8++kgsS9iUrqSyshKlUklBQQHD
      hg3DbDYzd+5cPvzwQ3x8fNi2bRtdu3b9x6/BYrHwyy+/EB8fz6JFi/Dx8WH58uVoNBpMJhOr
      Vq1iwIABQGNQ1AsvvMDAgQP54osvuPbaa1mwYAH19fWUlZWRnZ1N586d//FruNposyqg9PR0
      xo8fz9dff81HH33E6tWrL3eXnDi5YBQKBYsWLeKBBx6gXbt2CIJAVFQUAPHx8c3SlQQGBtKv
      Xz8xnUBtbS2BgYHIZDJiY2MpLCy8LNegUqkYM2YMnTt3RqVSoVarefrpp7n99tvp3LlzM6+6
      I0eOcO2119K3b18GDx7M4cOHSUtLY8SIEYwaNYoDBw5clmu42mizKqBjx47xyCOP0Lt378vd
      FSdOWoW7776bHj16MGXKFJKSkjAajUDjalSpVLa436mpTSwWS4uZbe12O5mZmdTU1NCjRw+U
      SiXZ2dkUFRXRrVs33N3dm7Xdv38/rq6uxMXFIZFIKC0tJSMjg169erWYsnzbtm1MmTKFoKAg
      IiMjkUgkLF68mJ07d/L222+L7Wpra8WCTv7+/lRVVYlBT0qlEkEQEAThtFV9VlYWM2fOxGaz
      ERERwVNPPcWkSZOw2+3YbDbeffddVCoVAIcOHeKbb77BZrORmJjIo48+ytdff82RI0fw9PRk
      /Pjxl6wc5D9Fm10BtG/fntWrV7Nq1SpWrVpFVlbW5e6SEycXzOHDh8nNzcXHxwcfHx80Gg1Z
      WVkUFxezbNky+vTpQ0FBAeXl5RiNRkpLS2loaKC0tBStVktFRQW5ubksWrSIfv36nfEcc+bM
      ISUlhYyMDD788EO2b9/OnDlzqK+v56WXXmo2Q//666/Zv38/ixYtYtOmTeh0Ot544w1qamoY
      P348drv9jOe45pprWLZsGbfccgs//fQTixYtori4mE8++QRXV1exnb+/PwUFBUCjR19QUBBW
      qxW73Y5er0cmk51RpSuXy3nnnXf44osvyMnJIT8/H29vbz744APat2/P0aNHxbZqtZqPPvqI
      adOmcezYMaqrqzly5IgooA4ePHhB39WVRJu1ATgcDlQqFVKpFKlUire3N97e3q12fKcNwMk/
      ic1mY+XKlezdu5c+ffrQq1cv4uLi+PHHH+ncuTPXXHMNEydOJCkpiYqKCtauXYuHhwc5OTlE
      RkbSu3dvFi9eTFhYGMOHDz/j4NmlSxeSkpIIDAxky5Yt+Pv74+fnx/XXX8/WrVsZMmQICoUC
      QRCYP38+r776Kj169GD+/PmYzWaSkpIYPnw4aWlpREZGNlsxQGOKlk8//ZSTJ0+SkpLC0KFD
      mTp1KuHh4ezZs4fy8nKkRgObFv3IgO7d+XbJEoqKijh48CAPPfQQCoWCb775hs2bN5OcnCyq
      wE7Fy8sLmUzGd999h1KpZPjw4SxYsICUlBSysrIYPXq0aDz29fVFEARmzpyJv78/3t7eWK1W
      unXrhkQiISsr66q3M1zd65eLICAggG3btrFv3z46dOggJlhy4uRqJCQkhKeeeqrZtvbt2/PK
      K68AjROeu+66i5CQEIAz1q94+eWXz3oOpVLJjh07mDt3Lm+99RZqtZr/+7//Y+PGjbRr105U
      ndjtdpRKJTKZDI1Gg8PhoLy8nMTERKCxuIlerz/t+NHR0Tz33HNUVFRw22234enpyfz588XV
      ghKBWU8/zX3duyLbsI6pb08iV1fJww8/jFqtJjk5mfj4eKRSKcHBwWe8BqvVyiuvvEJSUhIP
      PfQQx48fJzw8nMcee4xvv/2Wo0ePiv20WCw89dRT3HHHHSQnJ5OdnS2qyqxW6xnVP2azmalT
      p1JWVobdbufDDz9Ep9MxdepUJBIJd911F0lJSc32WbhwIcXFxbzwwgtkZGQwffp05HI5r7/+
      Oj4+Pmf9Ti6WNisA1q5di8ViYcKECezYsYP58+czevToM7ZtSqzkcDhQKpVisiWLxYLiEtXq
      dOKkNZFKpVxzzTUXdYyUlBR++eUXpk+fjkKh4O2332bGjBkEBQUxadIkysvLCQwMRC6XY7FY
      sNvtGI1GZDIZAQEBFBQUEBMTQ3V1dTN1ThMSiURUYTXh5eUFggCVOti7h7ED+uOqVoPdjkpX
      QceOnZrtHxYWdtZrWL58OQkJCSQnJ6PX69HpdLi4uKBWq/H09KSsrIzCwkJ8fX2ZM2cOt9xy
      C/3798dgMBAREcG+ffuor69n5cqVZ6y8Z7FYuOmmm0hISGDx4sXs3r2b1atXM27cuDMmc8zL
      y+PQoUOi8Jw1axbvvfceRUVFfPPNN7z00ktA4xi0b98+1q9fj5ubG6NGjUKtVrNgwQKOHz/O
      jTfe2EywHDx4kJ9//pmkpCSSk5Mxm8189dVXGI1GHn/8cTFLQZsduRoaGggODkatVhMUFCQa
      zM7EkSNH+O2331izZg0pKSkIgsDGjRtZs2YNP/30U4v6TCdO/orD4eDQoUMsW7ZMDD48dOgQ
      mzZtYtOmTZhMJrFtXV0da9as4eeffxbTs+h0OpYuXUpOTs75n9xshspKuMDndcaMGcTHx7Nw
      4ULWrFlDjx49mDlzJj/99BMFBQW4u7szffp0oFFdNG3aND766COGDh3KwIEDWbBgAYsWLaK8
      vPzcM+821MP2rfDbL1BSjGtAIGi1IJXCnt2Ql3te1+Dl5UVxcTEzZsxg5syZJCUl4enpyeTJ
      kxEEgUGDBjFp0iSMRiMhISGkp6czY8YMsfbG6NGj+fDDD0lMTDyjisnNzY2EhAQyMjJYt24d
      nTp1Ij8/n2+//ZaJEyc2Czh1OBxMmzaNp59+Wtwml8txc3MjNjaWsrIycbvdbufAgQM89thj
      hIeH89NPP/HDDz/g7u7Oa6+91qwver2e2bNn89xzz5GSkkJOTg5ff/018fHxDB8+nKlTp/55
      vvO6e/8ibrrpJmbMmMFvv/2Gh4cHY8aMabFtx44diY+PB2D+/PnU19ej1+u59dZb2b17N7m5
      uWLRdidOzsbGjRvJysoiLi6O8ePH89VXXzFr1iwxDcmpmVn279+PRCLB3d2dt956i6lTp/La
      a6/x8MMP8+GHH/Lee++du4qgrg5W/QpGI0RGwXWD4DzjXj7++GMMBgMAGo2Gdu3a0bFjR8rK
      ypg8eTLFxcXi/x9++GEOHTqEi4sLHTp0QCKR8O6773L8+HFuueWWv181WyxwJB2OHG783cUF
      unaD6PaNK4LcHNixDVI2NQq06HN7/4YNG8awYcOabXvooYfE3xsaGnjooYfw8vLijjvuOG3/
      vn37igVZzoQgCPz2229s3ryZjz76CK1Wi6+vL48++ii1tbVMnjyZyZMnA7Bs2TLkcjlpaWnk
      5uaSl5fX4nHlcjmPP/44FouFQ4cOMWTIEBYuXEhycjLLli3jhhtuENsWFRWRmJiIh4cHt912
      G/v376ewsJDRo0ejUqmYN2+e6CHV5gSAIAjU19ej1Wp56qmnRF3e2RLBSSQS1q1bR05ODkOG
      DKG+vh5fX18kEgmhoaHi0tZisYgvsNVqPeuqwknbpG/fvvTv3x+j0YjD4aC6uhqtVkvXrl1F
      tUjTc9O0pD9+/DhyuVw02Pbo0YP6+no2b958zhHs8vQ0FH8MzkJuDnazGVu7cISwdnCOEbN/
      VWGYTCaCgoLE2byrqyuPP/642P+4uDixHTTOjrt3797sGk9DEJDmZKM4ko5U3wByOfYuiVjb
      xyIoldCUqiKsHfKkfih270TYtgWrvgH7/7N33uFRVHsDfrcmu+mNVEIIIYEQQugdqYKgIggK
      6P3s3SsqKooiUhSUIhZEL/ZyKVEB0aCAIL1DIECAJKQ30jfJ9t35/hgyGgk9FG/mfZ48ZIcz
      Z85MZs/vnF9tfeV1uVUqFV26dLns7255eTlr1qxh3rx5kkFcqVRSXV2Nu7s7giBQVVWFyWSi
      Xbt2+Pj4SN5TNpsNu91Obm4uOTk5hIaG1htHeXk5U6dO5a677qJjx44sWrQIvV6PXq/n9ddf
      Z+7cuYAoxJRKpaR+q66uxm63Y7PZEAQBh8Mh/U2anABwOI57w0wAACAASURBVBx8++23dO3a
      lcTEROn44MGDz1oZ1KFSqRgwYADR0dHs2LGDwYMHSzlTLBaL5GP9V19rjUYjewHJnIUgCJIr
      4eTJk/Hw8KB58+YsXryYtLQ0Pvzww3pZZF977TV27NjBlClTMBqNhISEoNPpCA4OJiUl5cLv
      mMkEu3fCqQzpkEKtRp2fhzo/D/buhubh4go6OBg0544XuBBX9L4LTigsFNU65WWiiieqNXTu
      isrNjQZFVJu24O6OYuMGtPv2glIF7eIueWdz9lgE8ecybHs2mw2dTsfbb78NwD333MOLL77I
      Bx98gNPp5LnnnmP58uWEhoYyYsQIYmNjsVgs2Gw2WrduzQsvvMC7776LXq9n8uTJ0jN1Op1M
      nTqV6dOnS3aOsLAwOnbsiJeXF0lJSVI5yLCwMFatWoWrqyvHjh2jbdu25OXlUVNTg7u7O2q1
      Wuq3yWYDtVqt9fStKpUKvV7foPtbeno6fn5+qFQqVq5cyd13382PP/7IiBEj+P333+nXr58U
      lFKHnA1UpiFOnTrF7NmzmTdvHl5eXjidThQKBQqFgu+//x5fX18GDhxY7xybzcbzzz/PSy+9
      xOeff860adNYvXo1er2eIUOGNHwhQYD8PNi2FYy14OUNXbuJk2RAAJSWQEa62KZulanTQVhz
      iIiEoCDQaMBqEYXCxUyqVqvYp0YDES3hQkFSdjscSYGqKrBZISdbvE5IKHTqDP4BF3fdvFzY
      8geYzaKaKKHTZU3eANTUiAKztlYcQ9j5jcqXiiAIrFq1ittvv/2SchWVl5fz4IMPSqrooUOH
      0rx5c+k96tSpE23atGH9+vU8++yzfPjhhxQWFuJ0Opk1axY5OTnMmzcPlUrFfffdR5cuXYAm
      LAD27t3LN998g7e3N4WFhXh7e9O2bVsefPDBs9rm5ORw4sQJBEGgXbt2hIaGkpeXx5EjRwgP
      D5ciHf+KLABkGmLu3Lnk5eXRokULFAoFt99+O5988gmtWrVix44dLFy4kB9++IHbb7+dlStX
      YrFY0Gg0kuB4+eWXadmyJcnJySxcuLDhiFqrBfbvgxPHRUEQ01aczFxdG25bVAwZaZCfL34G
      cHcHbx/R+6ZZIMS2E/uyWMR/zSbxX5tN/HE6oahQNDID+PjCGc+WszCbxRW/wyFOuHV4+0Dn
      LuKO5FIn8OJi2LAOLGaI7yDer/ISk8GZTLB3D6SfCQr18oahw8Dd49L6uYbY7XasVis6nY7P
      P/+cUaNG4evriyAImEwmdDqdNDfZbDYp/qmOJisAfvzxR6KiooiPj2fjxo1otVrWrVvHjBkz
      GqV/WQDINERtbW09va6fn5+UwKzOd33WrFnMmjULh8NBQUGBtK3XarVYrVYyMzMJDQ1t0JWS
      4mLYtgWqKkVvmd59xVXshVbSgiCu4AvyRXVRbi44r6F3m4cHjBwN50lZcUHKy2Ddr2A0QnQM
      9OpzYUEiCHC6WBSW2Vl/2hjqUKuhRUuIiwM//wa7uFFwOByXnAG1yQqA48ePs2TJEgYPHszG
      jRt56KGHWLZsGY0VGC0LAJnLoc5Yd8n6dLsdkg/C4UOgQFTB9OglqnUuB7MZVv8oqkKUKoiI
      ECfnutWjTgcKpaju0WjEiba2Fg4dFD/36CWuoP+OAnDVie0tFtizS1QBxXeA8BaXN9a/UlkJ
      69aKO4tWraF3n7NVUYIg3l9mBhxPFc/hzLhaRYn3aTKKO6aTJ0SBAhAUDHHtITTsog3nZyEI
      4m4rOxsiW4keWReDzSZes5FjjpqsAABRH5uamkrr1q1p3bo1BQUFUqTklSILAJlrQl2Q1I7t
      ol5fp4Ou3cWJ7EqNoRUVok4/JFQ0EF9Mfw67KBiuZ3BkdbWoDqooF4VK336gdRHVVCWn4cQJ
      yMkSJ1WlUlRxRceIbf++A7HZxB3R8WN/qre8faBtLERGgksDarW/Y7WKAqWiQrz+kZQ/jcwB
      zcS/mUolCleNRrS5uLqIglenE885nirukvoPEl1iG4kmKwAMBgOff/45ZWf+qAMGDDjL+HYl
      yAJA5qpSVQWHkkWdd1GhOFGFhokqn4ZUQ02NmhpRCJSXiZOop5f4jMrLAUE81rIVREeL9ooL
      CTeHQ/RSOpYi2koEAXR60Wbh4Sn+HULDRCFTVSUKn/Iy8cdQ/afN5Erp3BU6NF6thibnBlrH
      xo0biYuLIzU1lR49ekiCQEbmH0HyAXF1DuLqsWdviGlzfVfef0MQBJKSkjh06BCDBw+mW7du
      7Nmzh/Xr15OQkMAtt9xSLyCsvLycHTt2cOuttwJiQNOXX34p5fy/JNzd4ZYRsOw70bhbZ3cJ
      CoLoNuJqX6O5+F2SSgVhYRAaKk7ux46Kz3/bFrEPQRBVRg7H2XYErRYCg8DPD3z9oNogejxF
      RYtqILMJ7A7RAG+1iuo8s1m0wdQaoTBfDOQD+IuLcGPQZAWAi4sL7u7uOBwO1Go1x48fZ9iw
      Ydd7WDIy50cQRJVEzp8FXmgRIaokLhGj0cjhw4fx9PSkTZs2pKenS0FJer2eyMhIFAoFRqOR
      jIw/4whCQ0Px8fHh6NGjmM1mOnXq1GBk744dO7BarTz44IO88cYbhIWF8Z///Id3332Xjz/+
      GB8fHyn19JEjR/jss88wGo3ceuutkt/7nDlz+OCDD2jWrBlxcXGXdoMuLqLePv9MgZvuPcU4
      gStBoRAn8T79xNX47+tFIzKINg13D1Fl5uv354Tf0I6sU5c/f9frz3/N2hpISxMn/8awk/yF
      JisA+vbti8FgwM/Pj6SkJO64447rPSQZmfNjMYuBUmknxRVpcIioyujY+ZK7stvtTJ06le7d
      u3Po0CH69++P3W6nsrKSiooKDhw4wJIlSwAxavfIkSMArFu3jnHjxiEIAnv37sXb25sjR45w
      //33n3WN3r17A1BcXIxCocDd3R2dTsfx48eprq6uF1kcGxvLggULpOylxcXFtGnThmbNmjF+
      /Hi2b99+6QIARJXYieOi3jyq9aWffz50OujRUxQCVhskJED7Do17DQA3dzG+oQGcTifl5eXo
      dDrJJdhoNGIwGAgICKjnFWS1WikvL693vMkKgNTUVLy8vIiOjub//u//2L59OxEREdd7WDIy
      DVNcJAZ1VVWCp6fo4hgcctmGXpVKxZw5c1Cr1bi6ulJZWcnYsWMBMSPlI488IvmP+/n5MX78
      eJxOJ3/88QcDBw5k2rRpTJkyBVdX1/Omkd6+fTvffvstL730Ei4uLqjVavbu3UtVVRWuf4lL
      +PsOwmw2SxOaTqerV2zmknB3F/X0Vwv/ABg1RlTbXOPIf4fDwaRJkwgICCAzM5MpU6ZgMpn4
      9NNPad68OZ06daJ///4AVFZW8vrrrxMeHk5lZSXTp09n7969TVMAnDp1it9//x1PT09OnTpF
      Xl4eTdQWLnOj43SKrp2HkkUPm8hWootlQ0Fdl4BCoUCtVrNo0SIqKiqYPHkyIOaROXbsGI8+
      +uhZ5yQlJTFkyBAp5YCrqytqtRqlUtlg+cXs7Gy+/vprFi5ciE6nY//+/bRv354HH3yQ/fv3
      s379+gYDL0HMO1RXxzg9Pb3RvPOuClrtlcUvXAGvvvoqAQEB/Pbbbxw+fJhdu3YxY8YMPDzq
      B69t3ryZUaNG0b9/f9577z3S0tJYunRp0xQAIGbXq9sGRUdH07179+s8IhmZv1FdDVs3i14+
      Whfo3Vs0HDYCgiAwY8YM4uPj6xWSWb58OWPHjj1rRe5wOFi9ejWffPIJgJRsrK7gS0MpVDZu
      3IjFYmHWrFkATJo0iSVLllBUVERmZiZTp07l3Xff5bbbbuP06dNs2LCBgwcPMmvWLJ588klC
      Q0N57bXXKCsrkxKd/Z3s7Gx++OEHTCYT999/P76+vixevBiVSkVAQAATJkyo176mpoYlS5bw
      6KOPotfr+f777zl27BgTJkygdeuGVUROpxOTyYRWq0Wj0Uj1gwGpPshfn6vdbpeSSzqdToxG
      Izqd7pKDtC6ESqXC39+fdevW8dNPPzF37lw+//xz3nrrLQwGA6NHj2bQoEEAtGzZkm+//RZ/
      f39KSkrIy8tDo9E0TQEQGRnJQw89hNFoRKvVsm3bNiwWS70QaRmZ64YgiHnud+4QPUSCgqBX
      X/BuILDqMjEYDGzbto2WLVvy9ddf06lTJ6Kjo9m9ezcPPPAAINYe+P3337n77rtZv349AwcO
      lATDwIED6+WhaYgHHnhA6quOxYsXS5kxQZyQW7VqRVRU1Fm1iCdOnIjBYMDd3f2c6aO3bNnC
      6NGjsdvtvP/++9x///2oVCrGjRvXYMWuxYsXc/ToUYxGI6mpqWRmZvLkk08ybdo03nvvvbOy
      AtfW1jJjxgw0Gg1FRUXMmzeP1atXk5qaik6n49lnn5WS91VVVbFo0SIMBgNz5swB4P3336e0
      tBS73c6MGTPqJYxsDJYsWUJVVRXvvvsuWq2WVq1a8dZbb2G323n++eclARAfH8/48eNJSUlB
      qVTi7+8vRg431ZrAGzduxOFw8NNPP+Ht7U1ycjIdOzZsaAFRJ1lZWYmrqysKhQKn00lpaalU
      +q6h9nI2UJlLwukU3QB37YQD+0Q3wA4J4uR/IU+RS0SlUtGrVy9CQkIIDQ0lMDAQV1dX+vTp
      I+nev/rqKzp06EBwcDDe3t506tRJetdbtmxJUFAQ4eHhDB48uMEdQEMoFApcXFyk9j179mxw
      oq7jr20boi7v/caNG3F1dcVsNpOXl4der6dFixb1Jtzk5GTy8vLw8fGhY8eOrFmzhrvvvpvg
      4GAOHDhAQkLCWd9Zh8NBhw4dGDlypJTGIzk5mcmTJ3PzzTfXs2PUpetOS0tjwIABGAwGfvnl
      F2bPnk1+fj4Wi+WCFcsuhZqaGubOnctjjz1GZWUlGo2GzMxMysvLsdlspKWl0blzZ1JTU/Hx
      8aGqqorw8HA2bdrEhAkTSEtLa7oVwQByc3MpLS2lT58+5zUypaSk8PPPP3PgwAFWrVqFIAis
      Xr2alJQUli1bJtUJlZG5bI4dhRXL4MdEOHkc9G5w8zDRw+dCWTUvA41GQ3R0NG3atKFNmzb4
      +fmh0WjqZbW98847pUWRv79/vdWxQqGgbdu2JCQkXHZJVIVCccUrYqvVytSpU6msrOShhx6i
      b9++DB48mLKyMiZOnCi1s1gsfPLJJzz00ENSug2z2Yz+jGBVq9UNVvbT6XSEhITwxx9/sHnz
      Zrp3705VVRVvvvkmU6dOrdc2Nja2XmLInJwcqSZCfHz85VVxOw+CIHD77bdz4MAB9u3bR2lp
      KU8++SQGg4EdO3bw4osvsnz5ciorK1EqlRw4cIB169YxZcoUdDodTz/99MWpgAwGAx4eHigU
      CsrLy/H19T1ve5vNRm1tLd7n2LI6HA5Onz6NUqnE29u70VQvTqfzol/GQYMGsXLlSh5++GEM
      BoO0VWqI6Oho2rdvj9PpZOnSpVRWVqLT6Rg4cCDJycmkp6cTG3u2H7ZsWJa5KMwmOLAfxZlM
      nEJwCPQfIOamgcaJIL0MAgICbvh3eP78+fTv31/6/qrVarp27Uq3bt3YsGEDTqcTu91OeXk5
      4eHhvP/++2zduhW9Xk9UVBT79u1j8ODBlJSUoNfrz7pfQRBYsmQJZWVlfPDBB6jVaqmiV0ZG
      Bjt37qxXi1cQBOlHp9NRU1ODIAgYjUZcXV0b9Xm6u7s3WJd43Lhx0u9dunSRVHR/rXwmCAJq
      tfriBMCmTZu45ZZbyMvL4/jx41IVooYs/yBK5YqKinMKAKPRyK+//krr1q3Jzs6md+/ejeKC
      WeeidjG4uroyfvz4i2rr4uJCdXU1a9eupVOnThiNRknv91dvhb9WBLPb7ZfvuibTpFAIAlqd
      TowEVSiwx7bDoTiTLE3mvBw9epSKigrWrVtHmzZtCAwMZP369ahUKuLj4ykvL2f69OnMnTuX
      5557DkAq96jX63nllVf49ddf6dixI0ql8qzvbGFhITt37uS1114jJycHT09P/vjjD7p27Up6
      ejrBwcEcPnyY5s2bSz75VVVV5OTkEBgYyP79+yVD9RNPPHHN54R27dqd95oXlQto9erV3HTT
      Tfz888+MGzcOi8XChg0bcDgcdO7cmfz8fDp16oSrqyubN28mISGBnJwcIiIi+OWXXyQ93u23
      3y6VR9u+fTvDhg3DbDazevVqhg8fTlZWFu3bt+fgwYPExMSQnJyMm5sbRUVFREZGcuzYMWw2
      GwMGDKCsrEz6HBwcTPPmzVmxYoW0LQ0LCzvvPRUWFqJQKAgKCrrgQ6ysrGTVqlWMGDGCgIAA
      SkpKSElJYeDAgZw4cQKTyURCQv38HHIuIJlLoqIC0k6IycFaRNxQKR3+adR56Wi1WrZv345K
      pTpnHV+n04nFYjmnva6wsJDly5dLqqphw4aRn5/Pnj178PT05IEHHuCpp55i7ty5pKamkpyc
      LMUw3HvvvZw8eZKkpCS6dOnCoEGDLtpWcq24qB2A0Wjkq6++4uabb0atVrNz5066du1KYGAg
      K1euJCYmhrS0NAIDA3E6ndhsNioqKggLC8PX15chQ4bwyy+/YLVa6xlNQFyJq1QqbDYb5eXl
      AJSVleFwOMjLyyMkJITBgwcjCAJeXl5kZ2dz+PBh3N3dad++PS1btmTVqlX07t2bqKgoRowY
      cVE3XlpaSlJSEi+99NIF/yg7d+4kJiaGmpoaTCYTISEh5Ofnk5eXx969e7n99tsv6poyMufE
      xwe69bhwO5kLolKpJGN1z549z6sWViqV53XWCA4O5tlnn613LDIykr59+wKil9Cjjz6Kp6cn
      3bt3P8udPD4+nvj4+Mu9lavORS0z9Ho9DzzwALt27cJisWAwGNi9ezfr168nODiY6OhoMjIy
      2L9/P127dq13bt3q/1yWfrPZfE4/Yq1WS58+fVCpVGzYsIH09HTUarXkg1vXt1KplM6vK693
      wRtXKjl58iSvvPIKc+bMYevWredsGxcXh06no6qqCoPBgEqlYuTIkWRnZzN48GA8PT0veD0Z
      GZlrj0qluqqrbjc3Nzp3vvRUHDcKF+1e4Orqyi233MLq1avp2LEjR44cISgoCKPRiIuLCy4u
      LlRVVeHu7l6v1u65KCgoYNu2beTn59OrVy9cXFzIysrC3d2dtLS0syRpbW0tAQEBFBQUnNNz
      oC7MPDIyEj8/v/NePzIyklmzZmGz2VCr1WdFzv2V5s2bn+W+5enpKeU6kWm6mEwmdu3ahclk
      YsCAAbi6upKcnExOTg5DhgyRvExA9ArZu3cv/v7+9OrVC41Gw9GjRzlx4oS8kJC5LlyUDaCm
      pgY3NzcUCgWVlZV4enpSWVlJdXW15D9cU1ODzWbDx8cHh8MhBVZZLBb0ej21tbXodDqUSqXk
      Qw/g5eUleQEVFRVhNpvx8fHBw8OD2tpaaWI2mUwUFBRIiYyUSqVoxVarqa2txd3dHavVSl5e
      HkFBQfW+eA1RXl7ORx99REVFBQ899BAFBQUMHjz4Sp+nhGwDaBosXLiQiIgIbDYb6enpDBs2
      jMTERPr27cuOHTuYOXOm1Parr74iJiaGlJQUVCoVAwcOZP78+YwaNYq1a9fy9ttvX7ZLpYzM
      5dBkC8J88803dOnShU2bNjFmzBi+//57nnzyyUbrXxYATYO6OqzHjx9n2bJleHh4MHbsWMLD
      w5k4cSLvvfdevfZOp5MVK1YgCAIVFRUMGjSImJgYXn/9dSZNmiR5l8nIXAua7HKjdevW/Pbb
      b+Tn57N8+fILeg3JyDSEQqFgxYoVfPLJJ7zwwgtUV1dLgl+j0dTz+87NzeXhhx9m6dKl9OvX
      j/Lycpo1awaIAUe2vxcSkZG5yjTJXEAA3bt3x8PDg6NHjxIWFiYng5O5LJYvX05xcTHz5s1D
      pVLh5+dHQUEBMTExWCyWegbI5s2b8/nnn5Obm8vixYtp1aoVp06donPnzhgMBjkXlcw1p8kK
      gOrqatasWUNpaSmnTp2iXbt28vZb5pL55ptvGDhwIO+99x6tWrXitttu46233iIqKorWrVtj
      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
      /t/y1QAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
